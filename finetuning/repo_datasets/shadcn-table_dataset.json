[
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/registry.json b/registry.json\nindex cd3c210..2c6d1bb 100644\n--- a/registry.json\n+++ b/registry.json\n@@ -5,7 +5,7 @@\n   \"items\": [\n     {\n       \"name\": \"data-table\",\n-      \"type\": \"registry:component\",\n+      \"type\": \"registry:block\",\n       \"title\": \"Data Table\",\n       \"description\": \"A feature-rich data table component with server-side filtering, sorting, and pagination\",\n       \"registryDependencies\": [\n@@ -91,7 +91,7 @@\n     },\n     {\n       \"name\": \"data-table-action-bar\",\n-      \"type\": \"registry:component\",\n+      \"type\": \"registry:block\",\n       \"title\": \"Data Table Action Bar\",\n       \"description\": \"A action bar component for the data table\",\n       \"registryDependencies\": [\"button\", \"tooltip\"],\n@@ -105,7 +105,7 @@\n     },\n     {\n       \"name\": \"data-table-sort-list\",\n-      \"type\": \"registry:component\",\n+      \"type\": \"registry:block\",\n       \"title\": \"Data Table Sort List\",\n       \"description\": \"A sort list component for the data table\",\n       \"registryDependencies\": [\n@@ -138,7 +138,7 @@\n     },\n     {\n       \"name\": \"data-table-filter-list\",\n-      \"type\": \"registry:component\",\n+      \"type\": \"registry:block\",\n       \"title\": \"Data Table Filter List\",\n       \"description\": \"A filter list component for the data table\",\n       \"registryDependencies\": [\n@@ -214,7 +214,7 @@\n     },\n     {\n       \"name\": \"data-table-filter-menu\",\n-      \"type\": \"registry:component\",\n+      \"type\": \"registry:block\",\n       \"title\": \"Data Table Filter Menu\",\n       \"description\": \"A filter menu component for the data table\",\n       \"registryDependencies\": [\n@@ -283,7 +283,7 @@\n     },\n     {\n       \"name\": \"data-table-ts-doc\",\n-      \"type\": \"registry:component\",\n+      \"type\": \"registry:block\",\n       \"title\": \"Data Table TypeScript Doc\",\n       \"description\": \"A TypeScript doc for the data table\",\n       \"files\": [",
    "output": "feat: update registry (#951)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/registry.json b/registry.json\nindex 95f1d79..cd3c210 100644\n--- a/registry.json\n+++ b/registry.json\n@@ -17,6 +17,7 @@\n         \"input\",\n         \"popover\",\n         \"select\",\n+        \"separator\",\n         \"table\"\n       ],\n       \"dependencies\": [\"@tanstack/react-table\", \"lucide-react\", \"nuqs\"],\n@@ -84,7 +85,7 @@\n         {\n           \"path\": \"src/registry/new-york/types/data-table.ts\",\n           \"type\": \"registry:file\",\n-          \"target\": \"types/data-table.ts\"\n+          \"target\": \"src/registry/new-york/types/data-table.ts\"\n         }\n       ]\n     },\n@@ -131,7 +132,7 @@\n         {\n           \"path\": \"src/registry/new-york/config/data-table.ts\",\n           \"type\": \"registry:file\",\n-          \"target\": \"config/data-table.ts\"\n+          \"target\": \"src/registry/new-york/config/data-table.ts\"\n         }\n       ]\n     },\n@@ -202,12 +203,12 @@\n         {\n           \"path\": \"src/registry/new-york/config/data-table.ts\",\n           \"type\": \"registry:file\",\n-          \"target\": \"config/data-table.ts\"\n+          \"target\": \"src/registry/new-york/config/data-table.ts\"\n         },\n         {\n           \"path\": \"src/registry/new-york/types/data-table.ts\",\n           \"type\": \"registry:file\",\n-          \"target\": \"types/data-table.ts\"\n+          \"target\": \"src/registry/new-york/types/data-table.ts\"\n         }\n       ]\n     },\n@@ -271,12 +272,12 @@\n         {\n           \"path\": \"src/registry/new-york/config/data-table.ts\",\n           \"type\": \"registry:file\",\n-          \"target\": \"config/data-table.ts\"\n+          \"target\": \"src/registry/new-york/config/data-table.ts\"\n         },\n         {\n           \"path\": \"src/registry/new-york/types/data-table.ts\",\n           \"type\": \"registry:file\",\n-          \"target\": \"types/data-table.ts\"\n+          \"target\": \"src/registry/new-york/types/data-table.ts\"\n         }\n       ]\n     },\n@@ -289,7 +290,7 @@\n         {\n           \"path\": \"src/registry/new-york/types/doc.ts\",\n           \"type\": \"registry:file\",\n-          \"target\": \"types/doc.ts\"\n+          \"target\": \"src/registry/new-york/types/doc.ts\"\n         }\n       ]\n     }",
    "output": "feat: update registry (#950)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex c4ebc4d..573d4ab 100644\n--- a/package.json\n+++ b/package.json\n@@ -48,7 +48,7 @@\n     \"drizzle-orm\": \"^0.41.0\",\n     \"export-to-csv\": \"^1.4.0\",\n     \"geist\": \"^1.3.1\",\n-    \"lucide-react\": \"^0.483.0\",\n+    \"lucide-react\": \"^0.484.0\",\n     \"nanoid\": \"^5.0.9\",\n     \"next\": \"^15.1.6\",\n     \"next-themes\": \"^0.4.4\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex a5f8be8..db21d76 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -87,8 +87,8 @@ importers:\n         specifier: ^1.3.1\n         version: 1.3.1(next@15.2.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0))\n       lucide-react:\n-        specifier: ^0.483.0\n-        version: 0.483.0(react@19.0.0)\n+        specifier: ^0.484.0\n+        version: 0.484.0(react@19.0.0)\n       nanoid:\n         specifier: ^5.0.9\n         version: 5.1.5\n@@ -1833,8 +1833,8 @@ packages:\n     resolution: {integrity: sha512-123qHRfJBmo2jXDbo/a5YOQrJoHF/GNQTLzQ5+IdK5pWpceK17yRc6ozlWd25FxvGKQbIUs91fDFkXmDHTKcyA==}\n     engines: {node: 20 || >=22}\n \n-  lucide-react@0.483.0:\n-    resolution: {integrity: sha512-WldsY17Qb/T3VZdMnVQ9C3DDIP7h1ViDTHVdVGnLZcvHNg30zH/MTQ04RTORjexoGmpsXroiQXZ4QyR0kBy0FA==}\n+  lucide-react@0.484.0:\n+    resolution: {integrity: sha512-oZy8coK9kZzvqhSgfbGkPtTgyjpBvs3ukLgDPv14dSOZtBtboryWF5o8i3qen7QbGg7JhiJBz5mK1p8YoMZTLQ==}\n     peerDependencies:\n       react: ^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0\n \n@@ -3546,7 +3546,7 @@ snapshots:\n \n   lru-cache@11.0.2: {}\n \n-  lucide-react@0.483.0(react@19.0.0):\n+  lucide-react@0.484.0(react@19.0.0):\n     dependencies:\n       react: 19.0.0\n ",
    "output": "fix(deps): update dependency lucide-react to ^0.484.0 (#947)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex dcb25b8..6c71814 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -149,7 +149,7 @@ importers:\n         version: 0.6.1\n       '@types/node':\n         specifier: ^22.12.0\n-        version: 22.13.11\n+        version: 22.13.13\n       '@types/react':\n         specifier: ^19.0.8\n         version: 19.0.12\n@@ -1450,8 +1450,8 @@ packages:\n   '@types/cookie@0.6.0':\n     resolution: {integrity: sha512-4Kh9a6B2bQciAhf7FSuMRRkUWecJgJu9nPnx3yzpsfXX/c50REIqpHY4C82bXP90qrLtXtkDxTZosYO3UpOwlA==}\n \n-  '@types/node@22.13.11':\n-    resolution: {integrity: sha512-iEUCUJoU0i3VnrCmgoWCXttklWcvoCIx4jzcP22fioIVSdTmjgoEvmAO/QPw6TcS9k5FrNgn4w7q5lGOd1CT5g==}\n+  '@types/node@22.13.13':\n+    resolution: {integrity: sha512-ClsL5nMwKaBRwPcCvH8E7+nU4GxHVx1axNvMZTFHMEfNI7oahimt26P5zjVCRrjiIWj6YFXfE1v3dEp94wLcGQ==}\n \n   '@types/react-dom@19.0.4':\n     resolution: {integrity: sha512-4fSQ8vWFkg+TGhePfUzVmat3eC14TXYSsiiDSLI0dVLsrm9gZFABjPy/Qu6TKgl1tq1Bu1yDsuQgY3A3DOjCcg==}\n@@ -3210,7 +3210,7 @@ snapshots:\n   '@types/cookie@0.6.0':\n     optional: true\n \n-  '@types/node@22.13.11':\n+  '@types/node@22.13.13':\n     dependencies:\n       undici-types: 6.20.0\n ",
    "output": "chore(deps): update dependency @types/node to v22.13.13 (#944)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex f3ede95..c4ebc4d 100644\n--- a/package.json\n+++ b/package.json\n@@ -45,7 +45,7 @@\n     \"clsx\": \"^2.1.1\",\n     \"cmdk\": \"^1.0.4\",\n     \"date-fns\": \"^4.1.0\",\n-    \"drizzle-orm\": \"^0.40.0\",\n+    \"drizzle-orm\": \"^0.41.0\",\n     \"export-to-csv\": \"^1.4.0\",\n     \"geist\": \"^1.3.1\",\n     \"lucide-react\": \"^0.483.0\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex d769aec..dcb25b8 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -78,8 +78,8 @@ importers:\n         specifier: ^4.1.0\n         version: 4.1.0\n       drizzle-orm:\n-        specifier: ^0.40.0\n-        version: 0.40.1(@libsql/client-wasm@0.14.0)(gel@2.0.0)(pg@8.14.1)(postgres@3.4.5)\n+        specifier: ^0.41.0\n+        version: 0.41.0(@libsql/client-wasm@0.14.0)(gel@2.0.0)(pg@8.14.1)(postgres@3.4.5)\n       export-to-csv:\n         specifier: ^1.4.0\n         version: 1.4.0\n@@ -1576,8 +1576,8 @@ packages:\n     resolution: {integrity: sha512-l6dMSE100u7sDaTbLczibrQZjA35jLsHNqIV+jmhNVO3O8jzM6kywMOmV9uOz9ZVSCMPQhAZEFjL/qDPVrqpUA==}\n     hasBin: true\n \n-  drizzle-orm@0.40.1:\n-    resolution: {integrity: sha512-aPNhtiJiPfm3qxz1czrnIDkfvkSdKGXYeZkpG55NPTVI186LmK2fBLMi4dsHpPHlJrZeQ92D322YFPHADBALew==}\n+  drizzle-orm@0.41.0:\n+    resolution: {integrity: sha512-7A4ZxhHk9gdlXmTdPj/lREtP+3u8KvZ4yEN6MYVxBzZGex5Wtdc+CWSbu7btgF6TB0N+MNPrvW7RKBbxJchs/Q==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=4'\n@@ -3333,7 +3333,7 @@ snapshots:\n     transitivePeerDependencies:\n       - supports-color\n \n-  drizzle-orm@0.40.1(@libsql/client-wasm@0.14.0)(gel@2.0.0)(pg@8.14.1)(postgres@3.4.5):\n+  drizzle-orm@0.41.0(@libsql/client-wasm@0.14.0)(gel@2.0.0)(pg@8.14.1)(postgres@3.4.5):\n     optionalDependencies:\n       '@libsql/client-wasm': 0.14.0\n       gel: 2.0.0",
    "output": "fix(deps): update dependency drizzle-orm to ^0.41.0 (#942)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex fe0b723..d769aec 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -149,7 +149,7 @@ importers:\n         version: 0.6.1\n       '@types/node':\n         specifier: ^22.12.0\n-        version: 22.13.10\n+        version: 22.13.11\n       '@types/react':\n         specifier: ^19.0.8\n         version: 19.0.12\n@@ -1450,8 +1450,8 @@ packages:\n   '@types/cookie@0.6.0':\n     resolution: {integrity: sha512-4Kh9a6B2bQciAhf7FSuMRRkUWecJgJu9nPnx3yzpsfXX/c50REIqpHY4C82bXP90qrLtXtkDxTZosYO3UpOwlA==}\n \n-  '@types/node@22.13.10':\n-    resolution: {integrity: sha512-I6LPUvlRH+O6VRUqYOcMudhaIdUVWfsjnZavnsraHvpBwaEyMN29ry+0UVJhImYL16xsscu0aske3yA+uPOWfw==}\n+  '@types/node@22.13.11':\n+    resolution: {integrity: sha512-iEUCUJoU0i3VnrCmgoWCXttklWcvoCIx4jzcP22fioIVSdTmjgoEvmAO/QPw6TcS9k5FrNgn4w7q5lGOd1CT5g==}\n \n   '@types/react-dom@19.0.4':\n     resolution: {integrity: sha512-4fSQ8vWFkg+TGhePfUzVmat3eC14TXYSsiiDSLI0dVLsrm9gZFABjPy/Qu6TKgl1tq1Bu1yDsuQgY3A3DOjCcg==}\n@@ -3210,7 +3210,7 @@ snapshots:\n   '@types/cookie@0.6.0':\n     optional: true\n \n-  '@types/node@22.13.10':\n+  '@types/node@22.13.11':\n     dependencies:\n       undici-types: 6.20.0\n ",
    "output": "chore(deps): update dependency @types/node to v22.13.11 (#941)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 4c4e238..5fcafbc 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -91,7 +91,7 @@ importers:\n         version: 0.483.0(react@19.0.0)\n       nanoid:\n         specifier: ^5.0.9\n-        version: 5.1.4\n+        version: 5.1.5\n       next:\n         specifier: ^15.1.6\n         version: 15.2.3(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n@@ -1855,13 +1855,13 @@ packages:\n   ms@2.1.3:\n     resolution: {integrity: sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==}\n \n-  nanoid@3.3.10:\n-    resolution: {integrity: sha512-vSJJTG+t/dIKAUhUDw/dLdZ9s//5OxcHqLaDWWrW4Cdq7o6tdLIczUkMXt2MBNmk6sJRZBZRXVixs7URY1CmIg==}\n+  nanoid@3.3.11:\n+    resolution: {integrity: sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==}\n     engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1}\n     hasBin: true\n \n-  nanoid@5.1.4:\n-    resolution: {integrity: sha512-GTFcMIDgR7tqji/LpSY8rtg464VnJl/j6ypoehYnuGb+Y8qZUdtKB8WVCXon0UEZgFDbuUxpIl//6FHLHgXSNA==}\n+  nanoid@5.1.5:\n+    resolution: {integrity: sha512-Ir/+ZpE9fDsNH0hQ3C68uyThDXzYcim2EqcZ8zn8Chtt1iylPT9xXJB0kPCnqzgcEGikO9RxSrh63MsmVCU7Fw==}\n     engines: {node: ^18 || >=20}\n     hasBin: true\n \n@@ -3562,9 +3562,9 @@ snapshots:\n \n   ms@2.1.3: {}\n \n-  nanoid@3.3.10: {}\n+  nanoid@3.3.11: {}\n \n-  nanoid@5.1.4: {}\n+  nanoid@5.1.5: {}\n \n   next-themes@0.4.6(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n     dependencies:\n@@ -3654,13 +3654,13 @@ snapshots:\n \n   postcss@8.4.31:\n     dependencies:\n-      nanoid: 3.3.10\n+      nanoid: 3.3.11\n       picocolors: 1.1.1\n       source-map-js: 1.2.1\n \n   postcss@8.5.3:\n     dependencies:\n-      nanoid: 3.3.10\n+      nanoid: 3.3.11\n       picocolors: 1.1.1\n       source-map-js: 1.2.1\n ",
    "output": "fix(deps): update dependency nanoid to v5.1.5 (#938)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 97bbd5c..f3ede95 100644\n--- a/package.json\n+++ b/package.json\n@@ -48,7 +48,7 @@\n     \"drizzle-orm\": \"^0.40.0\",\n     \"export-to-csv\": \"^1.4.0\",\n     \"geist\": \"^1.3.1\",\n-    \"lucide-react\": \"^0.482.0\",\n+    \"lucide-react\": \"^0.483.0\",\n     \"nanoid\": \"^5.0.9\",\n     \"next\": \"^15.1.6\",\n     \"next-themes\": \"^0.4.4\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 67a8ec9..4c4e238 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -87,8 +87,8 @@ importers:\n         specifier: ^1.3.1\n         version: 1.3.1(next@15.2.3(react-dom@19.0.0(react@19.0.0))(react@19.0.0))\n       lucide-react:\n-        specifier: ^0.482.0\n-        version: 0.482.0(react@19.0.0)\n+        specifier: ^0.483.0\n+        version: 0.483.0(react@19.0.0)\n       nanoid:\n         specifier: ^5.0.9\n         version: 5.1.4\n@@ -1833,8 +1833,8 @@ packages:\n     resolution: {integrity: sha512-123qHRfJBmo2jXDbo/a5YOQrJoHF/GNQTLzQ5+IdK5pWpceK17yRc6ozlWd25FxvGKQbIUs91fDFkXmDHTKcyA==}\n     engines: {node: 20 || >=22}\n \n-  lucide-react@0.482.0:\n-    resolution: {integrity: sha512-XM8PzHzSrg8ATmmO+fzf+JyYlVVdQnJjuyLDj2p4V2zEtcKeBNAqAoJIGFv1x2HSBa7kT8gpYUxwdQ0g7nypfw==}\n+  lucide-react@0.483.0:\n+    resolution: {integrity: sha512-WldsY17Qb/T3VZdMnVQ9C3DDIP7h1ViDTHVdVGnLZcvHNg30zH/MTQ04RTORjexoGmpsXroiQXZ4QyR0kBy0FA==}\n     peerDependencies:\n       react: ^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0\n \n@@ -3546,7 +3546,7 @@ snapshots:\n \n   lru-cache@11.0.2: {}\n \n-  lucide-react@0.482.0(react@19.0.0):\n+  lucide-react@0.483.0(react@19.0.0):\n     dependencies:\n       react: 19.0.0\n ",
    "output": "fix(deps): update dependency lucide-react to ^0.483.0 (#937)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 6129e45..090366d 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -79,7 +79,7 @@ importers:\n         version: 4.1.0\n       drizzle-orm:\n         specifier: ^0.40.0\n-        version: 0.40.0(@libsql/client-wasm@0.14.0)(gel@2.0.0)(pg@8.14.1)(postgres@3.4.5)\n+        version: 0.40.1(@libsql/client-wasm@0.14.0)(gel@2.0.0)(pg@8.14.1)(postgres@3.4.5)\n       export-to-csv:\n         specifier: ^1.4.0\n         version: 1.4.0\n@@ -1576,8 +1576,8 @@ packages:\n     resolution: {integrity: sha512-l6dMSE100u7sDaTbLczibrQZjA35jLsHNqIV+jmhNVO3O8jzM6kywMOmV9uOz9ZVSCMPQhAZEFjL/qDPVrqpUA==}\n     hasBin: true\n \n-  drizzle-orm@0.40.0:\n-    resolution: {integrity: sha512-7ptk/HQiMSrEZHnAsSlBESXWj52VwgMmyTEfoNmpNN2ZXpcz13LwHfXTIghsAEud7Z5UJhDOp8U07ujcqme7wg==}\n+  drizzle-orm@0.40.1:\n+    resolution: {integrity: sha512-aPNhtiJiPfm3qxz1czrnIDkfvkSdKGXYeZkpG55NPTVI186LmK2fBLMi4dsHpPHlJrZeQ92D322YFPHADBALew==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=4'\n@@ -3333,7 +3333,7 @@ snapshots:\n     transitivePeerDependencies:\n       - supports-color\n \n-  drizzle-orm@0.40.0(@libsql/client-wasm@0.14.0)(gel@2.0.0)(pg@8.14.1)(postgres@3.4.5):\n+  drizzle-orm@0.40.1(@libsql/client-wasm@0.14.0)(gel@2.0.0)(pg@8.14.1)(postgres@3.4.5):\n     optionalDependencies:\n       '@libsql/client-wasm': 0.14.0\n       gel: 2.0.0",
    "output": "fix(deps): update dependency drizzle-orm to v0.40.1 (#934)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 45e8fb0..fd6da19 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -79,7 +79,7 @@ importers:\n         version: 4.1.0\n       drizzle-orm:\n         specifier: ^0.40.0\n-        version: 0.40.0(@libsql/client-wasm@0.14.0)(gel@2.0.0)(pg@8.14.0)(postgres@3.4.5)\n+        version: 0.40.0(@libsql/client-wasm@0.14.0)(gel@2.0.0)(pg@8.14.1)(postgres@3.4.5)\n       export-to-csv:\n         specifier: ^1.4.0\n         version: 1.4.0\n@@ -164,7 +164,7 @@ importers:\n         version: 0.30.5\n       pg:\n         specifier: ^8.13.1\n-        version: 8.14.0\n+        version: 8.14.1\n       postcss:\n         specifier: ^8.5.1\n         version: 8.5.3\n@@ -1943,8 +1943,8 @@ packages:\n     resolution: {integrity: sha512-qTAAlrEsl8s4OiEQY69wDvcMIdQN6wdz5ojQiOy6YRMuynxenON0O5oCpJI6lshc6scgAY8qvJ2On/p+CXY0GA==}\n     engines: {node: '>=4'}\n \n-  pg@8.14.0:\n-    resolution: {integrity: sha512-nXbVpyoaXVmdqlKEzToFf37qzyeeh7mbiXsnoWvstSqohj88yaa/I/Rq/HEVn2QPSZEuLIJa/jSpRDyzjEx4FQ==}\n+  pg@8.14.1:\n+    resolution: {integrity: sha512-0TdbqfjwIun9Fm/r89oB7RFQ0bLgduAhiIqIXOsyKoiC/L54DbuAAzIEN/9Op0f1Po9X7iCPXGoa/Ah+2aI8Xw==}\n     engines: {node: '>= 8.0.0'}\n     peerDependencies:\n       pg-native: '>=3.0.1'\n@@ -3333,11 +3333,11 @@ snapshots:\n     transitivePeerDependencies:\n       - supports-color\n \n-  drizzle-orm@0.40.0(@libsql/client-wasm@0.14.0)(gel@2.0.0)(pg@8.14.0)(postgres@3.4.5):\n+  drizzle-orm@0.40.0(@libsql/client-wasm@0.14.0)(gel@2.0.0)(pg@8.14.1)(postgres@3.4.5):\n     optionalDependencies:\n       '@libsql/client-wasm': 0.14.0\n       gel: 2.0.0\n-      pg: 8.14.0\n+      pg: 8.14.1\n       postgres: 3.4.5\n \n   eastasianwidth@0.2.0: {}\n@@ -3622,9 +3622,9 @@ snapshots:\n \n   pg-int8@1.0.1: {}\n \n-  pg-pool@3.8.0(pg@8.14.0):\n+  pg-pool@3.8.0(pg@8.14.1):\n     dependencies:\n-      pg: 8.14.0\n+      pg: 8.14.1\n \n   pg-protocol@1.8.0: {}\n \n@@ -3636,10 +3636,10 @@ snapshots:\n       postgres-date: 1.0.7\n       postgres-interval: 1.2.0\n \n-  pg@8.14.0:\n+  pg@8.14.1:\n     dependencies:\n       pg-connection-string: 2.7.0\n-      pg-pool: 3.8.0(pg@8.14.0)\n+      pg-pool: 3.8.0(pg@8.14.1)\n       pg-protocol: 1.8.0\n       pg-types: 2.2.0\n       pgpass: 1.0.5",
    "output": "chore(deps): update dependency pg to v8.14.1 (#933)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 86dca50..45e8fb0 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -91,7 +91,7 @@ importers:\n         version: 0.482.0(react@19.0.0)\n       nanoid:\n         specifier: ^5.0.9\n-        version: 5.1.3\n+        version: 5.1.4\n       next:\n         specifier: ^15.1.6\n         version: 15.2.2(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n@@ -1855,13 +1855,13 @@ packages:\n   ms@2.1.3:\n     resolution: {integrity: sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==}\n \n-  nanoid@3.3.9:\n-    resolution: {integrity: sha512-SppoicMGpZvbF1l3z4x7No3OlIjP7QJvC9XR7AhZr1kL133KHnKPztkKDc+Ir4aJ/1VhTySrtKhrsycmrMQfvg==}\n+  nanoid@3.3.10:\n+    resolution: {integrity: sha512-vSJJTG+t/dIKAUhUDw/dLdZ9s//5OxcHqLaDWWrW4Cdq7o6tdLIczUkMXt2MBNmk6sJRZBZRXVixs7URY1CmIg==}\n     engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1}\n     hasBin: true\n \n-  nanoid@5.1.3:\n-    resolution: {integrity: sha512-zAbEOEr7u2CbxwoMRlz/pNSpRP0FdAU4pRaYunCdEezWohXFs+a0Xw7RfkKaezMsmSM1vttcLthJtwRnVtOfHQ==}\n+  nanoid@5.1.4:\n+    resolution: {integrity: sha512-GTFcMIDgR7tqji/LpSY8rtg464VnJl/j6ypoehYnuGb+Y8qZUdtKB8WVCXon0UEZgFDbuUxpIl//6FHLHgXSNA==}\n     engines: {node: ^18 || >=20}\n     hasBin: true\n \n@@ -3562,9 +3562,9 @@ snapshots:\n \n   ms@2.1.3: {}\n \n-  nanoid@3.3.9: {}\n+  nanoid@3.3.10: {}\n \n-  nanoid@5.1.3: {}\n+  nanoid@5.1.4: {}\n \n   next-themes@0.4.6(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n     dependencies:\n@@ -3654,13 +3654,13 @@ snapshots:\n \n   postcss@8.4.31:\n     dependencies:\n-      nanoid: 3.3.9\n+      nanoid: 3.3.10\n       picocolors: 1.1.1\n       source-map-js: 1.2.1\n \n   postcss@8.5.3:\n     dependencies:\n-      nanoid: 3.3.9\n+      nanoid: 3.3.10\n       picocolors: 1.1.1\n       source-map-js: 1.2.1\n ",
    "output": "fix(deps): update dependency nanoid to v5.1.4 (#931)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex e5f3c75..97bbd5c 100644\n--- a/package.json\n+++ b/package.json\n@@ -48,7 +48,7 @@\n     \"drizzle-orm\": \"^0.40.0\",\n     \"export-to-csv\": \"^1.4.0\",\n     \"geist\": \"^1.3.1\",\n-    \"lucide-react\": \"^0.479.0\",\n+    \"lucide-react\": \"^0.482.0\",\n     \"nanoid\": \"^5.0.9\",\n     \"next\": \"^15.1.6\",\n     \"next-themes\": \"^0.4.4\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex d8b66ae..36e77eb 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -87,8 +87,8 @@ importers:\n         specifier: ^1.3.1\n         version: 1.3.1(next@15.2.2(react-dom@19.0.0(react@19.0.0))(react@19.0.0))\n       lucide-react:\n-        specifier: ^0.479.0\n-        version: 0.479.0(react@19.0.0)\n+        specifier: ^0.482.0\n+        version: 0.482.0(react@19.0.0)\n       nanoid:\n         specifier: ^5.0.9\n         version: 5.1.3\n@@ -1855,8 +1855,8 @@ packages:\n     resolution: {integrity: sha512-123qHRfJBmo2jXDbo/a5YOQrJoHF/GNQTLzQ5+IdK5pWpceK17yRc6ozlWd25FxvGKQbIUs91fDFkXmDHTKcyA==}\n     engines: {node: 20 || >=22}\n \n-  lucide-react@0.479.0:\n-    resolution: {integrity: sha512-aBhNnveRhorBOK7uA4gDjgaf+YlHMdMhQ/3cupk6exM10hWlEU+2QtWYOfhXhjAsmdb6LeKR+NZnow4UxRRiTQ==}\n+  lucide-react@0.482.0:\n+    resolution: {integrity: sha512-XM8PzHzSrg8ATmmO+fzf+JyYlVVdQnJjuyLDj2p4V2zEtcKeBNAqAoJIGFv1x2HSBa7kT8gpYUxwdQ0g7nypfw==}\n     peerDependencies:\n       react: ^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0\n \n@@ -3589,7 +3589,7 @@ snapshots:\n \n   lru-cache@11.0.2: {}\n \n-  lucide-react@0.479.0(react@19.0.0):\n+  lucide-react@0.482.0(react@19.0.0):\n     dependencies:\n       react: 19.0.0\n ",
    "output": "fix(deps): update dependency lucide-react to ^0.482.0 (#930)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex f266138..5fc343d 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -79,7 +79,7 @@ importers:\n         version: 4.1.0\n       drizzle-orm:\n         specifier: ^0.40.0\n-        version: 0.40.0(@libsql/client-wasm@0.14.0)(gel@2.0.0)(pg@8.13.3)(postgres@3.4.5)\n+        version: 0.40.0(@libsql/client-wasm@0.14.0)(gel@2.0.0)(pg@8.14.0)(postgres@3.4.5)\n       export-to-csv:\n         specifier: ^1.4.0\n         version: 1.4.0\n@@ -164,7 +164,7 @@ importers:\n         version: 0.30.5\n       pg:\n         specifier: ^8.13.1\n-        version: 8.13.3\n+        version: 8.14.0\n       postcss:\n         specifier: ^8.5.1\n         version: 8.5.3\n@@ -1953,20 +1953,20 @@ packages:\n     resolution: {integrity: sha512-WCtabS6t3c8SkpDBUlb1kjOs7l66xsGdKpIPZsg4wR+B3+u9UAum2odSsF9tnvxg80h4ZxLWMy4pRjOsFIqQpw==}\n     engines: {node: '>=4.0.0'}\n \n-  pg-pool@3.7.1:\n-    resolution: {integrity: sha512-xIOsFoh7Vdhojas6q3596mXFsR8nwBQBXX5JiV7p9buEVAGqYL4yFzclON5P9vFrpu1u7Zwl2oriyDa89n0wbw==}\n+  pg-pool@3.8.0:\n+    resolution: {integrity: sha512-VBw3jiVm6ZOdLBTIcXLNdSotb6Iy3uOCwDGFAksZCXmi10nyRvnP2v3jl4d+IsLYRyXf6o9hIm/ZtUzlByNUdw==}\n     peerDependencies:\n       pg: '>=8.0'\n \n-  pg-protocol@1.7.1:\n-    resolution: {integrity: sha512-gjTHWGYWsEgy9MsY0Gp6ZJxV24IjDqdpTW7Eh0x+WfJLFsm/TJx1MzL6T0D88mBvkpxotCQ6TwW6N+Kko7lhgQ==}\n+  pg-protocol@1.8.0:\n+    resolution: {integrity: sha512-jvuYlEkL03NRvOoyoRktBK7+qU5kOvlAwvmrH8sr3wbLrOdVWsRxQfz8mMy9sZFsqJ1hEWNfdWKI4SAmoL+j7g==}\n \n   pg-types@2.2.0:\n     resolution: {integrity: sha512-qTAAlrEsl8s4OiEQY69wDvcMIdQN6wdz5ojQiOy6YRMuynxenON0O5oCpJI6lshc6scgAY8qvJ2On/p+CXY0GA==}\n     engines: {node: '>=4'}\n \n-  pg@8.13.3:\n-    resolution: {integrity: sha512-P6tPt9jXbL9HVu/SSRERNYaYG++MjnscnegFh9pPHihfoBSujsrka0hyuymMzeJKFWrcG8wvCKy8rCe8e5nDUQ==}\n+  pg@8.14.0:\n+    resolution: {integrity: sha512-nXbVpyoaXVmdqlKEzToFf37qzyeeh7mbiXsnoWvstSqohj88yaa/I/Rq/HEVn2QPSZEuLIJa/jSpRDyzjEx4FQ==}\n     engines: {node: '>= 8.0.0'}\n     peerDependencies:\n       pg-native: '>=3.0.1'\n@@ -3376,11 +3376,11 @@ snapshots:\n     transitivePeerDependencies:\n       - supports-color\n \n-  drizzle-orm@0.40.0(@libsql/client-wasm@0.14.0)(gel@2.0.0)(pg@8.13.3)(postgres@3.4.5):\n+  drizzle-orm@0.40.0(@libsql/client-wasm@0.14.0)(gel@2.0.0)(pg@8.14.0)(postgres@3.4.5):\n     optionalDependencies:\n       '@libsql/client-wasm': 0.14.0\n       gel: 2.0.0\n-      pg: 8.13.3\n+      pg: 8.14.0\n       postgres: 3.4.5\n \n   eastasianwidth@0.2.0: {}\n@@ -3665,11 +3665,11 @@ snapshots:\n \n   pg-int8@1.0.1: {}\n \n-  pg-pool@3.7.1(pg@8.13.3):\n+  pg-pool@3.8.0(pg@8.14.0):\n     dependencies:\n-      pg: 8.13.3\n+      pg: 8.14.0\n \n-  pg-protocol@1.7.1: {}\n+  pg-protocol@1.8.0: {}\n \n   pg-types@2.2.0:\n     dependencies:\n@@ -3679,11 +3679,11 @@ snapshots:\n       postgres-date: 1.0.7\n       postgres-interval: 1.2.0\n \n-  pg@8.13.3:\n+  pg@8.14.0:\n     dependencies:\n       pg-connection-string: 2.7.0\n-      pg-pool: 3.7.1(pg@8.13.3)\n-      pg-protocol: 1.7.1\n+      pg-pool: 3.8.0(pg@8.14.0)\n+      pg-protocol: 1.8.0\n       pg-types: 2.2.0\n       pgpass: 1.0.5\n     optionalDependencies:",
    "output": "chore(deps): update dependency pg to v8.14.0 (#926)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 175b3ce..f266138 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -97,7 +97,7 @@ importers:\n         version: 15.2.2(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n       next-themes:\n         specifier: ^0.4.4\n-        version: 0.4.5(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n+        version: 0.4.6(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n       nuqs:\n         specifier: ^2.3.1\n         version: 2.4.1(@remix-run/react@2.13.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)(typescript@5.8.2))(next@15.2.2(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router-dom@6.27.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router@6.27.0(react@19.0.0))(react@19.0.0)\n@@ -1887,8 +1887,8 @@ packages:\n     engines: {node: ^18 || >=20}\n     hasBin: true\n \n-  next-themes@0.4.5:\n-    resolution: {integrity: sha512-E8/gYKBxZknOXBiDk/sRokAvkOw35PTUD4Gxtq1eBhd0r4Dx5S42zU65/q8ozR5rcSG2ZlE1E3+ShlUpC7an+A==}\n+  next-themes@0.4.6:\n+    resolution: {integrity: sha512-pZvgD5L0IEvX5/9GWyHMf3m8BKiVQwsCMHfoFosXtXBMnaS0ZnIJ9ST4b4NqLVKDEm8QBxoNNGNaBv2JNF6XNA==}\n     peerDependencies:\n       react: ^16.8 || ^17 || ^18 || ^19 || ^19.0.0-rc\n       react-dom: ^16.8 || ^17 || ^18 || ^19 || ^19.0.0-rc\n@@ -3609,7 +3609,7 @@ snapshots:\n \n   nanoid@5.1.3: {}\n \n-  next-themes@0.4.5(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n+  next-themes@0.4.6(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n     dependencies:\n       react: 19.0.0\n       react-dom: 19.0.0(react@19.0.0)",
    "output": "fix(deps): update dependency next-themes to v0.4.6 (#927)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/docker-compose.yml b/docker-compose.yml\nindex 8d6aabe..0e3bab0 100644\n--- a/docker-compose.yml\n+++ b/docker-compose.yml\n@@ -1,6 +1,6 @@\n services:\n   shadcn-table:\n-    image: postgres:16.8\n+    image: postgres:17.4\n     restart: always\n     container_name: shadcn-table\n     ports:",
    "output": "chore(deps): update postgres docker tag to v17 (#923)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/docker-compose.yml b/docker-compose.yml\nindex e3d5ec5..8d6aabe 100644\n--- a/docker-compose.yml\n+++ b/docker-compose.yml\n@@ -1,6 +1,6 @@\n services:\n   shadcn-table:\n-    image: postgres:16.4\n+    image: postgres:16.8\n     restart: always\n     container_name: shadcn-table\n     ports:",
    "output": "chore(deps): update postgres docker tag to v16.8 (#922)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/.env.example b/.env.example\nindex 59558dc..bb7711b 100644\n--- a/.env.example\n+++ b/.env.example\n@@ -10,4 +10,9 @@\n # should be updated accordingly.\n \n # Database\n-DATABASE_URL=\"postgres://YOUR_POSTGRESQL_URL\"\n+DB_HOST=localhost\n+DB_USER=shadcntable\n+DB_PASSWORD=securepassword\n+DB_NAME=shadcntable\n+DB_PORT=5432\n+DATABASE_URL=`postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}`\ndiff --git a/.gitignore b/.gitignore\nindex 2971a0b..77dd373 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -11,6 +11,7 @@\n # database\n /prisma/db.sqlite\n /prisma/db.sqlite-journal\n+docker-data\n \n # next.js\n /.next/\ndiff --git a/README.md b/README.md\nindex d5a42a5..cdc126d 100644\n--- a/README.md\n+++ b/README.md\n@@ -48,10 +48,10 @@ This is a shadcn table with server-side sorting, filtering, and pagination. It i\n    cp .env.example .env\n    ```\n \n-4. Start the development server\n+4. (Optional) Run database using docker-compose.yml file\n \n    ```bash\n-   pnpm run dev\n+   docker compose up\n    ```\n \n 5. Push the database schema\n@@ -60,6 +60,18 @@ This is a shadcn table with server-side sorting, filtering, and pagination. It i\n    pnpm run db:push\n    ```\n \n+6. Seed the database\n+\n+   ```bash\n+   pnpm run db:seed\n+   ```\n+\n+7. Start the development server\n+\n+   ```bash\n+   pnpm run dev\n+   ```\n+\n ## Build your own Table\n \n 1. Copy the following folders and files into your project (configured with ) at the exact specific locations\ndiff --git a/docker-compose.yml b/docker-compose.yml\nnew file mode 100644\nindex 0000000..e3d5ec5\n--- /dev/null\n+++ b/docker-compose.yml\n@@ -0,0 +1,16 @@\n+services:\n+  shadcn-table:\n+    image: postgres:16.4\n+    restart: always\n+    container_name: shadcn-table\n+    ports:\n+      - ${DB_PORT}:5432\n+    environment:\n+      - POSTGRES_PASSWORD=${DB_PASSWORD}\n+      - POSTGRES_USER=${DB_USER}\n+      - POSTGRES_DB=${DB_NAME}\n+    volumes:\n+      - ./docker-data/db:/var/lib/postgresql/data\n+\n+volumes:\n+  postgres:",
    "output": "chore: optionally add docker-compose for running database locally (#837)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex d458ef7..fae4e30 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -97,7 +97,7 @@ importers:\n         version: 15.2.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n       next-themes:\n         specifier: ^0.4.4\n-        version: 0.4.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n+        version: 0.4.5(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n       nuqs:\n         specifier: ^2.3.1\n         version: 2.4.1(@remix-run/react@2.13.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)(typescript@5.8.2))(next@15.2.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router-dom@6.27.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router@6.27.0(react@19.0.0))(react@19.0.0)\n@@ -1887,8 +1887,8 @@ packages:\n     engines: {node: ^18 || >=20}\n     hasBin: true\n \n-  next-themes@0.4.4:\n-    resolution: {integrity: sha512-LDQ2qIOJF0VnuVrrMSMLrWGjRMkq+0mpgl6e0juCLqdJ+oo8Q84JRWT6Wh11VDQKkMMe+dVzDKLWs5n87T+PkQ==}\n+  next-themes@0.4.5:\n+    resolution: {integrity: sha512-E8/gYKBxZknOXBiDk/sRokAvkOw35PTUD4Gxtq1eBhd0r4Dx5S42zU65/q8ozR5rcSG2ZlE1E3+ShlUpC7an+A==}\n     peerDependencies:\n       react: ^16.8 || ^17 || ^18 || ^19 || ^19.0.0-rc\n       react-dom: ^16.8 || ^17 || ^18 || ^19 || ^19.0.0-rc\n@@ -3609,7 +3609,7 @@ snapshots:\n \n   nanoid@5.1.3: {}\n \n-  next-themes@0.4.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n+  next-themes@0.4.5(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n     dependencies:\n       react: 19.0.0\n       react-dom: 19.0.0(react@19.0.0)",
    "output": "fix(deps): update dependency next-themes to v0.4.5 (#921)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 4c125c8..e5f3c75 100644\n--- a/package.json\n+++ b/package.json\n@@ -48,7 +48,7 @@\n     \"drizzle-orm\": \"^0.40.0\",\n     \"export-to-csv\": \"^1.4.0\",\n     \"geist\": \"^1.3.1\",\n-    \"lucide-react\": \"^0.477.0\",\n+    \"lucide-react\": \"^0.479.0\",\n     \"nanoid\": \"^5.0.9\",\n     \"next\": \"^15.1.6\",\n     \"next-themes\": \"^0.4.4\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex ff9c5fc..d458ef7 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -87,8 +87,8 @@ importers:\n         specifier: ^1.3.1\n         version: 1.3.1(next@15.2.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0))\n       lucide-react:\n-        specifier: ^0.477.0\n-        version: 0.477.0(react@19.0.0)\n+        specifier: ^0.479.0\n+        version: 0.479.0(react@19.0.0)\n       nanoid:\n         specifier: ^5.0.9\n         version: 5.1.3\n@@ -1855,8 +1855,8 @@ packages:\n     resolution: {integrity: sha512-123qHRfJBmo2jXDbo/a5YOQrJoHF/GNQTLzQ5+IdK5pWpceK17yRc6ozlWd25FxvGKQbIUs91fDFkXmDHTKcyA==}\n     engines: {node: 20 || >=22}\n \n-  lucide-react@0.477.0:\n-    resolution: {integrity: sha512-yCf7aYxerFZAbd8jHJxjwe1j7jEMPptjnaOqdYeirFnEy85cNR3/L+o0I875CYFYya+eEVzZSbNuRk8BZPDpVw==}\n+  lucide-react@0.479.0:\n+    resolution: {integrity: sha512-aBhNnveRhorBOK7uA4gDjgaf+YlHMdMhQ/3cupk6exM10hWlEU+2QtWYOfhXhjAsmdb6LeKR+NZnow4UxRRiTQ==}\n     peerDependencies:\n       react: ^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0\n \n@@ -3589,7 +3589,7 @@ snapshots:\n \n   lru-cache@11.0.2: {}\n \n-  lucide-react@0.477.0(react@19.0.0):\n+  lucide-react@0.479.0(react@19.0.0):\n     dependencies:\n       react: 19.0.0\n ",
    "output": "fix(deps): update dependency lucide-react to ^0.479.0 (#917)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex cfe9479..ff9c5fc 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -140,7 +140,7 @@ importers:\n         version: 1.9.4\n       '@faker-js/faker':\n         specifier: ^9.4.0\n-        version: 9.5.1\n+        version: 9.6.0\n       '@tailwindcss/postcss':\n         specifier: ^4.0.12\n         version: 4.0.12\n@@ -702,10 +702,9 @@ packages:\n     cpu: [x64]\n     os: [win32]\n \n-  '@faker-js/faker@9.5.1':\n-    resolution: {integrity: sha512-0fzMEDxkExR2cn731kpDaCCnBGBUOIXEi2S1N5l8Hltp6aPf4soTMJ+g4k8r2sI5oB+rpwIW8Uy/6jkwGpnWPg==}\n+  '@faker-js/faker@9.6.0':\n+    resolution: {integrity: sha512-3vm4by+B5lvsFPSyep3ELWmZfE3kicDtmemVpuwl1yH7tqtnHdsA6hG8fbXedMVdkzgtvzWoRgjSB4Q+FHnZiw==}\n     engines: {node: '>=18.0.0', npm: '>=9.0.0'}\n-    deprecated: Please update to a newer version\n \n   '@floating-ui/core@1.6.9':\n     resolution: {integrity: sha512-uMXCuQ3BItDUbAMhIXw7UPXRfAlOAvZzdK9BWpE60MCn+Svt3aLn9jsPTi/WNGlRUu2uI0v5S7JiIUsbsvh3fw==}\n@@ -2564,7 +2563,7 @@ snapshots:\n   '@esbuild/win32-x64@0.25.0':\n     optional: true\n \n-  '@faker-js/faker@9.5.1': {}\n+  '@faker-js/faker@9.6.0': {}\n \n   '@floating-ui/core@1.6.9':\n     dependencies:",
    "output": "chore(deps): update dependency @faker-js/faker to v9.6.0 (#916)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 2055a54..cfe9479 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -100,7 +100,7 @@ importers:\n         version: 0.4.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n       nuqs:\n         specifier: ^2.3.1\n-        version: 2.4.0(@remix-run/react@2.13.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)(typescript@5.8.2))(next@15.2.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router-dom@6.27.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router@6.27.0(react@19.0.0))(react@19.0.0)\n+        version: 2.4.1(@remix-run/react@2.13.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)(typescript@5.8.2))(next@15.2.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router-dom@6.27.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router@6.27.0(react@19.0.0))(react@19.0.0)\n       postgres:\n         specifier: ^3.4.5\n         version: 3.4.5\n@@ -1915,8 +1915,8 @@ packages:\n       sass:\n         optional: true\n \n-  nuqs@2.4.0:\n-    resolution: {integrity: sha512-+yOdX0q/wdYlseSYtWC8StDDt2QFcYX/zV5/E67J1cOJo3PR0mggxMx4acZGC0Hu66xFHENKQkqI2zSpH742xQ==}\n+  nuqs@2.4.1:\n+    resolution: {integrity: sha512-u6sngTspqDe3jWHtcmqHQg3dl35niizCZAsm5gy7PBlgG2rwl71Dp2QUv5hwBaWKI9qz0wqILZY86TsRxq66SQ==}\n     peerDependencies:\n       '@remix-run/react': '>=2'\n       next: '>=14.2.0'\n@@ -3640,7 +3640,7 @@ snapshots:\n       - '@babel/core'\n       - babel-plugin-macros\n \n-  nuqs@2.4.0(@remix-run/react@2.13.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)(typescript@5.8.2))(next@15.2.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router-dom@6.27.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router@6.27.0(react@19.0.0))(react@19.0.0):\n+  nuqs@2.4.1(@remix-run/react@2.13.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)(typescript@5.8.2))(next@15.2.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router-dom@6.27.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router@6.27.0(react@19.0.0))(react@19.0.0):\n     dependencies:\n       mitt: 3.0.1\n       react: 19.0.0",
    "output": "fix(deps): update dependency nuqs to v2.4.1 (#914)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 6cce99b..b6b9e0c 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -149,7 +149,7 @@ importers:\n         version: 0.6.1\n       '@types/node':\n         specifier: ^22.12.0\n-        version: 22.13.9\n+        version: 22.13.10\n       '@types/react':\n         specifier: ^19.0.8\n         version: 19.0.10\n@@ -1473,8 +1473,8 @@ packages:\n   '@types/cookie@0.6.0':\n     resolution: {integrity: sha512-4Kh9a6B2bQciAhf7FSuMRRkUWecJgJu9nPnx3yzpsfXX/c50REIqpHY4C82bXP90qrLtXtkDxTZosYO3UpOwlA==}\n \n-  '@types/node@22.13.9':\n-    resolution: {integrity: sha512-acBjXdRJ3A6Pb3tqnw9HZmyR3Fiol3aGxRCK1x3d+6CDAMjl7I649wpSd+yNURCjbOUGu9tqtLKnTGxmK6CyGw==}\n+  '@types/node@22.13.10':\n+    resolution: {integrity: sha512-I6LPUvlRH+O6VRUqYOcMudhaIdUVWfsjnZavnsraHvpBwaEyMN29ry+0UVJhImYL16xsscu0aske3yA+uPOWfw==}\n \n   '@types/react-dom@19.0.4':\n     resolution: {integrity: sha512-4fSQ8vWFkg+TGhePfUzVmat3eC14TXYSsiiDSLI0dVLsrm9gZFABjPy/Qu6TKgl1tq1Bu1yDsuQgY3A3DOjCcg==}\n@@ -3254,7 +3254,7 @@ snapshots:\n   '@types/cookie@0.6.0':\n     optional: true\n \n-  '@types/node@22.13.9':\n+  '@types/node@22.13.10':\n     dependencies:\n       undici-types: 6.20.0\n ",
    "output": "chore(deps): update dependency @types/node to v22.13.10 (#920)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex b930f46..6cce99b 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -91,7 +91,7 @@ importers:\n         version: 0.477.0(react@19.0.0)\n       nanoid:\n         specifier: ^5.0.9\n-        version: 5.1.2\n+        version: 5.1.3\n       next:\n         specifier: ^15.1.6\n         version: 15.2.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n@@ -1878,13 +1878,13 @@ packages:\n   ms@2.1.3:\n     resolution: {integrity: sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==}\n \n-  nanoid@3.3.8:\n-    resolution: {integrity: sha512-WNLf5Sd8oZxOm+TzppcYk8gVOgP+l58xNy58D0nbUnOxOWRWvlcCV4kUF7ltmI6PsrLl/BgKEyS4mqsGChFN0w==}\n+  nanoid@3.3.9:\n+    resolution: {integrity: sha512-SppoicMGpZvbF1l3z4x7No3OlIjP7QJvC9XR7AhZr1kL133KHnKPztkKDc+Ir4aJ/1VhTySrtKhrsycmrMQfvg==}\n     engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1}\n     hasBin: true\n \n-  nanoid@5.1.2:\n-    resolution: {integrity: sha512-b+CiXQCNMUGe0Ri64S9SXFcP9hogjAJ2Rd6GdVxhPLRm7mhGaM7VgOvCAJ1ZshfHbqVDI3uqTI5C8/GaKuLI7g==}\n+  nanoid@5.1.3:\n+    resolution: {integrity: sha512-zAbEOEr7u2CbxwoMRlz/pNSpRP0FdAU4pRaYunCdEezWohXFs+a0Xw7RfkKaezMsmSM1vttcLthJtwRnVtOfHQ==}\n     engines: {node: ^18 || >=20}\n     hasBin: true\n \n@@ -3606,9 +3606,9 @@ snapshots:\n \n   ms@2.1.3: {}\n \n-  nanoid@3.3.8: {}\n+  nanoid@3.3.9: {}\n \n-  nanoid@5.1.2: {}\n+  nanoid@5.1.3: {}\n \n   next-themes@0.4.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n     dependencies:\n@@ -3698,13 +3698,13 @@ snapshots:\n \n   postcss@8.4.31:\n     dependencies:\n-      nanoid: 3.3.8\n+      nanoid: 3.3.9\n       picocolors: 1.1.1\n       source-map-js: 1.2.1\n \n   postcss@8.5.3:\n     dependencies:\n-      nanoid: 3.3.8\n+      nanoid: 3.3.9\n       picocolors: 1.1.1\n       source-map-js: 1.2.1\n ",
    "output": "fix(deps): update dependency nanoid to v5.1.3 (#915)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/app/layout.tsx b/src/app/layout.tsx\nindex 8137c18..cbdfd6a 100644\n--- a/src/app/layout.tsx\n+++ b/src/app/layout.tsx\n@@ -10,6 +10,7 @@ import type { Metadata, Viewport } from \"next\";\n \n import { Toaster } from \"@/components/ui/toaster\";\n import { fontMono, fontSans } from \"@/lib/fonts\";\n+import Script from \"next/script\";\n \n export const metadata: Metadata = {\n   metadataBase: new URL(siteConfig.url),\n@@ -74,6 +75,11 @@ export default function RootLayout({ children }: React.PropsWithChildren) {\n           fontMono.variable,\n         )}\n       >\n+        <Script\n+          defer\n+          data-site-id={siteConfig.url}\n+          src=\"https://assets.onedollarstats.com/stonks.js\"\n+        />\n         <ThemeProvider\n           attribute=\"class\"\n           defaultTheme=\"system\"",
    "output": "chore: add analytics (#919)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex a3b232b..585bdc0 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -22,7 +22,7 @@ importers:\n         version: 3.2.2(react@19.0.0)\n       '@hookform/resolvers':\n         specifier: ^4.0.0\n-        version: 4.1.2(react-hook-form@7.54.2(react@19.0.0))\n+        version: 4.1.3(react-hook-form@7.54.2(react@19.0.0))\n       '@radix-ui/react-checkbox':\n         specifier: ^1.1.3\n         version: 1.1.4(@types/react-dom@19.0.4(@types/react@19.0.10))(@types/react@19.0.10)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n@@ -722,8 +722,8 @@ packages:\n   '@floating-ui/utils@0.2.9':\n     resolution: {integrity: sha512-MDWhGtE+eHw5JW7lq4qhc5yRLS11ERl1c7Z6Xd0a58DozHES6EnNNwUWbMiG4J9Cgj053Bhk8zvlhFYKVhULwg==}\n \n-  '@hookform/resolvers@4.1.2':\n-    resolution: {integrity: sha512-wl6H9c9wLOZMJAqGLEVKzbCkxJuV+BYuLFZFCQtCwMe0b3qQk4kUBd/ZAj13SwcSqcx86rCgSCyngQfmA6DOWg==}\n+  '@hookform/resolvers@4.1.3':\n+    resolution: {integrity: sha512-Jsv6UOWYTrEFJ/01ZrnwVXs7KDvP8XIo115i++5PWvNkNvkrsTfGiLS6w+eJ57CYtUtDQalUWovCZDHFJ8u1VQ==}\n     peerDependencies:\n       react-hook-form: ^7.0.0\n \n@@ -2746,7 +2746,7 @@ snapshots:\n \n   '@floating-ui/utils@0.2.9': {}\n \n-  '@hookform/resolvers@4.1.2(react-hook-form@7.54.2(react@19.0.0))':\n+  '@hookform/resolvers@4.1.3(react-hook-form@7.54.2(react@19.0.0))':\n     dependencies:\n       '@standard-schema/utils': 0.3.0\n       react-hook-form: 7.54.2(react@19.0.0)",
    "output": "fix(deps): update dependency @hookform/resolvers to v4.1.3 (#910)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 20ba9df..a3b232b 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -146,7 +146,7 @@ importers:\n         version: 0.6.1\n       '@types/node':\n         specifier: ^22.12.0\n-        version: 22.13.8\n+        version: 22.13.9\n       '@types/react':\n         specifier: ^19.0.8\n         version: 19.0.10\n@@ -705,6 +705,7 @@ packages:\n   '@faker-js/faker@9.5.1':\n     resolution: {integrity: sha512-0fzMEDxkExR2cn731kpDaCCnBGBUOIXEi2S1N5l8Hltp6aPf4soTMJ+g4k8r2sI5oB+rpwIW8Uy/6jkwGpnWPg==}\n     engines: {node: '>=18.0.0', npm: '>=9.0.0'}\n+    deprecated: Please update to a newer version\n \n   '@floating-ui/core@1.6.9':\n     resolution: {integrity: sha512-uMXCuQ3BItDUbAMhIXw7UPXRfAlOAvZzdK9BWpE60MCn+Svt3aLn9jsPTi/WNGlRUu2uI0v5S7JiIUsbsvh3fw==}\n@@ -1430,8 +1431,8 @@ packages:\n   '@types/cookie@0.6.0':\n     resolution: {integrity: sha512-4Kh9a6B2bQciAhf7FSuMRRkUWecJgJu9nPnx3yzpsfXX/c50REIqpHY4C82bXP90qrLtXtkDxTZosYO3UpOwlA==}\n \n-  '@types/node@22.13.8':\n-    resolution: {integrity: sha512-G3EfaZS+iOGYWLLRCEAXdWK9my08oHNZ+FHluRiggIYJPOXzhOiDgpVCUHaUvyIC5/fj7C/p637jdzC666AOKQ==}\n+  '@types/node@22.13.9':\n+    resolution: {integrity: sha512-acBjXdRJ3A6Pb3tqnw9HZmyR3Fiol3aGxRCK1x3d+6CDAMjl7I649wpSd+yNURCjbOUGu9tqtLKnTGxmK6CyGw==}\n \n   '@types/react-dom@19.0.4':\n     resolution: {integrity: sha512-4fSQ8vWFkg+TGhePfUzVmat3eC14TXYSsiiDSLI0dVLsrm9gZFABjPy/Qu6TKgl1tq1Bu1yDsuQgY3A3DOjCcg==}\n@@ -3386,7 +3387,7 @@ snapshots:\n   '@types/cookie@0.6.0':\n     optional: true\n \n-  '@types/node@22.13.8':\n+  '@types/node@22.13.9':\n     dependencies:\n       undici-types: 6.20.0\n ",
    "output": "chore(deps): update dependency @types/node to v22.13.9 (#911)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/.github/workflows/code-check.yml b/.github/workflows/code-check.yml\nindex 977c19b..8402d4f 100644\n--- a/.github/workflows/code-check.yml\n+++ b/.github/workflows/code-check.yml\n@@ -14,6 +14,20 @@ env:\n   FORCE_COLOR: 3\n \n jobs:\n+  format:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Checkout repo\n+        uses: actions/checkout@v4\n+      - name: Setup pnpm\n+        uses: pnpm/action-setup@v4\n+        with:\n+          version: 9.15.4\n+      - uses: ./.github/setup\n+\n+      - name: Check formatting\n+        run: pnpm lint:fix\n+\n   lint:\n     runs-on: ubuntu-latest\n     name: Lint\ndiff --git a/src/components/data-table/data-table-sort-list.tsx b/src/components/data-table/data-table-sort-list.tsx\nindex 2ddb3ae..86a273c 100644\n--- a/src/components/data-table/data-table-sort-list.tsx\n+++ b/src/components/data-table/data-table-sort-list.tsx\n@@ -234,7 +234,7 @@ export function DataTableSortList<TData>({\n                         </PopoverTrigger>\n                         <PopoverContent\n                           id={fieldListboxId}\n-                          className=\"w-[var(--radix-popover-trigger-width)] p-0\"\n+                          className=\"w-[var(--radix-popover-trigger-width)] origin-[var(--radix-popover-content-transform-origin)] p-0\"\n                           onCloseAutoFocus={() =>\n                             document.getElementById(fieldTriggerId)?.focus()\n                           }\ndiff --git a/src/hooks/use-data-table.ts b/src/hooks/use-data-table.ts\nindex 974a7ac..dcc1eb0 100644\n--- a/src/hooks/use-data-table.ts\n+++ b/src/hooks/use-data-table.ts\n@@ -214,10 +214,13 @@ export function useDataTable<TData>({\n \n   const [filterValues, setFilterValues] = useQueryStates(filterParsers);\n \n-  const debouncedSetFilterValues = useDebouncedCallback((values: typeof filterValues) => {\n-    void setPage(1);\n-    void setFilterValues(values);\n-  }, debounceMs);\n+  const debouncedSetFilterValues = useDebouncedCallback(\n+    (values: typeof filterValues) => {\n+      void setPage(1);\n+      void setFilterValues(values);\n+    },\n+    debounceMs,\n+  );\n \n   // Paginate\n   const pagination: PaginationState = {\n@@ -314,7 +317,6 @@ export function useDataTable<TData>({\n       enableAdvancedFilter,\n       filterableColumns,\n       searchableColumns,\n-      setPage,\n     ],\n   );\n \ndiff --git a/tsconfig.json b/tsconfig.json\nindex c5eef6e..ff790a0 100644\n--- a/tsconfig.json\n+++ b/tsconfig.json\n@@ -30,7 +30,6 @@\n     }\n   },\n   \"include\": [\n-    \".eslintrc.cjs\",\n     \"next-env.d.ts\",\n     \"**/*.ts\",\n     \"**/*.tsx\",",
    "output": "chore: sync"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex c114298..20ba9df 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -146,7 +146,7 @@ importers:\n         version: 0.6.1\n       '@types/node':\n         specifier: ^22.12.0\n-        version: 22.13.7\n+        version: 22.13.8\n       '@types/react':\n         specifier: ^19.0.8\n         version: 19.0.10\n@@ -1430,8 +1430,8 @@ packages:\n   '@types/cookie@0.6.0':\n     resolution: {integrity: sha512-4Kh9a6B2bQciAhf7FSuMRRkUWecJgJu9nPnx3yzpsfXX/c50REIqpHY4C82bXP90qrLtXtkDxTZosYO3UpOwlA==}\n \n-  '@types/node@22.13.7':\n-    resolution: {integrity: sha512-oU2q+BsQldB9lYxHNp/5aZO+/Bs0Usa74Abo9mAKulz4ahQyXRHK6UVKYIN8KSC8HXwhWSi7b49JnX+txuac0w==}\n+  '@types/node@22.13.8':\n+    resolution: {integrity: sha512-G3EfaZS+iOGYWLLRCEAXdWK9my08oHNZ+FHluRiggIYJPOXzhOiDgpVCUHaUvyIC5/fj7C/p637jdzC666AOKQ==}\n \n   '@types/react-dom@19.0.4':\n     resolution: {integrity: sha512-4fSQ8vWFkg+TGhePfUzVmat3eC14TXYSsiiDSLI0dVLsrm9gZFABjPy/Qu6TKgl1tq1Bu1yDsuQgY3A3DOjCcg==}\n@@ -3386,7 +3386,7 @@ snapshots:\n   '@types/cookie@0.6.0':\n     optional: true\n \n-  '@types/node@22.13.7':\n+  '@types/node@22.13.8':\n     dependencies:\n       undici-types: 6.20.0\n ",
    "output": "chore(deps): update dependency @types/node to v22.13.8 (#908)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex f16ebae..c114298 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -146,7 +146,7 @@ importers:\n         version: 0.6.1\n       '@types/node':\n         specifier: ^22.12.0\n-        version: 22.13.5\n+        version: 22.13.7\n       '@types/react':\n         specifier: ^19.0.8\n         version: 19.0.10\n@@ -1430,8 +1430,8 @@ packages:\n   '@types/cookie@0.6.0':\n     resolution: {integrity: sha512-4Kh9a6B2bQciAhf7FSuMRRkUWecJgJu9nPnx3yzpsfXX/c50REIqpHY4C82bXP90qrLtXtkDxTZosYO3UpOwlA==}\n \n-  '@types/node@22.13.5':\n-    resolution: {integrity: sha512-+lTU0PxZXn0Dr1NBtC7Y8cR21AJr87dLLU953CWA6pMxxv/UDc7jYAY90upcrie1nRcD6XNG5HOYEDtgW5TxAg==}\n+  '@types/node@22.13.7':\n+    resolution: {integrity: sha512-oU2q+BsQldB9lYxHNp/5aZO+/Bs0Usa74Abo9mAKulz4ahQyXRHK6UVKYIN8KSC8HXwhWSi7b49JnX+txuac0w==}\n \n   '@types/react-dom@19.0.4':\n     resolution: {integrity: sha512-4fSQ8vWFkg+TGhePfUzVmat3eC14TXYSsiiDSLI0dVLsrm9gZFABjPy/Qu6TKgl1tq1Bu1yDsuQgY3A3DOjCcg==}\n@@ -3386,7 +3386,7 @@ snapshots:\n   '@types/cookie@0.6.0':\n     optional: true\n \n-  '@types/node@22.13.5':\n+  '@types/node@22.13.7':\n     dependencies:\n       undici-types: 6.20.0\n ",
    "output": "chore(deps): update dependency @types/node to v22.13.7 (#907)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 1e9f300..2637d17 100644\n--- a/package.json\n+++ b/package.json\n@@ -48,7 +48,7 @@\n     \"drizzle-orm\": \"^0.40.0\",\n     \"export-to-csv\": \"^1.4.0\",\n     \"geist\": \"^1.3.1\",\n-    \"lucide-react\": \"^0.476.0\",\n+    \"lucide-react\": \"^0.477.0\",\n     \"nanoid\": \"^5.0.9\",\n     \"next\": \"^15.1.6\",\n     \"next-themes\": \"^0.4.4\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 4c2420c..f16ebae 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -87,8 +87,8 @@ importers:\n         specifier: ^1.3.1\n         version: 1.3.1(next@15.2.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0))\n       lucide-react:\n-        specifier: ^0.476.0\n-        version: 0.476.0(react@19.0.0)\n+        specifier: ^0.477.0\n+        version: 0.477.0(react@19.0.0)\n       nanoid:\n         specifier: ^5.0.9\n         version: 5.1.2\n@@ -1871,8 +1871,8 @@ packages:\n     resolution: {integrity: sha512-123qHRfJBmo2jXDbo/a5YOQrJoHF/GNQTLzQ5+IdK5pWpceK17yRc6ozlWd25FxvGKQbIUs91fDFkXmDHTKcyA==}\n     engines: {node: 20 || >=22}\n \n-  lucide-react@0.476.0:\n-    resolution: {integrity: sha512-x6cLTk8gahdUPje0hSgLN1/MgiJH+Xl90Xoxy9bkPAsMPOUiyRSKR4JCDPGVCEpyqnZXH3exFWNItcvra9WzUQ==}\n+  lucide-react@0.477.0:\n+    resolution: {integrity: sha512-yCf7aYxerFZAbd8jHJxjwe1j7jEMPptjnaOqdYeirFnEy85cNR3/L+o0I875CYFYya+eEVzZSbNuRk8BZPDpVw==}\n     peerDependencies:\n       react: ^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0\n \n@@ -3800,7 +3800,7 @@ snapshots:\n \n   lru-cache@11.0.2: {}\n \n-  lucide-react@0.476.0(react@19.0.0):\n+  lucide-react@0.477.0(react@19.0.0):\n     dependencies:\n       react: 19.0.0\n ",
    "output": "fix(deps): update dependency lucide-react to ^0.477.0 (#906)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 575b46e..1df7648 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -140,7 +140,7 @@ importers:\n         version: 1.9.4\n       '@faker-js/faker':\n         specifier: ^9.4.0\n-        version: 9.5.0\n+        version: 9.5.1\n       '@total-typescript/ts-reset':\n         specifier: ^0.6.1\n         version: 0.6.1\n@@ -702,8 +702,8 @@ packages:\n     cpu: [x64]\n     os: [win32]\n \n-  '@faker-js/faker@9.5.0':\n-    resolution: {integrity: sha512-3qbjLv+fzuuCg3umxc9/7YjrEXNaKwHgmig949nfyaTx8eL4FAsvFbu+1JcFUj1YAXofhaDn6JdEUBTYuk0Ssw==}\n+  '@faker-js/faker@9.5.1':\n+    resolution: {integrity: sha512-0fzMEDxkExR2cn731kpDaCCnBGBUOIXEi2S1N5l8Hltp6aPf4soTMJ+g4k8r2sI5oB+rpwIW8Uy/6jkwGpnWPg==}\n     engines: {node: '>=18.0.0', npm: '>=9.0.0'}\n \n   '@floating-ui/core@1.6.9':\n@@ -2726,7 +2726,7 @@ snapshots:\n   '@esbuild/win32-x64@0.25.0':\n     optional: true\n \n-  '@faker-js/faker@9.5.0': {}\n+  '@faker-js/faker@9.5.1': {}\n \n   '@floating-ui/core@1.6.9':\n     dependencies:",
    "output": "chore(deps): update dependency @faker-js/faker to v9.5.1 (#904)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex bad8aad..1e9f300 100644\n--- a/package.json\n+++ b/package.json\n@@ -45,7 +45,7 @@\n     \"clsx\": \"^2.1.1\",\n     \"cmdk\": \"^1.0.4\",\n     \"date-fns\": \"^4.1.0\",\n-    \"drizzle-orm\": \"^0.39.1\",\n+    \"drizzle-orm\": \"^0.40.0\",\n     \"export-to-csv\": \"^1.4.0\",\n     \"geist\": \"^1.3.1\",\n     \"lucide-react\": \"^0.476.0\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 797cc0c..b8374f4 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -78,8 +78,8 @@ importers:\n         specifier: ^4.1.0\n         version: 4.1.0\n       drizzle-orm:\n-        specifier: ^0.39.1\n-        version: 0.39.3(@libsql/client-wasm@0.14.0)(pg@8.13.3)(postgres@3.4.5)\n+        specifier: ^0.40.0\n+        version: 0.40.0(@libsql/client-wasm@0.14.0)(gel@2.0.0)(pg@8.13.3)(postgres@3.4.5)\n       export-to-csv:\n         specifier: ^1.4.0\n         version: 1.4.0\n@@ -1612,8 +1612,8 @@ packages:\n     resolution: {integrity: sha512-l6dMSE100u7sDaTbLczibrQZjA35jLsHNqIV+jmhNVO3O8jzM6kywMOmV9uOz9ZVSCMPQhAZEFjL/qDPVrqpUA==}\n     hasBin: true\n \n-  drizzle-orm@0.39.3:\n-    resolution: {integrity: sha512-EZ8ZpYvDIvKU9C56JYLOmUskazhad+uXZCTCRN4OnRMsL+xAJ05dv1eCpAG5xzhsm1hqiuC5kAZUCS924u2DTw==}\n+  drizzle-orm@0.40.0:\n+    resolution: {integrity: sha512-7ptk/HQiMSrEZHnAsSlBESXWj52VwgMmyTEfoNmpNN2ZXpcz13LwHfXTIghsAEud7Z5UJhDOp8U07ujcqme7wg==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=4'\n@@ -1634,6 +1634,7 @@ packages:\n       better-sqlite3: '>=7'\n       bun-types: '*'\n       expo-sqlite: '>=14.0.0'\n+      gel: '>=2'\n       knex: '*'\n       kysely: '*'\n       mysql2: '>=2'\n@@ -1681,6 +1682,8 @@ packages:\n         optional: true\n       expo-sqlite:\n         optional: true\n+      gel:\n+        optional: true\n       knex:\n         optional: true\n       kysely:\n@@ -3563,9 +3566,10 @@ snapshots:\n     transitivePeerDependencies:\n       - supports-color\n \n-  drizzle-orm@0.39.3(@libsql/client-wasm@0.14.0)(pg@8.13.3)(postgres@3.4.5):\n+  drizzle-orm@0.40.0(@libsql/client-wasm@0.14.0)(gel@2.0.0)(pg@8.13.3)(postgres@3.4.5):\n     optionalDependencies:\n       '@libsql/client-wasm': 0.14.0\n+      gel: 2.0.0\n       pg: 8.13.3\n       postgres: 3.4.5\n ",
    "output": "fix(deps): update dependency drizzle-orm to ^0.40.0 (#901)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex c3508c8..bad8aad 100644\n--- a/package.json\n+++ b/package.json\n@@ -48,7 +48,7 @@\n     \"drizzle-orm\": \"^0.39.1\",\n     \"export-to-csv\": \"^1.4.0\",\n     \"geist\": \"^1.3.1\",\n-    \"lucide-react\": \"^0.475.0\",\n+    \"lucide-react\": \"^0.476.0\",\n     \"nanoid\": \"^5.0.9\",\n     \"next\": \"^15.1.6\",\n     \"next-themes\": \"^0.4.4\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 86ccb6d..42b087d 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -87,8 +87,8 @@ importers:\n         specifier: ^1.3.1\n         version: 1.3.1(next@15.1.7(react-dom@19.0.0(react@19.0.0))(react@19.0.0))\n       lucide-react:\n-        specifier: ^0.475.0\n-        version: 0.475.0(react@19.0.0)\n+        specifier: ^0.476.0\n+        version: 0.476.0(react@19.0.0)\n       nanoid:\n         specifier: ^5.0.9\n         version: 5.1.2\n@@ -1852,8 +1852,8 @@ packages:\n     resolution: {integrity: sha512-123qHRfJBmo2jXDbo/a5YOQrJoHF/GNQTLzQ5+IdK5pWpceK17yRc6ozlWd25FxvGKQbIUs91fDFkXmDHTKcyA==}\n     engines: {node: 20 || >=22}\n \n-  lucide-react@0.475.0:\n-    resolution: {integrity: sha512-NJzvVu1HwFVeZ+Gwq2q00KygM1aBhy/ZrhY9FsAgJtpB+E4R7uxRk9M2iKvHa6/vNxZydIB59htha4c2vvwvVg==}\n+  lucide-react@0.476.0:\n+    resolution: {integrity: sha512-x6cLTk8gahdUPje0hSgLN1/MgiJH+Xl90Xoxy9bkPAsMPOUiyRSKR4JCDPGVCEpyqnZXH3exFWNItcvra9WzUQ==}\n     peerDependencies:\n       react: ^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0\n \n@@ -3753,7 +3753,7 @@ snapshots:\n \n   lru-cache@11.0.2: {}\n \n-  lucide-react@0.475.0(react@19.0.0):\n+  lucide-react@0.476.0(react@19.0.0):\n     dependencies:\n       react: 19.0.0\n ",
    "output": "fix(deps): update dependency lucide-react to ^0.476.0 (#899)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 80b9c29..86ccb6d 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -22,7 +22,7 @@ importers:\n         version: 3.2.2(react@19.0.0)\n       '@hookform/resolvers':\n         specifier: ^4.0.0\n-        version: 4.1.1(react-hook-form@7.54.2(react@19.0.0))\n+        version: 4.1.2(react-hook-form@7.54.2(react@19.0.0))\n       '@radix-ui/react-checkbox':\n         specifier: ^1.1.3\n         version: 1.1.4(@types/react-dom@19.0.4(@types/react@19.0.10))(@types/react@19.0.10)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n@@ -721,8 +721,8 @@ packages:\n   '@floating-ui/utils@0.2.9':\n     resolution: {integrity: sha512-MDWhGtE+eHw5JW7lq4qhc5yRLS11ERl1c7Z6Xd0a58DozHES6EnNNwUWbMiG4J9Cgj053Bhk8zvlhFYKVhULwg==}\n \n-  '@hookform/resolvers@4.1.1':\n-    resolution: {integrity: sha512-S9YN1RgNWG+klUz5uQaV6rjE4pr6Py2tamj7ekshzLcMyg+/Pal1KZAYgGszV0+doiy41dUiQgXL3uRS9stndQ==}\n+  '@hookform/resolvers@4.1.2':\n+    resolution: {integrity: sha512-wl6H9c9wLOZMJAqGLEVKzbCkxJuV+BYuLFZFCQtCwMe0b3qQk4kUBd/ZAj13SwcSqcx86rCgSCyngQfmA6DOWg==}\n     peerDependencies:\n       react-hook-form: ^7.0.0\n \n@@ -1373,6 +1373,9 @@ packages:\n       typescript:\n         optional: true\n \n+  '@standard-schema/utils@0.3.0':\n+    resolution: {integrity: sha512-e7Mew686owMaPJVNNLs55PUvgz371nKgwsc4vxE49zsODpJEnxgxRo2y/OKrqueavXgZNMDVj3DdHFlaSAeU8g==}\n+\n   '@swc/counter@0.1.3':\n     resolution: {integrity: sha512-e2BR4lsJkkRlKZ/qCHPw9ZaSxc0MVUd7gtbtaB7aMvHeJVYe8sOB8DBZkP2DtISHGSku9sCK6T6cnY0CtXrOCQ==}\n \n@@ -1511,9 +1514,6 @@ packages:\n   caniuse-lite@1.0.30001699:\n     resolution: {integrity: sha512-b+uH5BakXZ9Do9iK+CkDmctUSEqZl+SP056vc5usa0PL+ev5OHw003rZXcnjNDv3L8P5j6rwT6C0BPKSikW08w==}\n \n-  caniuse-lite@1.0.30001700:\n-    resolution: {integrity: sha512-2S6XIXwaE7K7erT8dY+kLQcpa5ms63XlRkMkReXjle+kf6c5g38vyMl+Z5y8dSxOFDhcFe+nxnn261PLxBSQsQ==}\n-\n   chokidar@3.6.0:\n     resolution: {integrity: sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==}\n     engines: {node: '>= 8.10.0'}\n@@ -2717,9 +2717,9 @@ snapshots:\n \n   '@floating-ui/utils@0.2.9': {}\n \n-  '@hookform/resolvers@4.1.1(react-hook-form@7.54.2(react@19.0.0))':\n+  '@hookform/resolvers@4.1.2(react-hook-form@7.54.2(react@19.0.0))':\n     dependencies:\n-      caniuse-lite: 1.0.30001700\n+      '@standard-schema/utils': 0.3.0\n       react-hook-form: 7.54.2(react@19.0.0)\n \n   '@img/sharp-darwin-arm64@0.33.5':\n@@ -3323,6 +3323,8 @@ snapshots:\n       typescript: 5.7.3\n     optional: true\n \n+  '@standard-schema/utils@0.3.0': {}\n+\n   '@swc/counter@0.1.3': {}\n \n   '@swc/helpers@0.5.15':\n@@ -3433,8 +3435,6 @@ snapshots:\n \n   caniuse-lite@1.0.30001699: {}\n \n-  caniuse-lite@1.0.30001700: {}\n-\n   chokidar@3.6.0:\n     dependencies:\n       anymatch: 3.1.3",
    "output": "fix(deps): update dependency @hookform/resolvers to v4.1.2 (#898)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex b808b8b..80b9c29 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -91,7 +91,7 @@ importers:\n         version: 0.475.0(react@19.0.0)\n       nanoid:\n         specifier: ^5.0.9\n-        version: 5.1.0\n+        version: 5.1.2\n       next:\n         specifier: ^15.1.6\n         version: 15.1.7(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n@@ -1894,8 +1894,8 @@ packages:\n     engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1}\n     hasBin: true\n \n-  nanoid@5.1.0:\n-    resolution: {integrity: sha512-zDAl/llz8Ue/EblwSYwdxGBYfj46IM1dhjVi8dyp9LQffoIGxJEAHj2oeZ4uNcgycSRcQ83CnfcZqEJzVDLcDw==}\n+  nanoid@5.1.2:\n+    resolution: {integrity: sha512-b+CiXQCNMUGe0Ri64S9SXFcP9hogjAJ2Rd6GdVxhPLRm7mhGaM7VgOvCAJ1ZshfHbqVDI3uqTI5C8/GaKuLI7g==}\n     engines: {node: ^18 || >=20}\n     hasBin: true\n \n@@ -3788,7 +3788,7 @@ snapshots:\n \n   nanoid@3.3.8: {}\n \n-  nanoid@5.1.0: {}\n+  nanoid@5.1.2: {}\n \n   next-themes@0.4.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n     dependencies:",
    "output": "fix(deps): update dependency nanoid to v5.1.2 (#897)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex ba5d0a2..b808b8b 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -124,7 +124,7 @@ importers:\n         version: 2.0.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n       tailwind-merge:\n         specifier: ^3.0.1\n-        version: 3.0.1\n+        version: 3.0.2\n       tailwindcss-animate:\n         specifier: ^1.0.7\n         version: 1.0.7(tailwindcss@3.4.17)\n@@ -2289,8 +2289,8 @@ packages:\n     resolution: {integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==}\n     engines: {node: '>= 0.4'}\n \n-  tailwind-merge@3.0.1:\n-    resolution: {integrity: sha512-AvzE8FmSoXC7nC+oU5GlQJbip2UO7tmOhOfQyOmPhrStOGXHU08j8mZEHZ4BmCqY5dWTCo4ClWkNyRNx1wpT0g==}\n+  tailwind-merge@3.0.2:\n+    resolution: {integrity: sha512-l7z+OYZ7mu3DTqrL88RiKrKIqO3NcpEO8V/Od04bNpvk0kiIFndGEoqfuzvj4yuhRkHKjRkII2z+KS2HfPcSxw==}\n \n   tailwindcss-animate@1.0.7:\n     resolution: {integrity: sha512-bl6mpH3T7I3UFxuvDEXLxy/VuFxBk5bbzplh7tXI68mwMokNYd1t9qPBHlnyTwfa4JGC4zP516I1hYYtQ/vspA==}\n@@ -4148,7 +4148,7 @@ snapshots:\n \n   supports-preserve-symlinks-flag@1.0.0: {}\n \n-  tailwind-merge@3.0.1: {}\n+  tailwind-merge@3.0.2: {}\n \n   tailwindcss-animate@1.0.7(tailwindcss@3.4.17):\n     dependencies:",
    "output": "fix(deps): update dependency tailwind-merge to v3.0.2 (#896)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 527ab2e..ba5d0a2 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -22,7 +22,7 @@ importers:\n         version: 3.2.2(react@19.0.0)\n       '@hookform/resolvers':\n         specifier: ^4.0.0\n-        version: 4.1.0(react-hook-form@7.54.2(react@19.0.0))\n+        version: 4.1.1(react-hook-form@7.54.2(react@19.0.0))\n       '@radix-ui/react-checkbox':\n         specifier: ^1.1.3\n         version: 1.1.4(@types/react-dom@19.0.4(@types/react@19.0.10))(@types/react@19.0.10)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n@@ -721,8 +721,8 @@ packages:\n   '@floating-ui/utils@0.2.9':\n     resolution: {integrity: sha512-MDWhGtE+eHw5JW7lq4qhc5yRLS11ERl1c7Z6Xd0a58DozHES6EnNNwUWbMiG4J9Cgj053Bhk8zvlhFYKVhULwg==}\n \n-  '@hookform/resolvers@4.1.0':\n-    resolution: {integrity: sha512-fX/uHKb+OOCpACLc6enuTQsf0ZpRrKbeBBPETg5PCPLCIYV6osP2Bw6ezuclM61lH+wBF9eXcuC0+BFh9XOEnQ==}\n+  '@hookform/resolvers@4.1.1':\n+    resolution: {integrity: sha512-S9YN1RgNWG+klUz5uQaV6rjE4pr6Py2tamj7ekshzLcMyg+/Pal1KZAYgGszV0+doiy41dUiQgXL3uRS9stndQ==}\n     peerDependencies:\n       react-hook-form: ^7.0.0\n \n@@ -1511,6 +1511,9 @@ packages:\n   caniuse-lite@1.0.30001699:\n     resolution: {integrity: sha512-b+uH5BakXZ9Do9iK+CkDmctUSEqZl+SP056vc5usa0PL+ev5OHw003rZXcnjNDv3L8P5j6rwT6C0BPKSikW08w==}\n \n+  caniuse-lite@1.0.30001700:\n+    resolution: {integrity: sha512-2S6XIXwaE7K7erT8dY+kLQcpa5ms63XlRkMkReXjle+kf6c5g38vyMl+Z5y8dSxOFDhcFe+nxnn261PLxBSQsQ==}\n+\n   chokidar@3.6.0:\n     resolution: {integrity: sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==}\n     engines: {node: '>= 8.10.0'}\n@@ -2714,9 +2717,9 @@ snapshots:\n \n   '@floating-ui/utils@0.2.9': {}\n \n-  '@hookform/resolvers@4.1.0(react-hook-form@7.54.2(react@19.0.0))':\n+  '@hookform/resolvers@4.1.1(react-hook-form@7.54.2(react@19.0.0))':\n     dependencies:\n-      caniuse-lite: 1.0.30001699\n+      caniuse-lite: 1.0.30001700\n       react-hook-form: 7.54.2(react@19.0.0)\n \n   '@img/sharp-darwin-arm64@0.33.5':\n@@ -3430,6 +3433,8 @@ snapshots:\n \n   caniuse-lite@1.0.30001699: {}\n \n+  caniuse-lite@1.0.30001700: {}\n+\n   chokidar@3.6.0:\n     dependencies:\n       anymatch: 3.1.3",
    "output": "fix(deps): update dependency @hookform/resolvers to v4.1.1 (#895)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 8f13a60..527ab2e 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -146,7 +146,7 @@ importers:\n         version: 0.6.1\n       '@types/node':\n         specifier: ^22.12.0\n-        version: 22.13.4\n+        version: 22.13.5\n       '@types/react':\n         specifier: ^19.0.8\n         version: 19.0.10\n@@ -1424,8 +1424,8 @@ packages:\n   '@types/cookie@0.6.0':\n     resolution: {integrity: sha512-4Kh9a6B2bQciAhf7FSuMRRkUWecJgJu9nPnx3yzpsfXX/c50REIqpHY4C82bXP90qrLtXtkDxTZosYO3UpOwlA==}\n \n-  '@types/node@22.13.4':\n-    resolution: {integrity: sha512-ywP2X0DYtX3y08eFVx5fNIw7/uIv8hYUKgXoK8oayJlLnKcRfEYCxWMVE1XagUdVtCJlZT1AU4LXEABW+L1Peg==}\n+  '@types/node@22.13.5':\n+    resolution: {integrity: sha512-+lTU0PxZXn0Dr1NBtC7Y8cR21AJr87dLLU953CWA6pMxxv/UDc7jYAY90upcrie1nRcD6XNG5HOYEDtgW5TxAg==}\n \n   '@types/react-dom@19.0.4':\n     resolution: {integrity: sha512-4fSQ8vWFkg+TGhePfUzVmat3eC14TXYSsiiDSLI0dVLsrm9gZFABjPy/Qu6TKgl1tq1Bu1yDsuQgY3A3DOjCcg==}\n@@ -3351,7 +3351,7 @@ snapshots:\n   '@types/cookie@0.6.0':\n     optional: true\n \n-  '@types/node@22.13.4':\n+  '@types/node@22.13.5':\n     dependencies:\n       undici-types: 6.20.0\n ",
    "output": "chore(deps): update dependency @types/node to v22.13.5 (#894)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 2b482c5..8f13a60 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -121,7 +121,7 @@ importers:\n         version: 0.0.1\n       sonner:\n         specifier: ^2.0.0\n-        version: 2.0.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n+        version: 2.0.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n       tailwind-merge:\n         specifier: ^3.0.1\n         version: 3.0.1\n@@ -2219,8 +2219,8 @@ packages:\n   simple-swizzle@0.2.2:\n     resolution: {integrity: sha512-JA//kQgZtbuY83m+xT+tXJkmJncGMTFT+C+g2h2R9uxkYIrE2yy9sgmcLhCnw57/WSD+Eh3J97FPEDFnbXnDUg==}\n \n-  sonner@2.0.0:\n-    resolution: {integrity: sha512-3WeSl3WrEdhmdiTniT8JsCiVRVDOdn7k+4MG2drqzSMOeqrExm03HIwDBPKuq52JBqL7wRLG17QBIiSleUbljw==}\n+  sonner@2.0.1:\n+    resolution: {integrity: sha512-FRBphaehZ5tLdLcQ8g2WOIRE+Y7BCfWi5Zyd8bCvBjiW8TxxAyoWZIxS661Yz6TGPqFQ4VLzOF89WEYhfynSFQ==}\n     peerDependencies:\n       react: ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n       react-dom: ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n@@ -4085,7 +4085,7 @@ snapshots:\n       is-arrayish: 0.3.2\n     optional: true\n \n-  sonner@2.0.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n+  sonner@2.0.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n     dependencies:\n       react: 19.0.0\n       react-dom: 19.0.0(react@19.0.0)",
    "output": "fix(deps): update dependency sonner to v2.0.1 (#892)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 77bf86c..2b482c5 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -155,7 +155,7 @@ importers:\n         version: 19.0.4(@types/react@19.0.10)\n       autoprefixer:\n         specifier: ^10.4.20\n-        version: 10.4.20(postcss@8.5.2)\n+        version: 10.4.20(postcss@8.5.3)\n       dotenv-cli:\n         specifier: ^8.0.0\n         version: 8.0.0\n@@ -167,7 +167,7 @@ importers:\n         version: 8.13.3\n       postcss:\n         specifier: ^8.5.1\n-        version: 8.5.2\n+        version: 8.5.3\n       rimraf:\n         specifier: ^6.0.1\n         version: 6.0.1\n@@ -2068,8 +2068,8 @@ packages:\n     resolution: {integrity: sha512-PS08Iboia9mts/2ygV3eLpY5ghnUcfLV/EXTOW1E2qYxJKGGBUtNjN76FYHnMs36RmARn41bC0AZmn+rR0OVpQ==}\n     engines: {node: ^10 || ^12 || >=14}\n \n-  postcss@8.5.2:\n-    resolution: {integrity: sha512-MjOadfU3Ys9KYoX0AdkBlFEF1Vx37uCCeN4ZHnmwm9FfpbsGWMZeBLMmmpY+6Ocqod7mkdZ0DT31OlbsFrLlkA==}\n+  postcss@8.5.3:\n+    resolution: {integrity: sha512-dle9A3yYxlBSrt8Fu+IpjGT8SY8hN0mlaA6GY8t0P5PjIOZemULz/E2Bnm/2dcUOena75OTNkHI76uZBNUUq3A==}\n     engines: {node: ^10 || ^12 || >=14}\n \n   postgres-array@2.0.0:\n@@ -3389,14 +3389,14 @@ snapshots:\n     dependencies:\n       tslib: 2.8.1\n \n-  autoprefixer@10.4.20(postcss@8.5.2):\n+  autoprefixer@10.4.20(postcss@8.5.3):\n     dependencies:\n       browserslist: 4.24.4\n       caniuse-lite: 1.0.30001696\n       fraction.js: 4.3.7\n       normalize-range: 0.1.2\n       picocolors: 1.1.1\n-      postcss: 8.5.2\n+      postcss: 8.5.3\n       postcss-value-parser: 4.2.0\n \n   balanced-match@1.0.2: {}\n@@ -3894,28 +3894,28 @@ snapshots:\n \n   pirates@4.0.6: {}\n \n-  postcss-import@15.1.0(postcss@8.5.2):\n+  postcss-import@15.1.0(postcss@8.5.3):\n     dependencies:\n-      postcss: 8.5.2\n+      postcss: 8.5.3\n       postcss-value-parser: 4.2.0\n       read-cache: 1.0.0\n       resolve: 1.22.10\n \n-  postcss-js@4.0.1(postcss@8.5.2):\n+  postcss-js@4.0.1(postcss@8.5.3):\n     dependencies:\n       camelcase-css: 2.0.1\n-      postcss: 8.5.2\n+      postcss: 8.5.3\n \n-  postcss-load-config@4.0.2(postcss@8.5.2):\n+  postcss-load-config@4.0.2(postcss@8.5.3):\n     dependencies:\n       lilconfig: 3.1.3\n       yaml: 2.7.0\n     optionalDependencies:\n-      postcss: 8.5.2\n+      postcss: 8.5.3\n \n-  postcss-nested@6.2.0(postcss@8.5.2):\n+  postcss-nested@6.2.0(postcss@8.5.3):\n     dependencies:\n-      postcss: 8.5.2\n+      postcss: 8.5.3\n       postcss-selector-parser: 6.1.2\n \n   postcss-selector-parser@6.1.2:\n@@ -3931,7 +3931,7 @@ snapshots:\n       picocolors: 1.1.1\n       source-map-js: 1.2.1\n \n-  postcss@8.5.2:\n+  postcss@8.5.3:\n     dependencies:\n       nanoid: 3.3.8\n       picocolors: 1.1.1\n@@ -4165,11 +4165,11 @@ snapshots:\n       normalize-path: 3.0.0\n       object-hash: 3.0.0\n       picocolors: 1.1.1\n-      postcss: 8.5.2\n-      postcss-import: 15.1.0(postcss@8.5.2)\n-      postcss-js: 4.0.1(postcss@8.5.2)\n-      postcss-load-config: 4.0.2(postcss@8.5.2)\n-      postcss-nested: 6.2.0(postcss@8.5.2)\n+      postcss: 8.5.3\n+      postcss-import: 15.1.0(postcss@8.5.3)\n+      postcss-js: 4.0.1(postcss@8.5.3)\n+      postcss-load-config: 4.0.2(postcss@8.5.3)\n+      postcss-nested: 6.2.0(postcss@8.5.3)\n       postcss-selector-parser: 6.1.2\n       resolve: 1.22.10\n       sucrase: 3.35.0",
    "output": "chore(deps): update dependency postcss to v8.5.3 (#891)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex fa5d7d5..c3508c8 100644\n--- a/package.json\n+++ b/package.json\n@@ -59,7 +59,7 @@\n     \"react-dom\": \"^19.0.0\",\n     \"react-hook-form\": \"^7.54.2\",\n     \"server-only\": \"^0.0.1\",\n-    \"sonner\": \"^1.7.3\",\n+    \"sonner\": \"^2.0.0\",\n     \"tailwind-merge\": \"^3.0.1\",\n     \"tailwindcss-animate\": \"^1.0.7\",\n     \"vaul\": \"^1.1.2\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 6b1df4d..77bf86c 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -120,8 +120,8 @@ importers:\n         specifier: ^0.0.1\n         version: 0.0.1\n       sonner:\n-        specifier: ^1.7.3\n-        version: 1.7.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n+        specifier: ^2.0.0\n+        version: 2.0.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n       tailwind-merge:\n         specifier: ^3.0.1\n         version: 3.0.1\n@@ -2219,8 +2219,8 @@ packages:\n   simple-swizzle@0.2.2:\n     resolution: {integrity: sha512-JA//kQgZtbuY83m+xT+tXJkmJncGMTFT+C+g2h2R9uxkYIrE2yy9sgmcLhCnw57/WSD+Eh3J97FPEDFnbXnDUg==}\n \n-  sonner@1.7.4:\n-    resolution: {integrity: sha512-DIS8z4PfJRbIyfVFDVnK9rO3eYDtse4Omcm6bt0oEr5/jtLgysmjuBl1frJ9E/EQZrFmKx2A8m/s5s9CRXIzhw==}\n+  sonner@2.0.0:\n+    resolution: {integrity: sha512-3WeSl3WrEdhmdiTniT8JsCiVRVDOdn7k+4MG2drqzSMOeqrExm03HIwDBPKuq52JBqL7wRLG17QBIiSleUbljw==}\n     peerDependencies:\n       react: ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n       react-dom: ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n@@ -4085,7 +4085,7 @@ snapshots:\n       is-arrayish: 0.3.2\n     optional: true\n \n-  sonner@1.7.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n+  sonner@2.0.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n     dependencies:\n       react: 19.0.0\n       react-dom: 19.0.0(react@19.0.0)",
    "output": "fix(deps): update dependency sonner to v2 (#890)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 9ba1753..9bfb5eb 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -100,7 +100,7 @@ importers:\n         version: 0.4.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n       nuqs:\n         specifier: ^2.3.1\n-        version: 2.3.2(@remix-run/react@2.13.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)(typescript@5.7.3))(next@15.1.7(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router-dom@6.27.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router@6.27.0(react@19.0.0))(react@19.0.0)\n+        version: 2.4.0(@remix-run/react@2.13.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)(typescript@5.7.3))(next@15.1.7(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router-dom@6.27.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router@6.27.0(react@19.0.0))(react@19.0.0)\n       postgres:\n         specifier: ^3.4.5\n         version: 3.4.5\n@@ -1928,8 +1928,8 @@ packages:\n     resolution: {integrity: sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==}\n     engines: {node: '>=0.10.0'}\n \n-  nuqs@2.3.2:\n-    resolution: {integrity: sha512-WeG78r8e3a30JY3P8npldvNiAZwGIk499lnpeRs3UYA3PpSvs2/PLunKGgjuF/JMw4BOowD3K2xgGEOZ3PeODA==}\n+  nuqs@2.4.0:\n+    resolution: {integrity: sha512-+yOdX0q/wdYlseSYtWC8StDDt2QFcYX/zV5/E67J1cOJo3PR0mggxMx4acZGC0Hu66xFHENKQkqI2zSpH742xQ==}\n     peerDependencies:\n       '@remix-run/react': '>=2'\n       next: '>=14.2.0'\n@@ -3811,7 +3811,7 @@ snapshots:\n \n   normalize-range@0.1.2: {}\n \n-  nuqs@2.3.2(@remix-run/react@2.13.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)(typescript@5.7.3))(next@15.1.7(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router-dom@6.27.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router@6.27.0(react@19.0.0))(react@19.0.0):\n+  nuqs@2.4.0(@remix-run/react@2.13.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)(typescript@5.7.3))(next@15.1.7(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router-dom@6.27.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router@6.27.0(react@19.0.0))(react@19.0.0):\n     dependencies:\n       mitt: 3.0.1\n       react: 19.0.0",
    "output": "fix(deps): update dependency nuqs to v2.4.0 (#888)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex f3e841e..dcf41d9 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -22,7 +22,7 @@ importers:\n         version: 3.2.2(react@19.0.0)\n       '@hookform/resolvers':\n         specifier: ^4.0.0\n-        version: 4.0.0(react-hook-form@7.54.2(react@19.0.0))\n+        version: 4.1.0(react-hook-form@7.54.2(react@19.0.0))\n       '@radix-ui/react-checkbox':\n         specifier: ^1.1.3\n         version: 1.1.4(@types/react-dom@19.0.3(@types/react@19.0.8))(@types/react@19.0.8)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n@@ -715,8 +715,8 @@ packages:\n   '@floating-ui/utils@0.2.9':\n     resolution: {integrity: sha512-MDWhGtE+eHw5JW7lq4qhc5yRLS11ERl1c7Z6Xd0a58DozHES6EnNNwUWbMiG4J9Cgj053Bhk8zvlhFYKVhULwg==}\n \n-  '@hookform/resolvers@4.0.0':\n-    resolution: {integrity: sha512-93ZueVlTaeMF0pRbrLbcnzrxeb2mGA/xyO3RgfrsKs5OCtcfjoWcdjBJm+N7096Jfg/JYlGPjuyQCgqVEodSTg==}\n+  '@hookform/resolvers@4.1.0':\n+    resolution: {integrity: sha512-fX/uHKb+OOCpACLc6enuTQsf0ZpRrKbeBBPETg5PCPLCIYV6osP2Bw6ezuclM61lH+wBF9eXcuC0+BFh9XOEnQ==}\n     peerDependencies:\n       react-hook-form: ^7.0.0\n \n@@ -2705,8 +2705,9 @@ snapshots:\n \n   '@floating-ui/utils@0.2.9': {}\n \n-  '@hookform/resolvers@4.0.0(react-hook-form@7.54.2(react@19.0.0))':\n+  '@hookform/resolvers@4.1.0(react-hook-form@7.54.2(react@19.0.0))':\n     dependencies:\n+      caniuse-lite: 1.0.30001699\n       react-hook-form: 7.54.2(react@19.0.0)\n \n   '@img/sharp-darwin-arm64@0.33.5':",
    "output": "fix(deps): update dependency @hookform/resolvers to v4.1.0 (#885)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 67f08b9..f3e841e 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -91,7 +91,7 @@ importers:\n         version: 0.475.0(react@19.0.0)\n       nanoid:\n         specifier: ^5.0.9\n-        version: 5.0.9\n+        version: 5.1.0\n       next:\n         specifier: ^15.1.6\n         version: 15.1.7(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n@@ -1885,8 +1885,8 @@ packages:\n     engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1}\n     hasBin: true\n \n-  nanoid@5.0.9:\n-    resolution: {integrity: sha512-Aooyr6MXU6HpvvWXKoVoXwKMs/KyVakWwg7xQfv5/S/RIgJMy0Ifa45H9qqYy7pTCszrHzP21Uk4PZq2HpEM8Q==}\n+  nanoid@5.1.0:\n+    resolution: {integrity: sha512-zDAl/llz8Ue/EblwSYwdxGBYfj46IM1dhjVi8dyp9LQffoIGxJEAHj2oeZ4uNcgycSRcQ83CnfcZqEJzVDLcDw==}\n     engines: {node: ^18 || >=20}\n     hasBin: true\n \n@@ -3772,7 +3772,7 @@ snapshots:\n \n   nanoid@3.3.8: {}\n \n-  nanoid@5.0.9: {}\n+  nanoid@5.1.0: {}\n \n   next-themes@0.4.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n     dependencies:",
    "output": "fix(deps): update dependency nanoid to v5.1.0 (#884)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 53f5029..67f08b9 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -146,7 +146,7 @@ importers:\n         version: 0.6.1\n       '@types/node':\n         specifier: ^22.12.0\n-        version: 22.13.2\n+        version: 22.13.4\n       '@types/react':\n         specifier: ^19.0.8\n         version: 19.0.8\n@@ -1418,8 +1418,8 @@ packages:\n   '@types/cookie@0.6.0':\n     resolution: {integrity: sha512-4Kh9a6B2bQciAhf7FSuMRRkUWecJgJu9nPnx3yzpsfXX/c50REIqpHY4C82bXP90qrLtXtkDxTZosYO3UpOwlA==}\n \n-  '@types/node@22.13.2':\n-    resolution: {integrity: sha512-Z+r8y3XL9ZpI2EY52YYygAFmo2/oWfNSj4BCpAXE2McAexDk8VcnBMGC9Djn9gTKt4d2T/hhXqmPzo4hfIXtTg==}\n+  '@types/node@22.13.4':\n+    resolution: {integrity: sha512-ywP2X0DYtX3y08eFVx5fNIw7/uIv8hYUKgXoK8oayJlLnKcRfEYCxWMVE1XagUdVtCJlZT1AU4LXEABW+L1Peg==}\n \n   '@types/react-dom@19.0.3':\n     resolution: {integrity: sha512-0Knk+HJiMP/qOZgMyNFamlIjw9OFCsyC2ZbigmEEyXXixgre6IQpm/4V+r3qH4GC1JPvRJKInw+on2rV6YZLeA==}\n@@ -3341,7 +3341,7 @@ snapshots:\n   '@types/cookie@0.6.0':\n     optional: true\n \n-  '@types/node@22.13.2':\n+  '@types/node@22.13.4':\n     dependencies:\n       undici-types: 6.20.0\n ",
    "output": "chore(deps): update dependency @types/node to v22.13.4 (#883)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 6053167..53f5029 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -146,7 +146,7 @@ importers:\n         version: 0.6.1\n       '@types/node':\n         specifier: ^22.12.0\n-        version: 22.13.1\n+        version: 22.13.2\n       '@types/react':\n         specifier: ^19.0.8\n         version: 19.0.8\n@@ -1418,8 +1418,8 @@ packages:\n   '@types/cookie@0.6.0':\n     resolution: {integrity: sha512-4Kh9a6B2bQciAhf7FSuMRRkUWecJgJu9nPnx3yzpsfXX/c50REIqpHY4C82bXP90qrLtXtkDxTZosYO3UpOwlA==}\n \n-  '@types/node@22.13.1':\n-    resolution: {integrity: sha512-jK8uzQlrvXqEU91UxiK5J7pKHyzgnI1Qnl0QDHIgVGuolJhRb9EEl28Cj9b3rGR8B2lhFCtvIm5os8lFnO/1Ew==}\n+  '@types/node@22.13.2':\n+    resolution: {integrity: sha512-Z+r8y3XL9ZpI2EY52YYygAFmo2/oWfNSj4BCpAXE2McAexDk8VcnBMGC9Djn9gTKt4d2T/hhXqmPzo4hfIXtTg==}\n \n   '@types/react-dom@19.0.3':\n     resolution: {integrity: sha512-0Knk+HJiMP/qOZgMyNFamlIjw9OFCsyC2ZbigmEEyXXixgre6IQpm/4V+r3qH4GC1JPvRJKInw+on2rV6YZLeA==}\n@@ -3341,7 +3341,7 @@ snapshots:\n   '@types/cookie@0.6.0':\n     optional: true\n \n-  '@types/node@22.13.1':\n+  '@types/node@22.13.2':\n     dependencies:\n       undici-types: 6.20.0\n ",
    "output": "chore(deps): update dependency @types/node to v22.13.2 (#882)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 5a6e2b4..6053167 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -79,7 +79,7 @@ importers:\n         version: 4.1.0\n       drizzle-orm:\n         specifier: ^0.39.1\n-        version: 0.39.3(@libsql/client-wasm@0.14.0)(pg@8.13.2)(postgres@3.4.5)\n+        version: 0.39.3(@libsql/client-wasm@0.14.0)(pg@8.13.3)(postgres@3.4.5)\n       export-to-csv:\n         specifier: ^1.4.0\n         version: 1.4.0\n@@ -164,7 +164,7 @@ importers:\n         version: 0.30.4\n       pg:\n         specifier: ^8.13.1\n-        version: 8.13.2\n+        version: 8.13.3\n       postcss:\n         specifier: ^8.5.1\n         version: 8.5.2\n@@ -1994,8 +1994,8 @@ packages:\n     resolution: {integrity: sha512-qTAAlrEsl8s4OiEQY69wDvcMIdQN6wdz5ojQiOy6YRMuynxenON0O5oCpJI6lshc6scgAY8qvJ2On/p+CXY0GA==}\n     engines: {node: '>=4'}\n \n-  pg@8.13.2:\n-    resolution: {integrity: sha512-L5QkPvTjVWWHbLaFjCkOSplpb2uCiRYbg0IJ2okCy5ClYfWlSgDDnvdR6dyw3EWAH2AfS4j8E61QFI7gLfTtlw==}\n+  pg@8.13.3:\n+    resolution: {integrity: sha512-P6tPt9jXbL9HVu/SSRERNYaYG++MjnscnegFh9pPHihfoBSujsrka0hyuymMzeJKFWrcG8wvCKy8rCe8e5nDUQ==}\n     engines: {node: '>= 8.0.0'}\n     peerDependencies:\n       pg-native: '>=3.0.1'\n@@ -3520,10 +3520,10 @@ snapshots:\n     transitivePeerDependencies:\n       - supports-color\n \n-  drizzle-orm@0.39.3(@libsql/client-wasm@0.14.0)(pg@8.13.2)(postgres@3.4.5):\n+  drizzle-orm@0.39.3(@libsql/client-wasm@0.14.0)(pg@8.13.3)(postgres@3.4.5):\n     optionalDependencies:\n       '@libsql/client-wasm': 0.14.0\n-      pg: 8.13.2\n+      pg: 8.13.3\n       postgres: 3.4.5\n \n   eastasianwidth@0.2.0: {}\n@@ -3847,9 +3847,9 @@ snapshots:\n \n   pg-int8@1.0.1: {}\n \n-  pg-pool@3.7.1(pg@8.13.2):\n+  pg-pool@3.7.1(pg@8.13.3):\n     dependencies:\n-      pg: 8.13.2\n+      pg: 8.13.3\n \n   pg-protocol@1.7.1: {}\n \n@@ -3861,10 +3861,10 @@ snapshots:\n       postgres-date: 1.0.7\n       postgres-interval: 1.2.0\n \n-  pg@8.13.2:\n+  pg@8.13.3:\n     dependencies:\n       pg-connection-string: 2.7.0\n-      pg-pool: 3.7.1(pg@8.13.2)\n+      pg-pool: 3.7.1(pg@8.13.3)\n       pg-protocol: 1.7.1\n       pg-types: 2.2.0\n       pgpass: 1.0.5",
    "output": "chore(deps): update dependency pg to v8.13.3 (#881)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex b6fc832..5a6e2b4 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -140,7 +140,7 @@ importers:\n         version: 1.9.4\n       '@faker-js/faker':\n         specifier: ^9.4.0\n-        version: 9.4.0\n+        version: 9.5.0\n       '@total-typescript/ts-reset':\n         specifier: ^0.6.1\n         version: 0.6.1\n@@ -696,8 +696,8 @@ packages:\n     cpu: [x64]\n     os: [win32]\n \n-  '@faker-js/faker@9.4.0':\n-    resolution: {integrity: sha512-85+k0AxaZSTowL0gXp8zYWDIrWclTbRPg/pm/V0dSFZ6W6D4lhcG3uuZl4zLsEKfEvs69xDbLN2cHQudwp95JA==}\n+  '@faker-js/faker@9.5.0':\n+    resolution: {integrity: sha512-3qbjLv+fzuuCg3umxc9/7YjrEXNaKwHgmig949nfyaTx8eL4FAsvFbu+1JcFUj1YAXofhaDn6JdEUBTYuk0Ssw==}\n     engines: {node: '>=18.0.0', npm: '>=9.0.0'}\n \n   '@floating-ui/core@1.6.9':\n@@ -2686,7 +2686,7 @@ snapshots:\n   '@esbuild/win32-x64@0.23.1':\n     optional: true\n \n-  '@faker-js/faker@9.4.0': {}\n+  '@faker-js/faker@9.5.0': {}\n \n   '@floating-ui/core@1.6.9':\n     dependencies:",
    "output": "chore(deps): update dependency @faker-js/faker to v9.5.0 (#880)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex eccd1ad..b6fc832 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -64,7 +64,7 @@ importers:\n         version: 0.12.0(typescript@5.7.3)(zod@3.24.2)\n       '@tanstack/react-table':\n         specifier: ^8.20.6\n-        version: 8.20.6(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n+        version: 8.21.2(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n       class-variance-authority:\n         specifier: ^0.7.1\n         version: 0.7.1\n@@ -1401,15 +1401,15 @@ packages:\n       zod:\n         optional: true\n \n-  '@tanstack/react-table@8.20.6':\n-    resolution: {integrity: sha512-w0jluT718MrOKthRcr2xsjqzx+oEM7B7s/XXyfs19ll++hlId3fjTm+B2zrR3ijpANpkzBAr15j1XGVOMxpggQ==}\n+  '@tanstack/react-table@8.21.2':\n+    resolution: {integrity: sha512-11tNlEDTdIhMJba2RBH+ecJ9l1zgS2kjmexDPAraulc8jeNA4xocSNeyzextT0XJyASil4XsCYlJmf5jEWAtYg==}\n     engines: {node: '>=12'}\n     peerDependencies:\n       react: '>=16.8'\n       react-dom: '>=16.8'\n \n-  '@tanstack/table-core@8.20.5':\n-    resolution: {integrity: sha512-P9dF7XbibHph2PFRz8gfBKEXEY/HJPOhym8CHmjF8y3q5mWpKx9xtZapXQUWCgkqvsK0R46Azuz+VaxD4Xl+Tg==}\n+  '@tanstack/table-core@8.21.2':\n+    resolution: {integrity: sha512-uvXk/U4cBiFMxt+p9/G7yUWI/UbHYbyghLCjlpWZ3mLeIZiUBSKcUnw9UnKkdRz7Z/N4UBuFLWQdJCjUe7HjvA==}\n     engines: {node: '>=12'}\n \n   '@total-typescript/ts-reset@0.6.1':\n@@ -3328,13 +3328,13 @@ snapshots:\n       typescript: 5.7.3\n       zod: 3.24.2\n \n-  '@tanstack/react-table@8.20.6(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n+  '@tanstack/react-table@8.21.2(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n     dependencies:\n-      '@tanstack/table-core': 8.20.5\n+      '@tanstack/table-core': 8.21.2\n       react: 19.0.0\n       react-dom: 19.0.0(react@19.0.0)\n \n-  '@tanstack/table-core@8.20.5': {}\n+  '@tanstack/table-core@8.21.2': {}\n \n   '@total-typescript/ts-reset@0.6.1': {}\n ",
    "output": "fix(deps): update dependency @tanstack/react-table to v8.21.2 (#879)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 9706cfd..eccd1ad 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -61,7 +61,7 @@ importers:\n         version: 1.1.8(@types/react-dom@19.0.3(@types/react@19.0.8))(@types/react@19.0.8)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n       '@t3-oss/env-nextjs':\n         specifier: ^0.12.0\n-        version: 0.12.0(typescript@5.7.3)(zod@3.24.1)\n+        version: 0.12.0(typescript@5.7.3)(zod@3.24.2)\n       '@tanstack/react-table':\n         specifier: ^8.20.6\n         version: 8.20.6(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n@@ -133,7 +133,7 @@ importers:\n         version: 1.1.2(@types/react-dom@19.0.3(@types/react@19.0.8))(@types/react@19.0.8)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n       zod:\n         specifier: ^3.24.1\n-        version: 3.24.1\n+        version: 3.24.2\n     devDependencies:\n       '@biomejs/biome':\n         specifier: ^1.9.4\n@@ -2388,8 +2388,8 @@ packages:\n     engines: {node: '>= 14'}\n     hasBin: true\n \n-  zod@3.24.1:\n-    resolution: {integrity: sha512-muH7gBL9sI1nciMZV67X5fTKKBLtwpZ5VBp1vsOQzj1MhrBZ4wlVCm3gedKZWLp0Oyel8sIGfeiz54Su+OVT+A==}\n+  zod@3.24.2:\n+    resolution: {integrity: sha512-lY7CDW43ECgW9u1TcT3IoXHflywfVqDYze4waEz812jR/bZ8FHDsl7pFQoSZTz5N+2NqRXs8GBwnAwo3ZNxqhQ==}\n \n snapshots:\n \n@@ -3316,17 +3316,17 @@ snapshots:\n     dependencies:\n       tslib: 2.8.1\n \n-  '@t3-oss/env-core@0.12.0(typescript@5.7.3)(zod@3.24.1)':\n+  '@t3-oss/env-core@0.12.0(typescript@5.7.3)(zod@3.24.2)':\n     optionalDependencies:\n       typescript: 5.7.3\n-      zod: 3.24.1\n+      zod: 3.24.2\n \n-  '@t3-oss/env-nextjs@0.12.0(typescript@5.7.3)(zod@3.24.1)':\n+  '@t3-oss/env-nextjs@0.12.0(typescript@5.7.3)(zod@3.24.2)':\n     dependencies:\n-      '@t3-oss/env-core': 0.12.0(typescript@5.7.3)(zod@3.24.1)\n+      '@t3-oss/env-core': 0.12.0(typescript@5.7.3)(zod@3.24.2)\n     optionalDependencies:\n       typescript: 5.7.3\n-      zod: 3.24.1\n+      zod: 3.24.2\n \n   '@tanstack/react-table@8.20.6(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n     dependencies:\n@@ -4251,4 +4251,4 @@ snapshots:\n \n   yaml@2.7.0: {}\n \n-  zod@3.24.1: {}\n+  zod@3.24.2: {}",
    "output": "fix(deps): update dependency zod to v3.24.2 (#878)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 443bc45..9706cfd 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -79,7 +79,7 @@ importers:\n         version: 4.1.0\n       drizzle-orm:\n         specifier: ^0.39.1\n-        version: 0.39.3(@libsql/client-wasm@0.14.0)(pg@8.13.1)(postgres@3.4.5)\n+        version: 0.39.3(@libsql/client-wasm@0.14.0)(pg@8.13.2)(postgres@3.4.5)\n       export-to-csv:\n         specifier: ^1.4.0\n         version: 1.4.0\n@@ -164,7 +164,7 @@ importers:\n         version: 0.30.4\n       pg:\n         specifier: ^8.13.1\n-        version: 8.13.1\n+        version: 8.13.2\n       postcss:\n         specifier: ^8.5.1\n         version: 8.5.2\n@@ -1982,20 +1982,20 @@ packages:\n     resolution: {integrity: sha512-WCtabS6t3c8SkpDBUlb1kjOs7l66xsGdKpIPZsg4wR+B3+u9UAum2odSsF9tnvxg80h4ZxLWMy4pRjOsFIqQpw==}\n     engines: {node: '>=4.0.0'}\n \n-  pg-pool@3.7.0:\n-    resolution: {integrity: sha512-ZOBQForurqh4zZWjrgSwwAtzJ7QiRX0ovFkZr2klsen3Nm0aoh33Ls0fzfv3imeH/nw/O27cjdz5kzYJfeGp/g==}\n+  pg-pool@3.7.1:\n+    resolution: {integrity: sha512-xIOsFoh7Vdhojas6q3596mXFsR8nwBQBXX5JiV7p9buEVAGqYL4yFzclON5P9vFrpu1u7Zwl2oriyDa89n0wbw==}\n     peerDependencies:\n       pg: '>=8.0'\n \n-  pg-protocol@1.7.0:\n-    resolution: {integrity: sha512-hTK/mE36i8fDDhgDFjy6xNOG+LCorxLG3WO17tku+ij6sVHXh1jQUJ8hYAnRhNla4QVD2H8er/FOjc/+EgC6yQ==}\n+  pg-protocol@1.7.1:\n+    resolution: {integrity: sha512-gjTHWGYWsEgy9MsY0Gp6ZJxV24IjDqdpTW7Eh0x+WfJLFsm/TJx1MzL6T0D88mBvkpxotCQ6TwW6N+Kko7lhgQ==}\n \n   pg-types@2.2.0:\n     resolution: {integrity: sha512-qTAAlrEsl8s4OiEQY69wDvcMIdQN6wdz5ojQiOy6YRMuynxenON0O5oCpJI6lshc6scgAY8qvJ2On/p+CXY0GA==}\n     engines: {node: '>=4'}\n \n-  pg@8.13.1:\n-    resolution: {integrity: sha512-OUir1A0rPNZlX//c7ksiu7crsGZTKSOXJPgtNiHGIlC9H0lO+NC6ZDYksSgBYY/thSWhnSRBv8w1lieNNGATNQ==}\n+  pg@8.13.2:\n+    resolution: {integrity: sha512-L5QkPvTjVWWHbLaFjCkOSplpb2uCiRYbg0IJ2okCy5ClYfWlSgDDnvdR6dyw3EWAH2AfS4j8E61QFI7gLfTtlw==}\n     engines: {node: '>= 8.0.0'}\n     peerDependencies:\n       pg-native: '>=3.0.1'\n@@ -3520,10 +3520,10 @@ snapshots:\n     transitivePeerDependencies:\n       - supports-color\n \n-  drizzle-orm@0.39.3(@libsql/client-wasm@0.14.0)(pg@8.13.1)(postgres@3.4.5):\n+  drizzle-orm@0.39.3(@libsql/client-wasm@0.14.0)(pg@8.13.2)(postgres@3.4.5):\n     optionalDependencies:\n       '@libsql/client-wasm': 0.14.0\n-      pg: 8.13.1\n+      pg: 8.13.2\n       postgres: 3.4.5\n \n   eastasianwidth@0.2.0: {}\n@@ -3847,11 +3847,11 @@ snapshots:\n \n   pg-int8@1.0.1: {}\n \n-  pg-pool@3.7.0(pg@8.13.1):\n+  pg-pool@3.7.1(pg@8.13.2):\n     dependencies:\n-      pg: 8.13.1\n+      pg: 8.13.2\n \n-  pg-protocol@1.7.0: {}\n+  pg-protocol@1.7.1: {}\n \n   pg-types@2.2.0:\n     dependencies:\n@@ -3861,11 +3861,11 @@ snapshots:\n       postgres-date: 1.0.7\n       postgres-interval: 1.2.0\n \n-  pg@8.13.1:\n+  pg@8.13.2:\n     dependencies:\n       pg-connection-string: 2.7.0\n-      pg-pool: 3.7.0(pg@8.13.1)\n-      pg-protocol: 1.7.0\n+      pg-pool: 3.7.1(pg@8.13.2)\n+      pg-protocol: 1.7.1\n       pg-types: 2.2.0\n       pgpass: 1.0.5\n     optionalDependencies:",
    "output": "chore(deps): update dependency pg to v8.13.2 (#877)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 369f2ad..5d72f2b 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -79,7 +79,7 @@ importers:\n         version: 4.1.0\n       drizzle-orm:\n         specifier: ^0.39.1\n-        version: 0.39.2(@libsql/client-wasm@0.14.0)(@types/react@19.0.8)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0)\n+        version: 0.39.3(@libsql/client-wasm@0.14.0)(pg@8.13.1)(postgres@3.4.5)\n       export-to-csv:\n         specifier: ^1.4.0\n         version: 1.4.0\n@@ -1597,8 +1597,8 @@ packages:\n     resolution: {integrity: sha512-B2oJN5UkvwwNHscPWXDG5KqAixu7AUzZ3qbe++KU9SsQ+cZWR4DXEPYcvWplyFAno0dhRJECNEhNxiDmFaPGyQ==}\n     hasBin: true\n \n-  drizzle-orm@0.39.2:\n-    resolution: {integrity: sha512-cuopo+udkKEGGpSxCML9ZRQ43R01zYCTsbqCrb9kJkabx1QEwFlPIFoQfx6E6tuawtiX930Gwyrkwj4inlpzDg==}\n+  drizzle-orm@0.39.3:\n+    resolution: {integrity: sha512-EZ8ZpYvDIvKU9C56JYLOmUskazhad+uXZCTCRN4OnRMsL+xAJ05dv1eCpAG5xzhsm1hqiuC5kAZUCS924u2DTw==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=4'\n@@ -1613,7 +1613,6 @@ packages:\n       '@tidbcloud/serverless': '*'\n       '@types/better-sqlite3': '*'\n       '@types/pg': '*'\n-      '@types/react': '>=18'\n       '@types/sql.js': '*'\n       '@vercel/postgres': '>=0.8.0'\n       '@xata.io/client': '*'\n@@ -1626,7 +1625,6 @@ packages:\n       pg: '>=8'\n       postgres: '>=3'\n       prisma: '*'\n-      react: '>=18'\n       sql.js: '>=1'\n       sqlite3: '>=5'\n     peerDependenciesMeta:\n@@ -1656,8 +1654,6 @@ packages:\n         optional: true\n       '@types/pg':\n         optional: true\n-      '@types/react':\n-        optional: true\n       '@types/sql.js':\n         optional: true\n       '@vercel/postgres':\n@@ -1682,8 +1678,6 @@ packages:\n         optional: true\n       prisma:\n         optional: true\n-      react:\n-        optional: true\n       sql.js:\n         optional: true\n       sqlite3:\n@@ -3521,13 +3515,11 @@ snapshots:\n     transitivePeerDependencies:\n       - supports-color\n \n-  drizzle-orm@0.39.2(@libsql/client-wasm@0.14.0)(@types/react@19.0.8)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0):\n+  drizzle-orm@0.39.3(@libsql/client-wasm@0.14.0)(pg@8.13.1)(postgres@3.4.5):\n     optionalDependencies:\n       '@libsql/client-wasm': 0.14.0\n-      '@types/react': 19.0.8\n       pg: 8.13.1\n       postgres: 3.4.5\n-      react: 19.0.0\n \n   eastasianwidth@0.2.0: {}\n ",
    "output": "fix(deps): update dependency drizzle-orm to v0.39.3 (#875)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 1790318..369f2ad 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -155,7 +155,7 @@ importers:\n         version: 19.0.3(@types/react@19.0.8)\n       autoprefixer:\n         specifier: ^10.4.20\n-        version: 10.4.20(postcss@8.5.1)\n+        version: 10.4.20(postcss@8.5.2)\n       dotenv-cli:\n         specifier: ^8.0.0\n         version: 8.0.0\n@@ -167,7 +167,7 @@ importers:\n         version: 8.13.1\n       postcss:\n         specifier: ^8.5.1\n-        version: 8.5.1\n+        version: 8.5.2\n       rimraf:\n         specifier: ^6.0.1\n         version: 6.0.1\n@@ -2065,8 +2065,8 @@ packages:\n     resolution: {integrity: sha512-PS08Iboia9mts/2ygV3eLpY5ghnUcfLV/EXTOW1E2qYxJKGGBUtNjN76FYHnMs36RmARn41bC0AZmn+rR0OVpQ==}\n     engines: {node: ^10 || ^12 || >=14}\n \n-  postcss@8.5.1:\n-    resolution: {integrity: sha512-6oz2beyjc5VMn/KV1pPw8fliQkhBXrVn1Z3TVyqZxU8kZpzEKhBdmCFqI6ZbmGtamQvQGuU1sgPTk8ZrXDD7jQ==}\n+  postcss@8.5.2:\n+    resolution: {integrity: sha512-MjOadfU3Ys9KYoX0AdkBlFEF1Vx37uCCeN4ZHnmwm9FfpbsGWMZeBLMmmpY+6Ocqod7mkdZ0DT31OlbsFrLlkA==}\n     engines: {node: ^10 || ^12 || >=14}\n \n   postgres-array@2.0.0:\n@@ -3382,14 +3382,14 @@ snapshots:\n     dependencies:\n       tslib: 2.8.1\n \n-  autoprefixer@10.4.20(postcss@8.5.1):\n+  autoprefixer@10.4.20(postcss@8.5.2):\n     dependencies:\n       browserslist: 4.24.4\n       caniuse-lite: 1.0.30001696\n       fraction.js: 4.3.7\n       normalize-range: 0.1.2\n       picocolors: 1.1.1\n-      postcss: 8.5.1\n+      postcss: 8.5.2\n       postcss-value-parser: 4.2.0\n \n   balanced-match@1.0.2: {}\n@@ -3886,28 +3886,28 @@ snapshots:\n \n   pirates@4.0.6: {}\n \n-  postcss-import@15.1.0(postcss@8.5.1):\n+  postcss-import@15.1.0(postcss@8.5.2):\n     dependencies:\n-      postcss: 8.5.1\n+      postcss: 8.5.2\n       postcss-value-parser: 4.2.0\n       read-cache: 1.0.0\n       resolve: 1.22.10\n \n-  postcss-js@4.0.1(postcss@8.5.1):\n+  postcss-js@4.0.1(postcss@8.5.2):\n     dependencies:\n       camelcase-css: 2.0.1\n-      postcss: 8.5.1\n+      postcss: 8.5.2\n \n-  postcss-load-config@4.0.2(postcss@8.5.1):\n+  postcss-load-config@4.0.2(postcss@8.5.2):\n     dependencies:\n       lilconfig: 3.1.3\n       yaml: 2.7.0\n     optionalDependencies:\n-      postcss: 8.5.1\n+      postcss: 8.5.2\n \n-  postcss-nested@6.2.0(postcss@8.5.1):\n+  postcss-nested@6.2.0(postcss@8.5.2):\n     dependencies:\n-      postcss: 8.5.1\n+      postcss: 8.5.2\n       postcss-selector-parser: 6.1.2\n \n   postcss-selector-parser@6.1.2:\n@@ -3923,7 +3923,7 @@ snapshots:\n       picocolors: 1.1.1\n       source-map-js: 1.2.1\n \n-  postcss@8.5.1:\n+  postcss@8.5.2:\n     dependencies:\n       nanoid: 3.3.8\n       picocolors: 1.1.1\n@@ -4157,11 +4157,11 @@ snapshots:\n       normalize-path: 3.0.0\n       object-hash: 3.0.0\n       picocolors: 1.1.1\n-      postcss: 8.5.1\n-      postcss-import: 15.1.0(postcss@8.5.1)\n-      postcss-js: 4.0.1(postcss@8.5.1)\n-      postcss-load-config: 4.0.2(postcss@8.5.1)\n-      postcss-nested: 6.2.0(postcss@8.5.1)\n+      postcss: 8.5.2\n+      postcss-import: 15.1.0(postcss@8.5.2)\n+      postcss-js: 4.0.1(postcss@8.5.2)\n+      postcss-load-config: 4.0.2(postcss@8.5.2)\n+      postcss-nested: 6.2.0(postcss@8.5.2)\n       postcss-selector-parser: 6.1.2\n       resolve: 1.22.10\n       sucrase: 3.35.0",
    "output": "chore(deps): update dependency postcss to v8.5.2 (#874)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex d6cf690..fa5d7d5 100644\n--- a/package.json\n+++ b/package.json\n@@ -26,7 +26,7 @@\n     \"@dnd-kit/modifiers\": \"^9.0.0\",\n     \"@dnd-kit/sortable\": \"^10.0.0\",\n     \"@dnd-kit/utilities\": \"^3.2.2\",\n-    \"@hookform/resolvers\": \"^3.10.0\",\n+    \"@hookform/resolvers\": \"^4.0.0\",\n     \"@radix-ui/react-checkbox\": \"^1.1.3\",\n     \"@radix-ui/react-dialog\": \"^1.1.5\",\n     \"@radix-ui/react-dropdown-menu\": \"^2.1.5\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex fedef46..1790318 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -21,8 +21,8 @@ importers:\n         specifier: ^3.2.2\n         version: 3.2.2(react@19.0.0)\n       '@hookform/resolvers':\n-        specifier: ^3.10.0\n-        version: 3.10.0(react-hook-form@7.54.2(react@19.0.0))\n+        specifier: ^4.0.0\n+        version: 4.0.0(react-hook-form@7.54.2(react@19.0.0))\n       '@radix-ui/react-checkbox':\n         specifier: ^1.1.3\n         version: 1.1.4(@types/react-dom@19.0.3(@types/react@19.0.8))(@types/react@19.0.8)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n@@ -715,8 +715,8 @@ packages:\n   '@floating-ui/utils@0.2.9':\n     resolution: {integrity: sha512-MDWhGtE+eHw5JW7lq4qhc5yRLS11ERl1c7Z6Xd0a58DozHES6EnNNwUWbMiG4J9Cgj053Bhk8zvlhFYKVhULwg==}\n \n-  '@hookform/resolvers@3.10.0':\n-    resolution: {integrity: sha512-79Dv+3mDF7i+2ajj7SkypSKHhl1cbln1OGavqrsF7p6mbUv11xpqpacPsGDCTRvCSjEEIez2ef1NveSVL3b0Ag==}\n+  '@hookform/resolvers@4.0.0':\n+    resolution: {integrity: sha512-93ZueVlTaeMF0pRbrLbcnzrxeb2mGA/xyO3RgfrsKs5OCtcfjoWcdjBJm+N7096Jfg/JYlGPjuyQCgqVEodSTg==}\n     peerDependencies:\n       react-hook-form: ^7.0.0\n \n@@ -2708,7 +2708,7 @@ snapshots:\n \n   '@floating-ui/utils@0.2.9': {}\n \n-  '@hookform/resolvers@3.10.0(react-hook-form@7.54.2(react@19.0.0))':\n+  '@hookform/resolvers@4.0.0(react-hook-form@7.54.2(react@19.0.0))':\n     dependencies:\n       react-hook-form: 7.54.2(react@19.0.0)\n ",
    "output": "fix(deps): update dependency @hookform/resolvers to v4 (#873)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex f6fca77..d6cf690 100644\n--- a/package.json\n+++ b/package.json\n@@ -48,7 +48,7 @@\n     \"drizzle-orm\": \"^0.39.1\",\n     \"export-to-csv\": \"^1.4.0\",\n     \"geist\": \"^1.3.1\",\n-    \"lucide-react\": \"^0.474.0\",\n+    \"lucide-react\": \"^0.475.0\",\n     \"nanoid\": \"^5.0.9\",\n     \"next\": \"^15.1.6\",\n     \"next-themes\": \"^0.4.4\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 6af857b..fedef46 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -87,8 +87,8 @@ importers:\n         specifier: ^1.3.1\n         version: 1.3.1(next@15.1.6(react-dom@19.0.0(react@19.0.0))(react@19.0.0))\n       lucide-react:\n-        specifier: ^0.474.0\n-        version: 0.474.0(react@19.0.0)\n+        specifier: ^0.475.0\n+        version: 0.475.0(react@19.0.0)\n       nanoid:\n         specifier: ^5.0.9\n         version: 5.0.9\n@@ -1846,8 +1846,8 @@ packages:\n     resolution: {integrity: sha512-123qHRfJBmo2jXDbo/a5YOQrJoHF/GNQTLzQ5+IdK5pWpceK17yRc6ozlWd25FxvGKQbIUs91fDFkXmDHTKcyA==}\n     engines: {node: 20 || >=22}\n \n-  lucide-react@0.474.0:\n-    resolution: {integrity: sha512-CmghgHkh0OJNmxGKWc0qfPJCYHASPMVSyGY8fj3xgk4v84ItqDg64JNKFZn5hC6E0vHi6gxnbCgwhyVB09wQtA==}\n+  lucide-react@0.475.0:\n+    resolution: {integrity: sha512-NJzvVu1HwFVeZ+Gwq2q00KygM1aBhy/ZrhY9FsAgJtpB+E4R7uxRk9M2iKvHa6/vNxZydIB59htha4c2vvwvVg==}\n     peerDependencies:\n       react: ^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0\n \n@@ -3740,7 +3740,7 @@ snapshots:\n \n   lru-cache@11.0.2: {}\n \n-  lucide-react@0.474.0(react@19.0.0):\n+  lucide-react@0.475.0(react@19.0.0):\n     dependencies:\n       react: 19.0.0\n ",
    "output": "fix(deps): update dependency lucide-react to ^0.475.0 (#872)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 76510d4..f032343 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -79,7 +79,7 @@ importers:\n         version: 4.1.0\n       drizzle-orm:\n         specifier: ^0.39.1\n-        version: 0.39.1(@libsql/client-wasm@0.14.0)(@types/react@19.0.8)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0)\n+        version: 0.39.2(@libsql/client-wasm@0.14.0)(@types/react@19.0.8)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0)\n       export-to-csv:\n         specifier: ^1.4.0\n         version: 1.4.0\n@@ -1575,8 +1575,8 @@ packages:\n     resolution: {integrity: sha512-B2oJN5UkvwwNHscPWXDG5KqAixu7AUzZ3qbe++KU9SsQ+cZWR4DXEPYcvWplyFAno0dhRJECNEhNxiDmFaPGyQ==}\n     hasBin: true\n \n-  drizzle-orm@0.39.1:\n-    resolution: {integrity: sha512-2bDHlzTY31IDmrYn8i+ZZrxK8IyBD4mPZ7JmZdVDQj2tpBZXs/gxB/1kK5pSvkjxPUMNOVsTnoGkSltgjuJwcA==}\n+  drizzle-orm@0.39.2:\n+    resolution: {integrity: sha512-cuopo+udkKEGGpSxCML9ZRQ43R01zYCTsbqCrb9kJkabx1QEwFlPIFoQfx6E6tuawtiX930Gwyrkwj4inlpzDg==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=4'\n@@ -3483,7 +3483,7 @@ snapshots:\n     transitivePeerDependencies:\n       - supports-color\n \n-  drizzle-orm@0.39.1(@libsql/client-wasm@0.14.0)(@types/react@19.0.8)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0):\n+  drizzle-orm@0.39.2(@libsql/client-wasm@0.14.0)(@types/react@19.0.8)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0):\n     optionalDependencies:\n       '@libsql/client-wasm': 0.14.0\n       '@types/react': 19.0.8",
    "output": "fix(deps): update dependency drizzle-orm to v0.39.2 (#870)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 353d996..76510d4 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -146,7 +146,7 @@ importers:\n         version: 0.6.1\n       '@types/node':\n         specifier: ^22.12.0\n-        version: 22.13.0\n+        version: 22.13.1\n       '@types/react':\n         specifier: ^19.0.8\n         version: 19.0.8\n@@ -1396,8 +1396,8 @@ packages:\n   '@types/cookie@0.6.0':\n     resolution: {integrity: sha512-4Kh9a6B2bQciAhf7FSuMRRkUWecJgJu9nPnx3yzpsfXX/c50REIqpHY4C82bXP90qrLtXtkDxTZosYO3UpOwlA==}\n \n-  '@types/node@22.13.0':\n-    resolution: {integrity: sha512-ClIbNe36lawluuvq3+YYhnIN2CELi+6q8NpnM7PYp4hBn/TatfboPgVSm2rwKRfnV2M+Ty9GWDFI64KEe+kysA==}\n+  '@types/node@22.13.1':\n+    resolution: {integrity: sha512-jK8uzQlrvXqEU91UxiK5J7pKHyzgnI1Qnl0QDHIgVGuolJhRb9EEl28Cj9b3rGR8B2lhFCtvIm5os8lFnO/1Ew==}\n \n   '@types/react-dom@19.0.3':\n     resolution: {integrity: sha512-0Knk+HJiMP/qOZgMyNFamlIjw9OFCsyC2ZbigmEEyXXixgre6IQpm/4V+r3qH4GC1JPvRJKInw+on2rV6YZLeA==}\n@@ -3306,7 +3306,7 @@ snapshots:\n   '@types/cookie@0.6.0':\n     optional: true\n \n-  '@types/node@22.13.0':\n+  '@types/node@22.13.1':\n     dependencies:\n       undici-types: 6.20.0\n ",
    "output": "chore(deps): update dependency @types/node to v22.13.1 (#868)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 9b10579..353d996 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -100,7 +100,7 @@ importers:\n         version: 0.4.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n       nuqs:\n         specifier: ^2.3.1\n-        version: 2.3.1(@remix-run/react@2.13.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)(typescript@5.7.3))(next@15.1.6(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router-dom@6.27.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router@6.27.0(react@19.0.0))(react@19.0.0)\n+        version: 2.3.2(@remix-run/react@2.13.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)(typescript@5.7.3))(next@15.1.6(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router-dom@6.27.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router@6.27.0(react@19.0.0))(react@19.0.0)\n       postgres:\n         specifier: ^3.4.5\n         version: 3.4.5\n@@ -1909,8 +1909,8 @@ packages:\n     resolution: {integrity: sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==}\n     engines: {node: '>=0.10.0'}\n \n-  nuqs@2.3.1:\n-    resolution: {integrity: sha512-IyzSay4UlaBj+KnPBFjoJKilEmX5XLePfwC+X5wJS87dMFf8tvxysIaBwma6eupQJ5mdu35f4gFzp9+v1CK/jQ==}\n+  nuqs@2.3.2:\n+    resolution: {integrity: sha512-WeG78r8e3a30JY3P8npldvNiAZwGIk499lnpeRs3UYA3PpSvs2/PLunKGgjuF/JMw4BOowD3K2xgGEOZ3PeODA==}\n     peerDependencies:\n       '@remix-run/react': '>=2'\n       next: '>=14.2.0'\n@@ -3775,7 +3775,7 @@ snapshots:\n \n   normalize-range@0.1.2: {}\n \n-  nuqs@2.3.1(@remix-run/react@2.13.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)(typescript@5.7.3))(next@15.1.6(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router-dom@6.27.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router@6.27.0(react@19.0.0))(react@19.0.0):\n+  nuqs@2.3.2(@remix-run/react@2.13.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)(typescript@5.7.3))(next@15.1.6(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router-dom@6.27.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router@6.27.0(react@19.0.0))(react@19.0.0):\n     dependencies:\n       mitt: 3.0.1\n       react: 19.0.0",
    "output": "fix(deps): update dependency nuqs to v2.3.2 (#864)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 0d2ffc8..9b10579 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -146,7 +146,7 @@ importers:\n         version: 0.6.1\n       '@types/node':\n         specifier: ^22.12.0\n-        version: 22.12.0\n+        version: 22.13.0\n       '@types/react':\n         specifier: ^19.0.8\n         version: 19.0.8\n@@ -1396,8 +1396,8 @@ packages:\n   '@types/cookie@0.6.0':\n     resolution: {integrity: sha512-4Kh9a6B2bQciAhf7FSuMRRkUWecJgJu9nPnx3yzpsfXX/c50REIqpHY4C82bXP90qrLtXtkDxTZosYO3UpOwlA==}\n \n-  '@types/node@22.12.0':\n-    resolution: {integrity: sha512-Fll2FZ1riMjNmlmJOdAyY5pUbkftXslB5DgEzlIuNaiWhXd00FhWxVC/r4yV/4wBb9JfImTu+jiSvXTkJ7F/gA==}\n+  '@types/node@22.13.0':\n+    resolution: {integrity: sha512-ClIbNe36lawluuvq3+YYhnIN2CELi+6q8NpnM7PYp4hBn/TatfboPgVSm2rwKRfnV2M+Ty9GWDFI64KEe+kysA==}\n \n   '@types/react-dom@19.0.3':\n     resolution: {integrity: sha512-0Knk+HJiMP/qOZgMyNFamlIjw9OFCsyC2ZbigmEEyXXixgre6IQpm/4V+r3qH4GC1JPvRJKInw+on2rV6YZLeA==}\n@@ -3306,7 +3306,7 @@ snapshots:\n   '@types/cookie@0.6.0':\n     optional: true\n \n-  '@types/node@22.12.0':\n+  '@types/node@22.13.0':\n     dependencies:\n       undici-types: 6.20.0\n ",
    "output": "chore(deps): update dependency @types/node to v22.13.0 (#863)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex b158cfd..0d2ffc8 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -121,7 +121,7 @@ importers:\n         version: 0.0.1\n       sonner:\n         specifier: ^1.7.3\n-        version: 1.7.3(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n+        version: 1.7.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n       tailwind-merge:\n         specifier: ^3.0.1\n         version: 3.0.1\n@@ -2194,8 +2194,8 @@ packages:\n   simple-swizzle@0.2.2:\n     resolution: {integrity: sha512-JA//kQgZtbuY83m+xT+tXJkmJncGMTFT+C+g2h2R9uxkYIrE2yy9sgmcLhCnw57/WSD+Eh3J97FPEDFnbXnDUg==}\n \n-  sonner@1.7.3:\n-    resolution: {integrity: sha512-KXLWQfyR6AHpYZuQk8eO8fCbZSJY3JOpgsu/tbGc++jgPjj8JsR1ZpO8vFhqR/OxvWMQCSAmnSShY0gr4FPqHg==}\n+  sonner@1.7.4:\n+    resolution: {integrity: sha512-DIS8z4PfJRbIyfVFDVnK9rO3eYDtse4Omcm6bt0oEr5/jtLgysmjuBl1frJ9E/EQZrFmKx2A8m/s5s9CRXIzhw==}\n     peerDependencies:\n       react: ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n       react-dom: ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n@@ -4039,7 +4039,7 @@ snapshots:\n       is-arrayish: 0.3.2\n     optional: true\n \n-  sonner@1.7.3(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n+  sonner@1.7.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n     dependencies:\n       react: 19.0.0\n       react-dom: 19.0.0(react@19.0.0)",
    "output": "fix(deps): update dependency sonner to v1.7.4 (#862)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/components/ui/sortable.tsx b/src/components/ui/sortable.tsx\nindex 91f673e..8207578 100644\n--- a/src/components/ui/sortable.tsx\n+++ b/src/components/ui/sortable.tsx\n@@ -66,11 +66,11 @@ const ITEM_HANDLE_NAME = \"SortableItemHandle\";\n const OVERLAY_NAME = \"SortableOverlay\";\n \n const SORTABLE_ERROR = {\n-  [ROOT_NAME]: `${ROOT_NAME} components must be within ${ROOT_NAME}`,\n-  [CONTENT_NAME]: `${CONTENT_NAME} must be within ${ROOT_NAME}`,\n-  [ITEM_NAME]: `${ITEM_NAME} must be within ${CONTENT_NAME}`,\n-  [ITEM_HANDLE_NAME]: `${ITEM_HANDLE_NAME} must be within ${ITEM_NAME}`,\n-  [OVERLAY_NAME]: `${OVERLAY_NAME} must be within ${ROOT_NAME}`,\n+  [ROOT_NAME]: `\\`${ROOT_NAME}\\` components must be within \\`${ROOT_NAME}\\``,\n+  [CONTENT_NAME]: `\\`${CONTENT_NAME}\\` must be within \\`${ROOT_NAME}\\``,\n+  [ITEM_NAME]: `\\`${ITEM_NAME}\\` must be within \\`${CONTENT_NAME}\\``,\n+  [ITEM_HANDLE_NAME]: `\\`${ITEM_HANDLE_NAME}\\` must be within \\`${ITEM_NAME}\\``,\n+  [OVERLAY_NAME]: `\\`${OVERLAY_NAME}\\` must be within \\`${ROOT_NAME}\\``,\n } as const;\n \n interface SortableRootContextValue<T> {\ndiff --git a/src/lib/compose-refs.ts b/src/lib/compose-refs.ts\ndeleted file mode 100644\nindex 8344988..0000000\n--- a/src/lib/compose-refs.ts\n+++ /dev/null\n@@ -1,42 +0,0 @@\n-/**\n- * @see https://github.com/radix-ui/primitives/blob/main/packages/react/compose-refs/src/composeRefs.tsx\n- */\n-\n-import * as React from \"react\";\n-\n-type PossibleRef<T> = React.Ref<T> | undefined;\n-\n-/**\n- * Set a given ref to a given value\n- * This utility takes care of different types of refs: callback refs and RefObject(s)\n- */\n-function setRef<T>(ref: PossibleRef<T>, value: T) {\n-  if (typeof ref === \"function\") {\n-    ref(value);\n-  } else if (ref !== null && ref !== undefined) {\n-    (ref as React.MutableRefObject<T>).current = value;\n-  }\n-}\n-\n-/**\n- * A utility to compose multiple refs together\n- * Accepts callback refs and RefObject(s)\n- */\n-function composeRefs<T>(...refs: PossibleRef<T>[]) {\n-  return (node: T) => {\n-    for (const ref of refs) {\n-      setRef(ref, node);\n-    }\n-  };\n-}\n-\n-/**\n- * A custom hook that composes multiple refs\n- * Accepts callback refs and RefObject(s)\n- */\n-function useComposedRefs<T>(...refs: PossibleRef<T>[]) {\n-  // eslint-disable-next-line react-hooks/exhaustive-deps\n-  return React.useCallback(composeRefs(...refs), refs);\n-}\n-\n-export { composeRefs, useComposedRefs };",
    "output": "feat: update sortable"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/.github/workflows/code-check.yml b/.github/workflows/code-check.yml\nindex 62b29e0..977c19b 100644\n--- a/.github/workflows/code-check.yml\n+++ b/.github/workflows/code-check.yml\n@@ -28,20 +28,6 @@ jobs:\n \n       - run: pnpm lint\n \n-  format:\n-    runs-on: ubuntu-latest\n-    name: Format\n-    steps:\n-      - name: Checkout repo\n-        uses: actions/checkout@v4\n-      - name: Setup pnpm\n-        uses: pnpm/action-setup@v4\n-        with:\n-          version: 9.15.4\n-      - uses: ./.github/setup\n-\n-      - run: pnpm format:check\n-\n   typecheck:\n     runs-on: ubuntu-latest\n     name: Typecheck",
    "output": "chore: update actions"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 1c4b6d7..96b7536 100644\n--- a/package.json\n+++ b/package.json\n@@ -62,7 +62,7 @@\n     \"react-hook-form\": \"^7.53.1\",\n     \"server-only\": \"^0.0.1\",\n     \"sonner\": \"^1.5.0\",\n-    \"tailwind-merge\": \"^2.5.4\",\n+    \"tailwind-merge\": \"^3.0.0\",\n     \"tailwindcss-animate\": \"^1.0.7\",\n     \"vaul\": \"^1.1.0\",\n     \"zod\": \"^3.23.8\"\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 49f5178..2084413 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -123,8 +123,8 @@ importers:\n         specifier: ^1.5.0\n         version: 1.7.3(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n       tailwind-merge:\n-        specifier: ^2.5.4\n-        version: 2.6.0\n+        specifier: ^3.0.0\n+        version: 3.0.1\n       tailwindcss-animate:\n         specifier: ^1.0.7\n         version: 1.0.7(tailwindcss@3.4.17)\n@@ -3270,8 +3270,8 @@ packages:\n     resolution: {integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==}\n     engines: {node: '>= 0.4'}\n \n-  tailwind-merge@2.6.0:\n-    resolution: {integrity: sha512-P+Vu1qXfzediirmHOC3xKGAYeZtPcV9g76X+xg2FD4tYgR71ewMA35Y3sCz3zhiN/dwefRpJX0yBcgwi1fXNQA==}\n+  tailwind-merge@3.0.1:\n+    resolution: {integrity: sha512-AvzE8FmSoXC7nC+oU5GlQJbip2UO7tmOhOfQyOmPhrStOGXHU08j8mZEHZ4BmCqY5dWTCo4ClWkNyRNx1wpT0g==}\n \n   tailwindcss-animate@1.0.7:\n     resolution: {integrity: sha512-bl6mpH3T7I3UFxuvDEXLxy/VuFxBk5bbzplh7tXI68mwMokNYd1t9qPBHlnyTwfa4JGC4zP516I1hYYtQ/vspA==}\n@@ -6454,7 +6454,7 @@ snapshots:\n \n   supports-preserve-symlinks-flag@1.0.0: {}\n \n-  tailwind-merge@2.6.0: {}\n+  tailwind-merge@3.0.1: {}\n \n   tailwindcss-animate@1.0.7(tailwindcss@3.4.17):\n     dependencies:",
    "output": "fix(deps): update dependency tailwind-merge to v3 (#861)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 9154d9b..49f5178 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -79,7 +79,7 @@ importers:\n         version: 4.1.0\n       drizzle-orm:\n         specifier: ^0.39.0\n-        version: 0.39.0(@libsql/client-wasm@0.14.0)(@types/react@19.0.8)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0)\n+        version: 0.39.1(@libsql/client-wasm@0.14.0)(@types/react@19.0.8)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0)\n       export-to-csv:\n         specifier: ^1.4.0\n         version: 1.4.0\n@@ -1879,8 +1879,8 @@ packages:\n     resolution: {integrity: sha512-B2oJN5UkvwwNHscPWXDG5KqAixu7AUzZ3qbe++KU9SsQ+cZWR4DXEPYcvWplyFAno0dhRJECNEhNxiDmFaPGyQ==}\n     hasBin: true\n \n-  drizzle-orm@0.39.0:\n-    resolution: {integrity: sha512-kkZwo3Jvht0fdJD/EWGx0vYcEK0xnGrlNVaY07QYluRZA9N21B9VFbY+54bnb/1xvyzcg97tE65xprSAP/fFGQ==}\n+  drizzle-orm@0.39.1:\n+    resolution: {integrity: sha512-2bDHlzTY31IDmrYn8i+ZZrxK8IyBD4mPZ7JmZdVDQj2tpBZXs/gxB/1kK5pSvkjxPUMNOVsTnoGkSltgjuJwcA==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=4'\n@@ -4935,7 +4935,7 @@ snapshots:\n     transitivePeerDependencies:\n       - supports-color\n \n-  drizzle-orm@0.39.0(@libsql/client-wasm@0.14.0)(@types/react@19.0.8)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0):\n+  drizzle-orm@0.39.1(@libsql/client-wasm@0.14.0)(@types/react@19.0.8)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0):\n     optionalDependencies:\n       '@libsql/client-wasm': 0.14.0\n       '@types/react': 19.0.8",
    "output": "fix(deps): update dependency drizzle-orm to v0.39.1 (#859)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 2b566b5..9154d9b 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -170,7 +170,7 @@ importers:\n         version: 8.0.0\n       drizzle-kit:\n         specifier: ^0.30.0\n-        version: 0.30.3\n+        version: 0.30.4\n       eslint:\n         specifier: ^8.57.0\n         version: 8.57.1\n@@ -1875,8 +1875,8 @@ packages:\n     resolution: {integrity: sha512-ZmdL2rui+eB2YwhsWzjInR8LldtZHGDoQ1ugH85ppHKwpUHL7j7rN0Ti9NCnGiQbhaZ11FpR+7ao1dNsmduNUg==}\n     engines: {node: '>=12'}\n \n-  drizzle-kit@0.30.3:\n-    resolution: {integrity: sha512-kT8sgyC2hZrtOh5okhEBiwgx8jx+EjLUFoANFVVkBbxIjcb8XjaUorZ0rwCEUEd7THclI3ZARR64pmxloMW3Aw==}\n+  drizzle-kit@0.30.4:\n+    resolution: {integrity: sha512-B2oJN5UkvwwNHscPWXDG5KqAixu7AUzZ3qbe++KU9SsQ+cZWR4DXEPYcvWplyFAno0dhRJECNEhNxiDmFaPGyQ==}\n     hasBin: true\n \n   drizzle-orm@0.39.0:\n@@ -4926,7 +4926,7 @@ snapshots:\n \n   dotenv@16.4.5: {}\n \n-  drizzle-kit@0.30.3:\n+  drizzle-kit@0.30.4:\n     dependencies:\n       '@drizzle-team/brocli': 0.10.2\n       '@esbuild-kit/esm-loader': 2.6.5",
    "output": "chore(deps): update dependency drizzle-kit to v0.30.4 (#858)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex bcec265..2b566b5 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -121,7 +121,7 @@ importers:\n         version: 0.0.1\n       sonner:\n         specifier: ^1.5.0\n-        version: 1.7.2(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n+        version: 1.7.3(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n       tailwind-merge:\n         specifier: ^2.5.4\n         version: 2.6.0\n@@ -3165,8 +3165,8 @@ packages:\n   simple-swizzle@0.2.2:\n     resolution: {integrity: sha512-JA//kQgZtbuY83m+xT+tXJkmJncGMTFT+C+g2h2R9uxkYIrE2yy9sgmcLhCnw57/WSD+Eh3J97FPEDFnbXnDUg==}\n \n-  sonner@1.7.2:\n-    resolution: {integrity: sha512-zMbseqjrOzQD1a93lxahm+qMGxWovdMxBlkTbbnZdNqVLt4j+amF9PQxUCL32WfztOFt9t9ADYkejAL3jF9iNA==}\n+  sonner@1.7.3:\n+    resolution: {integrity: sha512-KXLWQfyR6AHpYZuQk8eO8fCbZSJY3JOpgsu/tbGc++jgPjj8JsR1ZpO8vFhqR/OxvWMQCSAmnSShY0gr4FPqHg==}\n     peerDependencies:\n       react: ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n       react-dom: ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n@@ -6336,7 +6336,7 @@ snapshots:\n       is-arrayish: 0.3.2\n     optional: true\n \n-  sonner@1.7.2(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n+  sonner@1.7.3(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n     dependencies:\n       react: 19.0.0\n       react-dom: 19.0.0(react@19.0.0)",
    "output": "fix(deps): update dependency sonner to v1.7.3 (#857)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 4d4aa64..bcec265 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -149,7 +149,7 @@ importers:\n         version: 8.56.12\n       '@types/node':\n         specifier: ^22.7.8\n-        version: 22.10.10\n+        version: 22.12.0\n       '@types/react':\n         specifier: ^19.0.0\n         version: 19.0.8\n@@ -1499,8 +1499,8 @@ packages:\n   '@types/json5@0.0.29':\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n \n-  '@types/node@22.10.10':\n-    resolution: {integrity: sha512-X47y/mPNzxviAGY5TcYPtYL8JsY3kAq2n8fMmKoRCxq/c4v4pyGNCzM2R6+M5/umG4ZfHuT+sgqDYqWc9rJ6ww==}\n+  '@types/node@22.12.0':\n+    resolution: {integrity: sha512-Fll2FZ1riMjNmlmJOdAyY5pUbkftXslB5DgEzlIuNaiWhXd00FhWxVC/r4yV/4wBb9JfImTu+jiSvXTkJ7F/gA==}\n \n   '@types/react-dom@19.0.3':\n     resolution: {integrity: sha512-0Knk+HJiMP/qOZgMyNFamlIjw9OFCsyC2ZbigmEEyXXixgre6IQpm/4V+r3qH4GC1JPvRJKInw+on2rV6YZLeA==}\n@@ -4499,7 +4499,7 @@ snapshots:\n \n   '@types/json5@0.0.29': {}\n \n-  '@types/node@22.10.10':\n+  '@types/node@22.12.0':\n     dependencies:\n       undici-types: 6.20.0\n ",
    "output": "chore(deps): update dependency @types/node to v22.12.0 (#856)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 7e8840e..1c4b6d7 100644\n--- a/package.json\n+++ b/package.json\n@@ -47,7 +47,7 @@\n     \"clsx\": \"^2.1.1\",\n     \"cmdk\": \"^1.0.0\",\n     \"date-fns\": \"^4.1.0\",\n-    \"drizzle-orm\": \"^0.38.0\",\n+    \"drizzle-orm\": \"^0.39.0\",\n     \"export-to-csv\": \"^1.4.0\",\n     \"geist\": \"^1.3.1\",\n     \"lucide-react\": \"^0.474.0\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 73f7b96..4d4aa64 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -78,8 +78,8 @@ importers:\n         specifier: ^4.1.0\n         version: 4.1.0\n       drizzle-orm:\n-        specifier: ^0.38.0\n-        version: 0.38.4(@libsql/client-wasm@0.14.0)(@types/react@19.0.8)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0)\n+        specifier: ^0.39.0\n+        version: 0.39.0(@libsql/client-wasm@0.14.0)(@types/react@19.0.8)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0)\n       export-to-csv:\n         specifier: ^1.4.0\n         version: 1.4.0\n@@ -1879,8 +1879,8 @@ packages:\n     resolution: {integrity: sha512-kT8sgyC2hZrtOh5okhEBiwgx8jx+EjLUFoANFVVkBbxIjcb8XjaUorZ0rwCEUEd7THclI3ZARR64pmxloMW3Aw==}\n     hasBin: true\n \n-  drizzle-orm@0.38.4:\n-    resolution: {integrity: sha512-s7/5BpLKO+WJRHspvpqTydxFob8i1vo2rEx4pY6TGY7QSMuUfWUuzaY0DIpXCkgHOo37BaFC+SJQb99dDUXT3Q==}\n+  drizzle-orm@0.39.0:\n+    resolution: {integrity: sha512-kkZwo3Jvht0fdJD/EWGx0vYcEK0xnGrlNVaY07QYluRZA9N21B9VFbY+54bnb/1xvyzcg97tE65xprSAP/fFGQ==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=4'\n@@ -4935,7 +4935,7 @@ snapshots:\n     transitivePeerDependencies:\n       - supports-color\n \n-  drizzle-orm@0.38.4(@libsql/client-wasm@0.14.0)(@types/react@19.0.8)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0):\n+  drizzle-orm@0.39.0(@libsql/client-wasm@0.14.0)(@types/react@19.0.8)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0):\n     optionalDependencies:\n       '@libsql/client-wasm': 0.14.0\n       '@types/react': 19.0.8",
    "output": "fix(deps): update dependency drizzle-orm to ^0.39.0 (#855)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex aad7727..1956eb6 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -170,7 +170,7 @@ importers:\n         version: 8.0.0\n       drizzle-kit:\n         specifier: ^0.30.0\n-        version: 0.30.2\n+        version: 0.30.3\n       eslint:\n         specifier: ^8.57.0\n         version: 8.57.1\n@@ -1875,8 +1875,8 @@ packages:\n     resolution: {integrity: sha512-ZmdL2rui+eB2YwhsWzjInR8LldtZHGDoQ1ugH85ppHKwpUHL7j7rN0Ti9NCnGiQbhaZ11FpR+7ao1dNsmduNUg==}\n     engines: {node: '>=12'}\n \n-  drizzle-kit@0.30.2:\n-    resolution: {integrity: sha512-vhdLrxWA32WNVF77NabpSnX7pQBornx64VDQDmKddRonOB2Xe/yY4glQ7rECoa+ogqcQNo7VblLUbeBK6Zn9Ow==}\n+  drizzle-kit@0.30.3:\n+    resolution: {integrity: sha512-kT8sgyC2hZrtOh5okhEBiwgx8jx+EjLUFoANFVVkBbxIjcb8XjaUorZ0rwCEUEd7THclI3ZARR64pmxloMW3Aw==}\n     hasBin: true\n \n   drizzle-orm@0.38.4:\n@@ -3554,7 +3554,7 @@ snapshots:\n   '@esbuild-kit/esm-loader@2.6.5':\n     dependencies:\n       '@esbuild-kit/core-utils': 3.3.2\n-      get-tsconfig: 4.8.1\n+      get-tsconfig: 4.10.0\n \n   '@esbuild/aix-ppc64@0.19.12':\n     optional: true\n@@ -4926,7 +4926,7 @@ snapshots:\n \n   dotenv@16.4.5: {}\n \n-  drizzle-kit@0.30.2:\n+  drizzle-kit@0.30.3:\n     dependencies:\n       '@drizzle-team/brocli': 0.10.2\n       '@esbuild-kit/esm-loader': 2.6.5",
    "output": "chore(deps): update dependency drizzle-kit to v0.30.3 (#853)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 5b7cd47..aad7727 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -194,7 +194,7 @@ importers:\n         version: 3.4.2\n       prettier-plugin-tailwindcss:\n         specifier: ^0.6.8\n-        version: 0.6.10(@ianvs/prettier-plugin-sort-imports@4.4.1(prettier@3.4.2))(prettier@3.4.2)\n+        version: 0.6.11(@ianvs/prettier-plugin-sort-imports@4.4.1(prettier@3.4.2))(prettier@3.4.2)\n       rimraf:\n         specifier: ^6.0.1\n         version: 6.0.1\n@@ -2899,8 +2899,8 @@ packages:\n     resolution: {integrity: sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==}\n     engines: {node: '>= 0.8.0'}\n \n-  prettier-plugin-tailwindcss@0.6.10:\n-    resolution: {integrity: sha512-ndj2WLDaMzACnr1gAYZiZZLs5ZdOeBYgOsbBmHj3nvW/6q8h8PymsXiEnKvj/9qgCCAoHyvLOisoQdIcsDvIgw==}\n+  prettier-plugin-tailwindcss@0.6.11:\n+    resolution: {integrity: sha512-YxaYSIvZPAqhrrEpRtonnrXdghZg1irNg4qrjboCXrpybLWVs55cW2N3juhspVJiO0JBvYJT8SYsJpc8OQSnsA==}\n     engines: {node: '>=14.21.3'}\n     peerDependencies:\n       '@ianvs/prettier-plugin-sort-imports': '*'\n@@ -6074,7 +6074,7 @@ snapshots:\n \n   prelude-ls@1.2.1: {}\n \n-  prettier-plugin-tailwindcss@0.6.10(@ianvs/prettier-plugin-sort-imports@4.4.1(prettier@3.4.2))(prettier@3.4.2):\n+  prettier-plugin-tailwindcss@0.6.11(@ianvs/prettier-plugin-sort-imports@4.4.1(prettier@3.4.2))(prettier@3.4.2):\n     dependencies:\n       prettier: 3.4.2\n     optionalDependencies:",
    "output": "chore(deps): update dependency prettier-plugin-tailwindcss to v0.6.11 (#850)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 3d8c3bb..5b7cd47 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -149,7 +149,7 @@ importers:\n         version: 8.56.12\n       '@types/node':\n         specifier: ^22.7.8\n-        version: 22.10.9\n+        version: 22.10.10\n       '@types/react':\n         specifier: ^19.0.0\n         version: 19.0.8\n@@ -1499,8 +1499,8 @@ packages:\n   '@types/json5@0.0.29':\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n \n-  '@types/node@22.10.9':\n-    resolution: {integrity: sha512-Ir6hwgsKyNESl/gLOcEz3krR4CBGgliDqBQ2ma4wIhEx0w+xnoeTq3tdrNw15kU3SxogDjOgv9sqdtLW8mIHaw==}\n+  '@types/node@22.10.10':\n+    resolution: {integrity: sha512-X47y/mPNzxviAGY5TcYPtYL8JsY3kAq2n8fMmKoRCxq/c4v4pyGNCzM2R6+M5/umG4ZfHuT+sgqDYqWc9rJ6ww==}\n \n   '@types/react-dom@19.0.3':\n     resolution: {integrity: sha512-0Knk+HJiMP/qOZgMyNFamlIjw9OFCsyC2ZbigmEEyXXixgre6IQpm/4V+r3qH4GC1JPvRJKInw+on2rV6YZLeA==}\n@@ -4499,7 +4499,7 @@ snapshots:\n \n   '@types/json5@0.0.29': {}\n \n-  '@types/node@22.10.9':\n+  '@types/node@22.10.10':\n     dependencies:\n       undici-types: 6.20.0\n ",
    "output": "chore(deps): update dependency @types/node to v22.10.10 (#849)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 650cbd5..7e8840e 100644\n--- a/package.json\n+++ b/package.json\n@@ -50,7 +50,7 @@\n     \"drizzle-orm\": \"^0.38.0\",\n     \"export-to-csv\": \"^1.4.0\",\n     \"geist\": \"^1.3.1\",\n-    \"lucide-react\": \"^0.473.0\",\n+    \"lucide-react\": \"^0.474.0\",\n     \"nanoid\": \"^5.0.7\",\n     \"next\": \"^15.0.0\",\n     \"next-themes\": \"^0.4.3\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex a5539b2..3d8c3bb 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -87,8 +87,8 @@ importers:\n         specifier: ^1.3.1\n         version: 1.3.1(next@15.1.6(react-dom@19.0.0(react@19.0.0))(react@19.0.0))\n       lucide-react:\n-        specifier: ^0.473.0\n-        version: 0.473.0(react@19.0.0)\n+        specifier: ^0.474.0\n+        version: 0.474.0(react@19.0.0)\n       nanoid:\n         specifier: ^5.0.7\n         version: 5.0.9\n@@ -2579,8 +2579,8 @@ packages:\n     resolution: {integrity: sha512-CgeuL5uom6j/ZVrg7G/+1IXqRY8JXX4Hghfy5YE0EhoYQWvndP1kufu58cmZLNIDKnRhZrXfdS9urVWx98AipQ==}\n     engines: {node: 20 || >=22}\n \n-  lucide-react@0.473.0:\n-    resolution: {integrity: sha512-KW6u5AKeIjkvrxXZ6WuCu9zHE/gEYSXCay+Gre2ZoInD0Je/e3RBtP4OHpJVJ40nDklSvjVKjgH7VU8/e2dzRw==}\n+  lucide-react@0.474.0:\n+    resolution: {integrity: sha512-CmghgHkh0OJNmxGKWc0qfPJCYHASPMVSyGY8fj3xgk4v84ItqDg64JNKFZn5hC6E0vHi6gxnbCgwhyVB09wQtA==}\n     peerDependencies:\n       react: ^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0\n \n@@ -5787,7 +5787,7 @@ snapshots:\n \n   lru-cache@11.0.1: {}\n \n-  lucide-react@0.473.0(react@19.0.0):\n+  lucide-react@0.474.0(react@19.0.0):\n     dependencies:\n       react: 19.0.0\n ",
    "output": "fix(deps): update dependency lucide-react to ^0.474.0 (#848)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex bc623af..83db322 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -149,7 +149,7 @@ importers:\n         version: 8.56.12\n       '@types/node':\n         specifier: ^22.7.8\n-        version: 22.10.7\n+        version: 22.10.9\n       '@types/react':\n         specifier: ^19.0.0\n         version: 19.0.7\n@@ -1499,8 +1499,8 @@ packages:\n   '@types/json5@0.0.29':\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n \n-  '@types/node@22.10.7':\n-    resolution: {integrity: sha512-V09KvXxFiutGp6B7XkpaDXlNadZxrzajcY50EuoLIpQ6WWYCSvf19lVIazzfIzQvhUN2HjX12spLojTnhuKlGg==}\n+  '@types/node@22.10.9':\n+    resolution: {integrity: sha512-Ir6hwgsKyNESl/gLOcEz3krR4CBGgliDqBQ2ma4wIhEx0w+xnoeTq3tdrNw15kU3SxogDjOgv9sqdtLW8mIHaw==}\n \n   '@types/react-dom@19.0.3':\n     resolution: {integrity: sha512-0Knk+HJiMP/qOZgMyNFamlIjw9OFCsyC2ZbigmEEyXXixgre6IQpm/4V+r3qH4GC1JPvRJKInw+on2rV6YZLeA==}\n@@ -4499,7 +4499,7 @@ snapshots:\n \n   '@types/json5@0.0.29': {}\n \n-  '@types/node@22.10.7':\n+  '@types/node@22.10.9':\n     dependencies:\n       undici-types: 6.20.0\n ",
    "output": "chore(deps): update dependency @types/node to v22.10.9 (#846)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 638df3c..650cbd5 100644\n--- a/package.json\n+++ b/package.json\n@@ -50,7 +50,7 @@\n     \"drizzle-orm\": \"^0.38.0\",\n     \"export-to-csv\": \"^1.4.0\",\n     \"geist\": \"^1.3.1\",\n-    \"lucide-react\": \"^0.471.0\",\n+    \"lucide-react\": \"^0.473.0\",\n     \"nanoid\": \"^5.0.7\",\n     \"next\": \"^15.0.0\",\n     \"next-themes\": \"^0.4.3\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 379f973..0ec87f6 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -87,8 +87,8 @@ importers:\n         specifier: ^1.3.1\n         version: 1.3.1(next@15.1.5(react-dom@19.0.0(react@19.0.0))(react@19.0.0))\n       lucide-react:\n-        specifier: ^0.471.0\n-        version: 0.471.1(react@19.0.0)\n+        specifier: ^0.473.0\n+        version: 0.473.0(react@19.0.0)\n       nanoid:\n         specifier: ^5.0.7\n         version: 5.0.9\n@@ -2576,8 +2576,8 @@ packages:\n     resolution: {integrity: sha512-CgeuL5uom6j/ZVrg7G/+1IXqRY8JXX4Hghfy5YE0EhoYQWvndP1kufu58cmZLNIDKnRhZrXfdS9urVWx98AipQ==}\n     engines: {node: 20 || >=22}\n \n-  lucide-react@0.471.1:\n-    resolution: {integrity: sha512-syOxwPhf62gg2YOsz72HRn+CIpeudFy67AeKnSR8Hn/fIIF4ubhNbRF+pQ2CaJrl+X9Os4PL87z2DXQi3DVeDA==}\n+  lucide-react@0.473.0:\n+    resolution: {integrity: sha512-KW6u5AKeIjkvrxXZ6WuCu9zHE/gEYSXCay+Gre2ZoInD0Je/e3RBtP4OHpJVJ40nDklSvjVKjgH7VU8/e2dzRw==}\n     peerDependencies:\n       react: ^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0\n \n@@ -5780,7 +5780,7 @@ snapshots:\n \n   lru-cache@11.0.1: {}\n \n-  lucide-react@0.471.1(react@19.0.0):\n+  lucide-react@0.473.0(react@19.0.0):\n     dependencies:\n       react: 19.0.0\n ",
    "output": "fix(deps): update dependency lucide-react to ^0.473.0 (#835)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 009f5c4..379f973 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -182,7 +182,7 @@ importers:\n         version: 9.1.0(eslint@8.57.1)\n       eslint-plugin-tailwindcss:\n         specifier: ^3.17.5\n-        version: 3.17.5(tailwindcss@3.4.17)\n+        version: 3.18.0(tailwindcss@3.4.17)\n       pg:\n         specifier: ^8.13.0\n         version: 8.13.1\n@@ -2130,8 +2130,8 @@ packages:\n     peerDependencies:\n       eslint: ^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9.7\n \n-  eslint-plugin-tailwindcss@3.17.5:\n-    resolution: {integrity: sha512-8Mi7p7dm+mO1dHgRHHFdPu4RDTBk69Cn4P0B40vRQR+MrguUpwmKwhZy1kqYe3Km8/4nb+cyrCF+5SodOEmaow==}\n+  eslint-plugin-tailwindcss@3.18.0:\n+    resolution: {integrity: sha512-PQDU4ZMzFH0eb2DrfHPpbgo87Zgg2EXSMOj1NSfzdZm+aJzpuwGerfowMIaVehSREEa0idbf/eoNYAOHSJoDAQ==}\n     engines: {node: '>=18.12.0'}\n     peerDependencies:\n       tailwindcss: ^3.4.0\n@@ -5279,9 +5279,9 @@ snapshots:\n       string.prototype.matchall: 4.0.12\n       string.prototype.repeat: 1.0.0\n \n-  eslint-plugin-tailwindcss@3.17.5(tailwindcss@3.4.17):\n+  eslint-plugin-tailwindcss@3.18.0(tailwindcss@3.4.17):\n     dependencies:\n-      fast-glob: 3.3.2\n+      fast-glob: 3.3.3\n       postcss: 8.5.1\n       tailwindcss: 3.4.17\n ",
    "output": "chore(deps): update dependency eslint-plugin-tailwindcss to v3.18.0 (#834)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 89262aa..9b0e43e 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -79,7 +79,7 @@ importers:\n         version: 4.1.0\n       drizzle-orm:\n         specifier: ^0.38.0\n-        version: 0.38.3(@libsql/client-wasm@0.14.0)(@types/react@19.0.7)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0)\n+        version: 0.38.4(@libsql/client-wasm@0.14.0)(@types/react@19.0.7)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0)\n       export-to-csv:\n         specifier: ^1.4.0\n         version: 1.4.0\n@@ -1879,8 +1879,8 @@ packages:\n     resolution: {integrity: sha512-vhdLrxWA32WNVF77NabpSnX7pQBornx64VDQDmKddRonOB2Xe/yY4glQ7rECoa+ogqcQNo7VblLUbeBK6Zn9Ow==}\n     hasBin: true\n \n-  drizzle-orm@0.38.3:\n-    resolution: {integrity: sha512-w41Y+PquMpSff/QDRGdItG0/aWca+/J3Sda9PPGkTxBtjWQvgU1jxlFBXdjog5tYvTu58uvi3PwR1NuCx0KeZg==}\n+  drizzle-orm@0.38.4:\n+    resolution: {integrity: sha512-s7/5BpLKO+WJRHspvpqTydxFob8i1vo2rEx4pY6TGY7QSMuUfWUuzaY0DIpXCkgHOo37BaFC+SJQb99dDUXT3Q==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=4'\n@@ -4932,7 +4932,7 @@ snapshots:\n     transitivePeerDependencies:\n       - supports-color\n \n-  drizzle-orm@0.38.3(@libsql/client-wasm@0.14.0)(@types/react@19.0.7)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0):\n+  drizzle-orm@0.38.4(@libsql/client-wasm@0.14.0)(@types/react@19.0.7)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0):\n     optionalDependencies:\n       '@libsql/client-wasm': 0.14.0\n       '@types/react': 19.0.7",
    "output": "fix(deps): update dependency drizzle-orm to v0.38.4 (#831)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 95e6d96..89262aa 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -170,7 +170,7 @@ importers:\n         version: 8.0.0\n       drizzle-kit:\n         specifier: ^0.30.0\n-        version: 0.30.1\n+        version: 0.30.2\n       eslint:\n         specifier: ^8.57.0\n         version: 8.57.1\n@@ -1875,8 +1875,8 @@ packages:\n     resolution: {integrity: sha512-ZmdL2rui+eB2YwhsWzjInR8LldtZHGDoQ1ugH85ppHKwpUHL7j7rN0Ti9NCnGiQbhaZ11FpR+7ao1dNsmduNUg==}\n     engines: {node: '>=12'}\n \n-  drizzle-kit@0.30.1:\n-    resolution: {integrity: sha512-HmA/NeewvHywhJ2ENXD3KvOuM/+K2dGLJfxVfIHsGwaqKICJnS+Ke2L6UcSrSrtMJLJaT0Im1Qv4TFXfaZShyw==}\n+  drizzle-kit@0.30.2:\n+    resolution: {integrity: sha512-vhdLrxWA32WNVF77NabpSnX7pQBornx64VDQDmKddRonOB2Xe/yY4glQ7rECoa+ogqcQNo7VblLUbeBK6Zn9Ow==}\n     hasBin: true\n \n   drizzle-orm@0.38.3:\n@@ -4923,7 +4923,7 @@ snapshots:\n \n   dotenv@16.4.5: {}\n \n-  drizzle-kit@0.30.1:\n+  drizzle-kit@0.30.2:\n     dependencies:\n       '@drizzle-team/brocli': 0.10.2\n       '@esbuild-kit/esm-loader': 2.6.5",
    "output": "chore(deps): update dependency drizzle-kit to v0.30.2 (#830)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex de941be..95e6d96 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -149,7 +149,7 @@ importers:\n         version: 8.56.12\n       '@types/node':\n         specifier: ^22.7.8\n-        version: 22.10.6\n+        version: 22.10.7\n       '@types/react':\n         specifier: ^19.0.0\n         version: 19.0.7\n@@ -1499,8 +1499,8 @@ packages:\n   '@types/json5@0.0.29':\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n \n-  '@types/node@22.10.6':\n-    resolution: {integrity: sha512-qNiuwC4ZDAUNcY47xgaSuS92cjf8JbSUoaKS77bmLG1rU7MlATVSiw/IlrjtIyyskXBZ8KkNfjK/P5na7rgXbQ==}\n+  '@types/node@22.10.7':\n+    resolution: {integrity: sha512-V09KvXxFiutGp6B7XkpaDXlNadZxrzajcY50EuoLIpQ6WWYCSvf19lVIazzfIzQvhUN2HjX12spLojTnhuKlGg==}\n \n   '@types/react-dom@19.0.3':\n     resolution: {integrity: sha512-0Knk+HJiMP/qOZgMyNFamlIjw9OFCsyC2ZbigmEEyXXixgre6IQpm/4V+r3qH4GC1JPvRJKInw+on2rV6YZLeA==}\n@@ -4496,7 +4496,7 @@ snapshots:\n \n   '@types/json5@0.0.29': {}\n \n-  '@types/node@22.10.6':\n+  '@types/node@22.10.7':\n     dependencies:\n       undici-types: 6.20.0\n ",
    "output": "chore(deps): update dependency @types/node to v22.10.7 (#829)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex ef1fec1..de941be 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -137,7 +137,7 @@ importers:\n     devDependencies:\n       '@faker-js/faker':\n         specifier: ^9.0.3\n-        version: 9.3.0\n+        version: 9.4.0\n       '@ianvs/prettier-plugin-sort-imports':\n         specifier: ^4.3.1\n         version: 4.4.1(prettier@3.4.2)\n@@ -731,8 +731,8 @@ packages:\n     resolution: {integrity: sha512-d9zaMRSTIKDLhctzH12MtXvJKSSUhaHcjV+2Z+GK+EEY7XKpP5yR4x+N3TAcHTcu963nIr+TMcCb4DBCYX1z6Q==}\n     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n \n-  '@faker-js/faker@9.3.0':\n-    resolution: {integrity: sha512-r0tJ3ZOkMd9xsu3VRfqlFR6cz0V/jFYRswAIpC+m/DIfAUXq7g8N7wTAlhSANySXYGKzGryfDXwtwsY8TxEIDw==}\n+  '@faker-js/faker@9.4.0':\n+    resolution: {integrity: sha512-85+k0AxaZSTowL0gXp8zYWDIrWclTbRPg/pm/V0dSFZ6W6D4lhcG3uuZl4zLsEKfEvs69xDbLN2cHQudwp95JA==}\n     engines: {node: '>=18.0.0', npm: '>=9.0.0'}\n \n   '@floating-ui/core@1.6.8':\n@@ -3790,7 +3790,7 @@ snapshots:\n \n   '@eslint/js@8.57.1': {}\n \n-  '@faker-js/faker@9.3.0': {}\n+  '@faker-js/faker@9.4.0': {}\n \n   '@floating-ui/core@1.6.8':\n     dependencies:",
    "output": "chore(deps): update dependency @faker-js/faker to v9.4.0 (#828)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex f3936bc..ef1fec1 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -194,7 +194,7 @@ importers:\n         version: 3.4.2\n       prettier-plugin-tailwindcss:\n         specifier: ^0.6.8\n-        version: 0.6.9(@ianvs/prettier-plugin-sort-imports@4.4.1(prettier@3.4.2))(prettier@3.4.2)\n+        version: 0.6.10(@ianvs/prettier-plugin-sort-imports@4.4.1(prettier@3.4.2))(prettier@3.4.2)\n       rimraf:\n         specifier: ^6.0.1\n         version: 6.0.1\n@@ -2896,15 +2896,15 @@ packages:\n     resolution: {integrity: sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==}\n     engines: {node: '>= 0.8.0'}\n \n-  prettier-plugin-tailwindcss@0.6.9:\n-    resolution: {integrity: sha512-r0i3uhaZAXYP0At5xGfJH876W3HHGHDp+LCRUJrs57PBeQ6mYHMwr25KH8NPX44F2yGTvdnH7OqCshlQx183Eg==}\n+  prettier-plugin-tailwindcss@0.6.10:\n+    resolution: {integrity: sha512-ndj2WLDaMzACnr1gAYZiZZLs5ZdOeBYgOsbBmHj3nvW/6q8h8PymsXiEnKvj/9qgCCAoHyvLOisoQdIcsDvIgw==}\n     engines: {node: '>=14.21.3'}\n     peerDependencies:\n       '@ianvs/prettier-plugin-sort-imports': '*'\n       '@prettier/plugin-pug': '*'\n       '@shopify/prettier-plugin-liquid': '*'\n       '@trivago/prettier-plugin-sort-imports': '*'\n-      '@zackad/prettier-plugin-twig-melody': '*'\n+      '@zackad/prettier-plugin-twig': '*'\n       prettier: ^3.0\n       prettier-plugin-astro: '*'\n       prettier-plugin-css-order: '*'\n@@ -2926,7 +2926,7 @@ packages:\n         optional: true\n       '@trivago/prettier-plugin-sort-imports':\n         optional: true\n-      '@zackad/prettier-plugin-twig-melody':\n+      '@zackad/prettier-plugin-twig':\n         optional: true\n       prettier-plugin-astro:\n         optional: true\n@@ -6067,7 +6067,7 @@ snapshots:\n \n   prelude-ls@1.2.1: {}\n \n-  prettier-plugin-tailwindcss@0.6.9(@ianvs/prettier-plugin-sort-imports@4.4.1(prettier@3.4.2))(prettier@3.4.2):\n+  prettier-plugin-tailwindcss@0.6.10(@ianvs/prettier-plugin-sort-imports@4.4.1(prettier@3.4.2))(prettier@3.4.2):\n     dependencies:\n       prettier: 3.4.2\n     optionalDependencies:",
    "output": "chore(deps): update dependency prettier-plugin-tailwindcss to v0.6.10 (#827)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 9d108aa..f3936bc 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -121,7 +121,7 @@ importers:\n         version: 0.0.1\n       sonner:\n         specifier: ^1.5.0\n-        version: 1.7.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n+        version: 1.7.2(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n       tailwind-merge:\n         specifier: ^2.5.4\n         version: 2.6.0\n@@ -3162,8 +3162,8 @@ packages:\n   simple-swizzle@0.2.2:\n     resolution: {integrity: sha512-JA//kQgZtbuY83m+xT+tXJkmJncGMTFT+C+g2h2R9uxkYIrE2yy9sgmcLhCnw57/WSD+Eh3J97FPEDFnbXnDUg==}\n \n-  sonner@1.7.1:\n-    resolution: {integrity: sha512-b6LHBfH32SoVasRFECrdY8p8s7hXPDn3OHUFbZZbiB1ctLS9Gdh6rpX2dVrpQA0kiL5jcRzDDldwwLkSKk3+QQ==}\n+  sonner@1.7.2:\n+    resolution: {integrity: sha512-zMbseqjrOzQD1a93lxahm+qMGxWovdMxBlkTbbnZdNqVLt4j+amF9PQxUCL32WfztOFt9t9ADYkejAL3jF9iNA==}\n     peerDependencies:\n       react: ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n       react-dom: ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n@@ -6329,7 +6329,7 @@ snapshots:\n       is-arrayish: 0.3.2\n     optional: true\n \n-  sonner@1.7.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n+  sonner@1.7.2(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n     dependencies:\n       react: 19.0.0\n       react-dom: 19.0.0(react@19.0.0)",
    "output": "fix(deps): update dependency sonner to v1.7.2 (#826)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 0b518a2..800f5ea 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -100,7 +100,7 @@ importers:\n         version: 0.4.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n       nuqs:\n         specifier: ^2.0.0\n-        version: 2.3.0(@remix-run/react@2.13.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)(typescript@5.7.3))(next@15.1.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router-dom@6.27.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react@19.0.0)\n+        version: 2.3.1(@remix-run/react@2.13.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)(typescript@5.7.3))(next@15.1.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router-dom@6.27.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router@6.27.0(react@19.0.0))(react@19.0.0)\n       postgres:\n         specifier: ^3.4.4\n         version: 3.4.5\n@@ -2671,13 +2671,13 @@ packages:\n     resolution: {integrity: sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==}\n     engines: {node: '>=0.10.0'}\n \n-  nuqs@2.3.0:\n-    resolution: {integrity: sha512-ChS56bJZdaTQzCJb6jPel6cIHYh8/V/GSIjZoIe5yAssGdcrVaBFBgzHfJW6IewbR6yc1Zch2CmGsdgztR+xmA==}\n+  nuqs@2.3.1:\n+    resolution: {integrity: sha512-IyzSay4UlaBj+KnPBFjoJKilEmX5XLePfwC+X5wJS87dMFf8tvxysIaBwma6eupQJ5mdu35f4gFzp9+v1CK/jQ==}\n     peerDependencies:\n       '@remix-run/react': '>=2'\n       next: '>=14.2.0'\n       react: '>=18.2.0 || ^19.0.0-0'\n-      react-router: ^7\n+      react-router: ^6 || ^7\n       react-router-dom: ^6 || ^7\n     peerDependenciesMeta:\n       '@remix-run/react':\n@@ -5861,13 +5861,14 @@ snapshots:\n \n   normalize-range@0.1.2: {}\n \n-  nuqs@2.3.0(@remix-run/react@2.13.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)(typescript@5.7.3))(next@15.1.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router-dom@6.27.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react@19.0.0):\n+  nuqs@2.3.1(@remix-run/react@2.13.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)(typescript@5.7.3))(next@15.1.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router-dom@6.27.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router@6.27.0(react@19.0.0))(react@19.0.0):\n     dependencies:\n       mitt: 3.0.1\n       react: 19.0.0\n     optionalDependencies:\n       '@remix-run/react': 2.13.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)(typescript@5.7.3)\n       next: 15.1.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n+      react-router: 6.27.0(react@19.0.0)\n       react-router-dom: 6.27.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n \n   object-assign@4.1.1: {}",
    "output": "fix(deps): update dependency nuqs to v2.3.1 (#824)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 003589c..638df3c 100644\n--- a/package.json\n+++ b/package.json\n@@ -96,5 +96,5 @@\n   \"ct3aMetadata\": {\n     \"initVersion\": \"7.23.1\"\n   },\n-  \"packageManager\": \"pnpm@9.15.3\"\n+  \"packageManager\": \"pnpm@9.15.4\"\n }",
    "output": "chore(deps): update pnpm to v9.15.4 (#818)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 12ec21b..9153134 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -149,7 +149,7 @@ importers:\n         version: 8.56.12\n       '@types/node':\n         specifier: ^22.7.8\n-        version: 22.10.5\n+        version: 22.10.6\n       '@types/react':\n         specifier: ^19.0.0\n         version: 19.0.6\n@@ -1499,8 +1499,8 @@ packages:\n   '@types/json5@0.0.29':\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n \n-  '@types/node@22.10.5':\n-    resolution: {integrity: sha512-F8Q+SeGimwOo86fiovQh8qiXfFEh2/ocYv7tU5pJ3EXMSSxk1Joj5wefpFK2fHTf/N6HKGSxIDBT9f3gCxXPkQ==}\n+  '@types/node@22.10.6':\n+    resolution: {integrity: sha512-qNiuwC4ZDAUNcY47xgaSuS92cjf8JbSUoaKS77bmLG1rU7MlATVSiw/IlrjtIyyskXBZ8KkNfjK/P5na7rgXbQ==}\n \n   '@types/react-dom@19.0.3':\n     resolution: {integrity: sha512-0Knk+HJiMP/qOZgMyNFamlIjw9OFCsyC2ZbigmEEyXXixgre6IQpm/4V+r3qH4GC1JPvRJKInw+on2rV6YZLeA==}\n@@ -4496,7 +4496,7 @@ snapshots:\n \n   '@types/json5@0.0.29': {}\n \n-  '@types/node@22.10.5':\n+  '@types/node@22.10.6':\n     dependencies:\n       undici-types: 6.20.0\n ",
    "output": "chore(deps): update dependency @types/node to v22.10.6 (#817)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 3d10891..902803d 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -88,7 +88,7 @@ importers:\n         version: 1.3.1(next@15.1.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0))\n       lucide-react:\n         specifier: ^0.471.0\n-        version: 0.471.0(react@19.0.0)\n+        version: 0.471.1(react@19.0.0)\n       nanoid:\n         specifier: ^5.0.7\n         version: 5.0.9\n@@ -2580,8 +2580,8 @@ packages:\n     resolution: {integrity: sha512-CgeuL5uom6j/ZVrg7G/+1IXqRY8JXX4Hghfy5YE0EhoYQWvndP1kufu58cmZLNIDKnRhZrXfdS9urVWx98AipQ==}\n     engines: {node: 20 || >=22}\n \n-  lucide-react@0.471.0:\n-    resolution: {integrity: sha512-3L0OOJClsKDETJGK7nABqW8ftaVmUjWzluzPpw/6dGdI1bOmzsLsCjZpAEpg24Xs/U7xdYveQU+CBkHxWy7MrA==}\n+  lucide-react@0.471.1:\n+    resolution: {integrity: sha512-syOxwPhf62gg2YOsz72HRn+CIpeudFy67AeKnSR8Hn/fIIF4ubhNbRF+pQ2CaJrl+X9Os4PL87z2DXQi3DVeDA==}\n     peerDependencies:\n       react: ^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0\n \n@@ -5790,7 +5790,7 @@ snapshots:\n \n   lru-cache@11.0.1: {}\n \n-  lucide-react@0.471.0(react@19.0.0):\n+  lucide-react@0.471.1(react@19.0.0):\n     dependencies:\n       react: 19.0.0\n ",
    "output": "fix(deps): update dependency lucide-react to v0.471.1 (#814)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 1b40625..003589c 100644\n--- a/package.json\n+++ b/package.json\n@@ -50,7 +50,7 @@\n     \"drizzle-orm\": \"^0.38.0\",\n     \"export-to-csv\": \"^1.4.0\",\n     \"geist\": \"^1.3.1\",\n-    \"lucide-react\": \"^0.469.0\",\n+    \"lucide-react\": \"^0.471.0\",\n     \"nanoid\": \"^5.0.7\",\n     \"next\": \"^15.0.0\",\n     \"next-themes\": \"^0.4.3\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 6206d45..293b863 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -87,8 +87,8 @@ importers:\n         specifier: ^1.3.1\n         version: 1.3.1(next@15.1.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0))\n       lucide-react:\n-        specifier: ^0.469.0\n-        version: 0.469.0(react@19.0.0)\n+        specifier: ^0.471.0\n+        version: 0.471.0(react@19.0.0)\n       nanoid:\n         specifier: ^5.0.7\n         version: 5.0.9\n@@ -2580,8 +2580,8 @@ packages:\n     resolution: {integrity: sha512-CgeuL5uom6j/ZVrg7G/+1IXqRY8JXX4Hghfy5YE0EhoYQWvndP1kufu58cmZLNIDKnRhZrXfdS9urVWx98AipQ==}\n     engines: {node: 20 || >=22}\n \n-  lucide-react@0.469.0:\n-    resolution: {integrity: sha512-28vvUnnKQ/dBwiCQtwJw7QauYnE7yd2Cyp4tTTJpvglX4EMpbflcdBgrgToX2j71B3YvugK/NH3BGUk+E/p/Fw==}\n+  lucide-react@0.471.0:\n+    resolution: {integrity: sha512-3L0OOJClsKDETJGK7nABqW8ftaVmUjWzluzPpw/6dGdI1bOmzsLsCjZpAEpg24Xs/U7xdYveQU+CBkHxWy7MrA==}\n     peerDependencies:\n       react: ^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0\n \n@@ -5790,7 +5790,7 @@ snapshots:\n \n   lru-cache@11.0.1: {}\n \n-  lucide-react@0.469.0(react@19.0.0):\n+  lucide-react@0.471.0(react@19.0.0):\n     dependencies:\n       react: 19.0.0\n ",
    "output": "fix(deps): update dependency lucide-react to ^0.471.0 (#810)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex a3a06b3..6206d45 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -100,7 +100,7 @@ importers:\n         version: 0.4.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n       nuqs:\n         specifier: ^2.0.0\n-        version: 2.2.3(@remix-run/react@2.13.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)(typescript@5.7.3))(next@15.1.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router-dom@6.27.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react@19.0.0)\n+        version: 2.3.0(@remix-run/react@2.13.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)(typescript@5.7.3))(next@15.1.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router-dom@6.27.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react@19.0.0)\n       postgres:\n         specifier: ^3.4.4\n         version: 3.4.5\n@@ -2675,18 +2675,21 @@ packages:\n     resolution: {integrity: sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==}\n     engines: {node: '>=0.10.0'}\n \n-  nuqs@2.2.3:\n-    resolution: {integrity: sha512-nMCcUW06KSqEXA0xp+LiRqDpIE59BVYbjZLe0HUisJAlswfihHYSsAjYTzV0lcE1thfh8uh+LqUHGdQ8qq8rfA==}\n+  nuqs@2.3.0:\n+    resolution: {integrity: sha512-ChS56bJZdaTQzCJb6jPel6cIHYh8/V/GSIjZoIe5yAssGdcrVaBFBgzHfJW6IewbR6yc1Zch2CmGsdgztR+xmA==}\n     peerDependencies:\n       '@remix-run/react': '>=2'\n       next: '>=14.2.0'\n       react: '>=18.2.0 || ^19.0.0-0'\n-      react-router-dom: '>=6'\n+      react-router: ^7\n+      react-router-dom: ^6 || ^7\n     peerDependenciesMeta:\n       '@remix-run/react':\n         optional: true\n       next:\n         optional: true\n+      react-router:\n+        optional: true\n       react-router-dom:\n         optional: true\n \n@@ -5868,7 +5871,7 @@ snapshots:\n \n   normalize-range@0.1.2: {}\n \n-  nuqs@2.2.3(@remix-run/react@2.13.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)(typescript@5.7.3))(next@15.1.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router-dom@6.27.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react@19.0.0):\n+  nuqs@2.3.0(@remix-run/react@2.13.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)(typescript@5.7.3))(next@15.1.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react-router-dom@6.27.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(react@19.0.0):\n     dependencies:\n       mitt: 3.0.1\n       react: 19.0.0",
    "output": "fix(deps): update dependency nuqs to v2.3.0 (#807)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 1260b39..a3a06b3 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -22,7 +22,7 @@ importers:\n         version: 3.2.2(react@19.0.0)\n       '@hookform/resolvers':\n         specifier: ^3.9.0\n-        version: 3.9.1(react-hook-form@7.54.2(react@19.0.0))\n+        version: 3.10.0(react-hook-form@7.54.2(react@19.0.0))\n       '@radix-ui/react-checkbox':\n         specifier: ^1.1.2\n         version: 1.1.3(@types/react-dom@19.0.2(@types/react@19.0.4))(@types/react@19.0.4)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n@@ -750,8 +750,8 @@ packages:\n   '@floating-ui/utils@0.2.8':\n     resolution: {integrity: sha512-kym7SodPp8/wloecOpcmSnWJsK7M0E5Wg8UcFA+uO4B9s5d0ywXOEro/8HM9x0rW+TljRzul/14UYz3TleT3ig==}\n \n-  '@hookform/resolvers@3.9.1':\n-    resolution: {integrity: sha512-ud2HqmGBM0P0IABqoskKWI6PEf6ZDDBZkFqe2Vnl+mTHCEHzr3ISjjZyCwTjC/qpL25JC9aIDkloQejvMeq0ug==}\n+  '@hookform/resolvers@3.10.0':\n+    resolution: {integrity: sha512-79Dv+3mDF7i+2ajj7SkypSKHhl1cbln1OGavqrsF7p6mbUv11xpqpacPsGDCTRvCSjEEIez2ef1NveSVL3b0Ag==}\n     peerDependencies:\n       react-hook-form: ^7.0.0\n \n@@ -3810,7 +3810,7 @@ snapshots:\n \n   '@floating-ui/utils@0.2.8': {}\n \n-  '@hookform/resolvers@3.9.1(react-hook-form@7.54.2(react@19.0.0))':\n+  '@hookform/resolvers@3.10.0(react-hook-form@7.54.2(react@19.0.0))':\n     dependencies:\n       react-hook-form: 7.54.2(react@19.0.0)\n ",
    "output": "fix(deps): update dependency @hookform/resolvers to v3.10.0 (#806)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex cf3f3fc..1b40625 100644\n--- a/package.json\n+++ b/package.json\n@@ -96,5 +96,5 @@\n   \"ct3aMetadata\": {\n     \"initVersion\": \"7.23.1\"\n   },\n-  \"packageManager\": \"pnpm@9.15.2\"\n+  \"packageManager\": \"pnpm@9.15.3\"\n }",
    "output": "chore(deps): update pnpm to v9.15.3 (#803)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex b2407dc..948b114 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -149,7 +149,7 @@ importers:\n         version: 8.56.12\n       '@types/node':\n         specifier: ^22.7.8\n-        version: 22.10.2\n+        version: 22.10.5\n       '@types/react':\n         specifier: ^19.0.0\n         version: 19.0.2\n@@ -1503,8 +1503,8 @@ packages:\n   '@types/json5@0.0.29':\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n \n-  '@types/node@22.10.2':\n-    resolution: {integrity: sha512-Xxr6BBRCAOQixvonOye19wnzyDiUtTeqldOOmj3CkeblonbccA12PFwlufvRdrpjXxqnmUaeiU5EOA+7s5diUQ==}\n+  '@types/node@22.10.5':\n+    resolution: {integrity: sha512-F8Q+SeGimwOo86fiovQh8qiXfFEh2/ocYv7tU5pJ3EXMSSxk1Joj5wefpFK2fHTf/N6HKGSxIDBT9f3gCxXPkQ==}\n \n   '@types/react-dom@19.0.2':\n     resolution: {integrity: sha512-c1s+7TKFaDRRxr1TxccIX2u7sfCnc3RxkVyBIUA2lCpyqCF+QoAwQ/CBg7bsMdVwP120HEH143VQezKtef5nCg==}\n@@ -4483,7 +4483,7 @@ snapshots:\n \n   '@types/json5@0.0.29': {}\n \n-  '@types/node@22.10.2':\n+  '@types/node@22.10.5':\n     dependencies:\n       undici-types: 6.20.0\n ",
    "output": "chore(deps): update dependency @types/node to v22.10.5 (#801)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 9d16497..cf3f3fc 100644\n--- a/package.json\n+++ b/package.json\n@@ -96,5 +96,5 @@\n   \"ct3aMetadata\": {\n     \"initVersion\": \"7.23.1\"\n   },\n-  \"packageManager\": \"pnpm@9.15.1\"\n+  \"packageManager\": \"pnpm@9.15.2\"\n }",
    "output": "chore(deps): update pnpm to v9.15.2 (#799)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 5c4af90..4ac917a 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -79,7 +79,7 @@ importers:\n         version: 4.1.0\n       drizzle-orm:\n         specifier: ^0.38.0\n-        version: 0.38.2(@libsql/client-wasm@0.14.0)(@types/react@19.0.2)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0)\n+        version: 0.38.3(@libsql/client-wasm@0.14.0)(@types/react@19.0.2)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0)\n       export-to-csv:\n         specifier: ^1.4.0\n         version: 1.4.0\n@@ -1883,8 +1883,8 @@ packages:\n     resolution: {integrity: sha512-HmA/NeewvHywhJ2ENXD3KvOuM/+K2dGLJfxVfIHsGwaqKICJnS+Ke2L6UcSrSrtMJLJaT0Im1Qv4TFXfaZShyw==}\n     hasBin: true\n \n-  drizzle-orm@0.38.2:\n-    resolution: {integrity: sha512-eCE3yPRAskLo1WpM9OHpFaM70tBEDsWhwR/0M3CKyztAXKR9Qs3asZlcJOEliIcUSg8GuwrlY0dmYDgmm6y5GQ==}\n+  drizzle-orm@0.38.3:\n+    resolution: {integrity: sha512-w41Y+PquMpSff/QDRGdItG0/aWca+/J3Sda9PPGkTxBtjWQvgU1jxlFBXdjog5tYvTu58uvi3PwR1NuCx0KeZg==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=4'\n@@ -4914,7 +4914,7 @@ snapshots:\n     transitivePeerDependencies:\n       - supports-color\n \n-  drizzle-orm@0.38.2(@libsql/client-wasm@0.14.0)(@types/react@19.0.2)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0):\n+  drizzle-orm@0.38.3(@libsql/client-wasm@0.14.0)(@types/react@19.0.2)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0):\n     optionalDependencies:\n       '@libsql/client-wasm': 0.14.0\n       '@types/react': 19.0.2",
    "output": "fix(deps): update dependency drizzle-orm to v0.38.3 (#797)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 9c247e3..5c4af90 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -124,7 +124,7 @@ importers:\n         version: 1.7.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n       tailwind-merge:\n         specifier: ^2.5.4\n-        version: 2.5.5\n+        version: 2.6.0\n       tailwindcss-animate:\n         specifier: ^1.0.7\n         version: 1.0.7(tailwindcss@3.4.17)\n@@ -3243,8 +3243,8 @@ packages:\n     resolution: {integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==}\n     engines: {node: '>= 0.4'}\n \n-  tailwind-merge@2.5.5:\n-    resolution: {integrity: sha512-0LXunzzAZzo0tEPxV3I297ffKZPlKDrjj7NXphC8V5ak9yHC5zRmxnOe2m/Rd/7ivsOMJe3JZ2JVocoDdQTRBA==}\n+  tailwind-merge@2.6.0:\n+    resolution: {integrity: sha512-P+Vu1qXfzediirmHOC3xKGAYeZtPcV9g76X+xg2FD4tYgR71ewMA35Y3sCz3zhiN/dwefRpJX0yBcgwi1fXNQA==}\n \n   tailwindcss-animate@1.0.7:\n     resolution: {integrity: sha512-bl6mpH3T7I3UFxuvDEXLxy/VuFxBk5bbzplh7tXI68mwMokNYd1t9qPBHlnyTwfa4JGC4zP516I1hYYtQ/vspA==}\n@@ -6375,7 +6375,7 @@ snapshots:\n \n   supports-preserve-symlinks-flag@1.0.0: {}\n \n-  tailwind-merge@2.5.5: {}\n+  tailwind-merge@2.6.0: {}\n \n   tailwindcss-animate@1.0.7(tailwindcss@3.4.17):\n     dependencies:",
    "output": "fix(deps): update dependency tailwind-merge to v2.6.0 (#796)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex e8412ed..d5555d2 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -22,7 +22,7 @@ importers:\n         version: 3.2.2(react@19.0.0)\n       '@hookform/resolvers':\n         specifier: ^3.9.0\n-        version: 3.9.1(react-hook-form@7.54.1(react@19.0.0))\n+        version: 3.9.1(react-hook-form@7.54.2(react@19.0.0))\n       '@radix-ui/react-checkbox':\n         specifier: ^1.1.2\n         version: 1.1.3(@types/react-dom@19.0.2(@types/react@19.0.2))(@types/react@19.0.2)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n@@ -115,7 +115,7 @@ importers:\n         version: 19.0.0(react@19.0.0)\n       react-hook-form:\n         specifier: ^7.53.1\n-        version: 7.54.1(react@19.0.0)\n+        version: 7.54.2(react@19.0.0)\n       server-only:\n         specifier: ^0.0.1\n         version: 0.0.1\n@@ -2966,8 +2966,8 @@ packages:\n     peerDependencies:\n       react: ^19.0.0\n \n-  react-hook-form@7.54.1:\n-    resolution: {integrity: sha512-PUNzFwQeQ5oHiiTUO7GO/EJXGEtuun2Y1A59rLnZBBj+vNEOWt/3ERTiG1/zt7dVeJEM+4vDX/7XQ/qanuvPMg==}\n+  react-hook-form@7.54.2:\n+    resolution: {integrity: sha512-eHpAUgUjWbZocoQYUHposymRb4ZP6d0uwUnooL2uOybA9/3tPUvoAKqEWK1WaSiTxxOfTpffNZP7QwlnM3/gEg==}\n     engines: {node: '>=18.0.0'}\n     peerDependencies:\n       react: ^16.8.0 || ^17 || ^18 || ^19\n@@ -3785,9 +3785,9 @@ snapshots:\n \n   '@floating-ui/utils@0.2.8': {}\n \n-  '@hookform/resolvers@3.9.1(react-hook-form@7.54.1(react@19.0.0))':\n+  '@hookform/resolvers@3.9.1(react-hook-form@7.54.2(react@19.0.0))':\n     dependencies:\n-      react-hook-form: 7.54.1(react@19.0.0)\n+      react-hook-form: 7.54.2(react@19.0.0)\n \n   '@humanwhocodes/config-array@0.13.0':\n     dependencies:\n@@ -6043,7 +6043,7 @@ snapshots:\n       react: 19.0.0\n       scheduler: 0.25.0\n \n-  react-hook-form@7.54.1(react@19.0.0):\n+  react-hook-form@7.54.2(react@19.0.0):\n     dependencies:\n       react: 19.0.0\n ",
    "output": "fix(deps): update dependency react-hook-form to v7.54.2 (#793)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex c60c4a4..9d16497 100644\n--- a/package.json\n+++ b/package.json\n@@ -78,7 +78,7 @@\n     \"@typescript-eslint/eslint-plugin\": \"^8.11.0\",\n     \"@typescript-eslint/parser\": \"^8.11.0\",\n     \"autoprefixer\": \"^10.4.20\",\n-    \"dotenv-cli\": \"^7.4.2\",\n+    \"dotenv-cli\": \"^8.0.0\",\n     \"drizzle-kit\": \"^0.30.0\",\n     \"eslint\": \"^8.57.0\",\n     \"eslint-config-next\": \"^15.0.0\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 56dbc98..e8412ed 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -166,8 +166,8 @@ importers:\n         specifier: ^10.4.20\n         version: 10.4.20(postcss@8.4.49)\n       dotenv-cli:\n-        specifier: ^7.4.2\n-        version: 7.4.4\n+        specifier: ^8.0.0\n+        version: 8.0.0\n       drizzle-kit:\n         specifier: ^0.30.0\n         version: 0.30.1\n@@ -1867,8 +1867,8 @@ packages:\n     resolution: {integrity: sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==}\n     engines: {node: '>=6.0.0'}\n \n-  dotenv-cli@7.4.4:\n-    resolution: {integrity: sha512-XkBYCG0tPIes+YZr4SpfFv76SQrV/LeCE8CI7JSEMi3VR9MvTihCGTOtbIexD6i2mXF+6px7trb1imVCXSNMDw==}\n+  dotenv-cli@8.0.0:\n+    resolution: {integrity: sha512-aLqYbK7xKOiTMIRf1lDPbI+Y+Ip/wo5k3eyp6ePysVaSqbyxjyK3dK35BTxG+rmd7djf5q2UPs4noPNH+cj0Qw==}\n     hasBin: true\n \n   dotenv-expand@10.0.0:\n@@ -4894,7 +4894,7 @@ snapshots:\n     dependencies:\n       esutils: 2.0.3\n \n-  dotenv-cli@7.4.4:\n+  dotenv-cli@8.0.0:\n     dependencies:\n       cross-spawn: 7.0.6\n       dotenv: 16.4.5",
    "output": "chore(deps): update dependency dotenv-cli to v8 (#792)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 74ec9e5..c60c4a4 100644\n--- a/package.json\n+++ b/package.json\n@@ -50,7 +50,7 @@\n     \"drizzle-orm\": \"^0.38.0\",\n     \"export-to-csv\": \"^1.4.0\",\n     \"geist\": \"^1.3.1\",\n-    \"lucide-react\": \"^0.468.0\",\n+    \"lucide-react\": \"^0.469.0\",\n     \"nanoid\": \"^5.0.7\",\n     \"next\": \"^15.0.0\",\n     \"next-themes\": \"^0.4.3\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 5ef716d..56dbc98 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -87,8 +87,8 @@ importers:\n         specifier: ^1.3.1\n         version: 1.3.1(next@15.1.2(react-dom@19.0.0(react@19.0.0))(react@19.0.0))\n       lucide-react:\n-        specifier: ^0.468.0\n-        version: 0.468.0(react@19.0.0)\n+        specifier: ^0.469.0\n+        version: 0.469.0(react@19.0.0)\n       nanoid:\n         specifier: ^5.0.7\n         version: 5.0.9\n@@ -2572,10 +2572,10 @@ packages:\n     resolution: {integrity: sha512-CgeuL5uom6j/ZVrg7G/+1IXqRY8JXX4Hghfy5YE0EhoYQWvndP1kufu58cmZLNIDKnRhZrXfdS9urVWx98AipQ==}\n     engines: {node: 20 || >=22}\n \n-  lucide-react@0.468.0:\n-    resolution: {integrity: sha512-6koYRhnM2N0GGZIdXzSeiNwguv1gt/FAjZOiPl76roBi3xKEXa4WmfpxgQwTTL4KipXjefrnf3oV4IsYhi4JFA==}\n+  lucide-react@0.469.0:\n+    resolution: {integrity: sha512-28vvUnnKQ/dBwiCQtwJw7QauYnE7yd2Cyp4tTTJpvglX4EMpbflcdBgrgToX2j71B3YvugK/NH3BGUk+E/p/Fw==}\n     peerDependencies:\n-      react: ^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0-rc\n+      react: ^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0\n \n   math-intrinsics@1.1.0:\n     resolution: {integrity: sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==}\n@@ -5735,7 +5735,7 @@ snapshots:\n \n   lru-cache@11.0.1: {}\n \n-  lucide-react@0.468.0(react@19.0.0):\n+  lucide-react@0.469.0(react@19.0.0):\n     dependencies:\n       react: 19.0.0\n ",
    "output": "fix(deps): update dependency lucide-react to ^0.469.0 (#791)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 52cf319..74ec9e5 100644\n--- a/package.json\n+++ b/package.json\n@@ -96,5 +96,5 @@\n   \"ct3aMetadata\": {\n     \"initVersion\": \"7.23.1\"\n   },\n-  \"packageManager\": \"pnpm@9.15.0\"\n+  \"packageManager\": \"pnpm@9.15.1\"\n }",
    "output": "chore(deps): update pnpm to v9.15.1 (#790)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 4beaae2..043a4ef 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -130,7 +130,7 @@ importers:\n         version: 1.0.7(tailwindcss@3.4.16)\n       vaul:\n         specifier: ^1.1.0\n-        version: 1.1.1(@types/react-dom@19.0.2(@types/react@19.0.1))(@types/react@19.0.1)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n+        version: 1.1.2(@types/react-dom@19.0.2(@types/react@19.0.1))(@types/react@19.0.1)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n       zod:\n         specifier: ^3.23.8\n         version: 3.24.0\n@@ -3348,11 +3348,11 @@ packages:\n   util-deprecate@1.0.2:\n     resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}\n \n-  vaul@1.1.1:\n-    resolution: {integrity: sha512-+ejzF6ffQKPcfgS7uOrGn017g39F8SO4yLPXbBhpC7a0H+oPqPna8f1BUfXaz8eU4+pxbQcmjxW+jWBSbxjaFg==}\n+  vaul@1.1.2:\n+    resolution: {integrity: sha512-ZFkClGpWyI2WUQjdLJ/BaGuV6AVQiJ3uELGk3OYtP+B6yCO7Cmn9vPFXVJkRaGkOJu3m8bQMgtyzNHixULceQA==}\n     peerDependencies:\n-      react: ^16.8 || ^17.0 || ^18.0 || ^19.0\n-      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0\n+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0.0 || ^19.0.0-rc\n+      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0.0 || ^19.0.0-rc\n \n   which-boxed-primitive@1.1.0:\n     resolution: {integrity: sha512-Ei7Miu/AXe2JJ4iNF5j/UphAgRoma4trE6PtisM09bPygb3egMH3YLW/befsWb1A1AxvNSFidOFTB18XtnIIng==}\n@@ -6461,7 +6461,7 @@ snapshots:\n \n   util-deprecate@1.0.2: {}\n \n-  vaul@1.1.1(@types/react-dom@19.0.2(@types/react@19.0.1))(@types/react@19.0.1)(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n+  vaul@1.1.2(@types/react-dom@19.0.2(@types/react@19.0.1))(@types/react@19.0.1)(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n     dependencies:\n       '@radix-ui/react-dialog': 1.1.3(@types/react-dom@19.0.2(@types/react@19.0.1))(@types/react@19.0.1)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n       react: 19.0.0",
    "output": "fix(deps): update dependency vaul to v1.1.2 (#780)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 89bed6a..4beaae2 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -79,7 +79,7 @@ importers:\n         version: 4.1.0\n       drizzle-orm:\n         specifier: ^0.38.0\n-        version: 0.38.1(@libsql/client-wasm@0.14.0)(@types/react@19.0.1)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0)\n+        version: 0.38.2(@libsql/client-wasm@0.14.0)(@types/react@19.0.1)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0)\n       export-to-csv:\n         specifier: ^1.4.0\n         version: 1.4.0\n@@ -1875,8 +1875,8 @@ packages:\n     resolution: {integrity: sha512-HmA/NeewvHywhJ2ENXD3KvOuM/+K2dGLJfxVfIHsGwaqKICJnS+Ke2L6UcSrSrtMJLJaT0Im1Qv4TFXfaZShyw==}\n     hasBin: true\n \n-  drizzle-orm@0.38.1:\n-    resolution: {integrity: sha512-TpOzNrPGy7dl0/uP9vKD6ATzp9noJaRYhOYqtOCKxxwSmZqrPxN4SW5kWawVUIcbSd2lkbDCdZue+gtVNLmQsg==}\n+  drizzle-orm@0.38.2:\n+    resolution: {integrity: sha512-eCE3yPRAskLo1WpM9OHpFaM70tBEDsWhwR/0M3CKyztAXKR9Qs3asZlcJOEliIcUSg8GuwrlY0dmYDgmm6y5GQ==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=4'\n@@ -4879,7 +4879,7 @@ snapshots:\n     transitivePeerDependencies:\n       - supports-color\n \n-  drizzle-orm@0.38.1(@libsql/client-wasm@0.14.0)(@types/react@19.0.1)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0):\n+  drizzle-orm@0.38.2(@libsql/client-wasm@0.14.0)(@types/react@19.0.1)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0):\n     optionalDependencies:\n       '@libsql/client-wasm': 0.14.0\n       '@types/react': 19.0.1",
    "output": "fix(deps): update dependency drizzle-orm to v0.38.2 (#779)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 59bb4b6..89bed6a 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -64,7 +64,7 @@ importers:\n         version: 0.11.1(typescript@5.7.2)(zod@3.24.0)\n       '@tanstack/react-table':\n         specifier: ^8.20.5\n-        version: 8.20.5(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n+        version: 8.20.6(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n       class-variance-authority:\n         specifier: ^0.7.0\n         version: 0.7.1\n@@ -1470,8 +1470,8 @@ packages:\n       typescript:\n         optional: true\n \n-  '@tanstack/react-table@8.20.5':\n-    resolution: {integrity: sha512-WEHopKw3znbUZ61s9i0+i9g8drmDo6asTWbrQh8Us63DAk/M0FkmIqERew6P71HI75ksZ2Pxyuf4vvKh9rAkiA==}\n+  '@tanstack/react-table@8.20.6':\n+    resolution: {integrity: sha512-w0jluT718MrOKthRcr2xsjqzx+oEM7B7s/XXyfs19ll++hlId3fjTm+B2zrR3ijpANpkzBAr15j1XGVOMxpggQ==}\n     engines: {node: '>=12'}\n     peerDependencies:\n       react: '>=16.8'\n@@ -4423,7 +4423,7 @@ snapshots:\n     optionalDependencies:\n       typescript: 5.7.2\n \n-  '@tanstack/react-table@8.20.5(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n+  '@tanstack/react-table@8.20.6(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n     dependencies:\n       '@tanstack/table-core': 8.20.5\n       react: 19.0.0",
    "output": "fix(deps): update dependency @tanstack/react-table to v8.20.6 (#778)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 68204bb..59bb4b6 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -170,7 +170,7 @@ importers:\n         version: 7.4.4\n       drizzle-kit:\n         specifier: ^0.30.0\n-        version: 0.30.0\n+        version: 0.30.1\n       eslint:\n         specifier: ^8.57.0\n         version: 8.57.1\n@@ -1871,8 +1871,8 @@ packages:\n     resolution: {integrity: sha512-ZmdL2rui+eB2YwhsWzjInR8LldtZHGDoQ1ugH85ppHKwpUHL7j7rN0Ti9NCnGiQbhaZ11FpR+7ao1dNsmduNUg==}\n     engines: {node: '>=12'}\n \n-  drizzle-kit@0.30.0:\n-    resolution: {integrity: sha512-zAf0qg/BX2lV/Xip4igXrtbDv+Ub8S39U6qSOEGNvqcHrnmaQjS4mkkFZOUsgXRbuH56QUeWZxfnLHefrKCV5g==}\n+  drizzle-kit@0.30.1:\n+    resolution: {integrity: sha512-HmA/NeewvHywhJ2ENXD3KvOuM/+K2dGLJfxVfIHsGwaqKICJnS+Ke2L6UcSrSrtMJLJaT0Im1Qv4TFXfaZShyw==}\n     hasBin: true\n \n   drizzle-orm@0.38.1:\n@@ -4870,7 +4870,7 @@ snapshots:\n \n   dotenv@16.4.5: {}\n \n-  drizzle-kit@0.30.0:\n+  drizzle-kit@0.30.1:\n     dependencies:\n       '@drizzle-team/brocli': 0.10.2\n       '@esbuild-kit/esm-loader': 2.6.5\n@@ -4999,7 +4999,7 @@ snapshots:\n \n   esbuild-register@3.6.0(esbuild@0.19.12):\n     dependencies:\n-      debug: 4.3.7\n+      debug: 4.4.0\n       esbuild: 0.19.12\n     transitivePeerDependencies:\n       - supports-color",
    "output": "chore(deps): update dependency drizzle-kit to v0.30.1 (#777)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 110c20a..fecad53 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -22,7 +22,7 @@ importers:\n         version: 3.2.2(react@19.0.0)\n       '@hookform/resolvers':\n         specifier: ^3.9.0\n-        version: 3.9.1(react-hook-form@7.54.0(react@19.0.0))\n+        version: 3.9.1(react-hook-form@7.54.1(react@19.0.0))\n       '@radix-ui/react-checkbox':\n         specifier: ^1.1.2\n         version: 1.1.2(@types/react-dom@19.0.2(@types/react@19.0.1))(@types/react@19.0.1)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n@@ -115,7 +115,7 @@ importers:\n         version: 19.0.0(react@19.0.0)\n       react-hook-form:\n         specifier: ^7.53.1\n-        version: 7.54.0(react@19.0.0)\n+        version: 7.54.1(react@19.0.0)\n       server-only:\n         specifier: ^0.0.1\n         version: 0.0.1\n@@ -2933,8 +2933,8 @@ packages:\n     peerDependencies:\n       react: ^19.0.0\n \n-  react-hook-form@7.54.0:\n-    resolution: {integrity: sha512-PS05+UQy/IdSbJNojBypxAo9wllhHgGmyr8/dyGQcPoiMf3e7Dfb9PWYVRco55bLbxH9S+1yDDJeTdlYCSxO3A==}\n+  react-hook-form@7.54.1:\n+    resolution: {integrity: sha512-PUNzFwQeQ5oHiiTUO7GO/EJXGEtuun2Y1A59rLnZBBj+vNEOWt/3ERTiG1/zt7dVeJEM+4vDX/7XQ/qanuvPMg==}\n     engines: {node: '>=18.0.0'}\n     peerDependencies:\n       react: ^16.8.0 || ^17 || ^18 || ^19\n@@ -3738,9 +3738,9 @@ snapshots:\n \n   '@floating-ui/utils@0.2.8': {}\n \n-  '@hookform/resolvers@3.9.1(react-hook-form@7.54.0(react@19.0.0))':\n+  '@hookform/resolvers@3.9.1(react-hook-form@7.54.1(react@19.0.0))':\n     dependencies:\n-      react-hook-form: 7.54.0(react@19.0.0)\n+      react-hook-form: 7.54.1(react@19.0.0)\n \n   '@humanwhocodes/config-array@0.13.0':\n     dependencies:\n@@ -5959,7 +5959,7 @@ snapshots:\n       react: 19.0.0\n       scheduler: 0.25.0\n \n-  react-hook-form@7.54.0(react@19.0.0):\n+  react-hook-form@7.54.1(react@19.0.0):\n     dependencies:\n       react: 19.0.0\n ",
    "output": "fix(deps): update dependency react-hook-form to v7.54.1 (#775)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex efb1bb4..110c20a 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -79,7 +79,7 @@ importers:\n         version: 4.1.0\n       drizzle-orm:\n         specifier: ^0.38.0\n-        version: 0.38.0(@libsql/client-wasm@0.14.0)(@types/react@19.0.1)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0)\n+        version: 0.38.1(@libsql/client-wasm@0.14.0)(@types/react@19.0.1)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0)\n       export-to-csv:\n         specifier: ^1.4.0\n         version: 1.4.0\n@@ -1853,8 +1853,8 @@ packages:\n     resolution: {integrity: sha512-zAf0qg/BX2lV/Xip4igXrtbDv+Ub8S39U6qSOEGNvqcHrnmaQjS4mkkFZOUsgXRbuH56QUeWZxfnLHefrKCV5g==}\n     hasBin: true\n \n-  drizzle-orm@0.38.0:\n-    resolution: {integrity: sha512-Ev1UYKOUxiVwLZZfos4hoNDMDkp313FqF0CHelhR+BeOdb76z/a6pKF6SgYQSrmj6EXH4cy6QIkmuxl2KIFW0A==}\n+  drizzle-orm@0.38.1:\n+    resolution: {integrity: sha512-TpOzNrPGy7dl0/uP9vKD6ATzp9noJaRYhOYqtOCKxxwSmZqrPxN4SW5kWawVUIcbSd2lkbDCdZue+gtVNLmQsg==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=4'\n@@ -4841,7 +4841,7 @@ snapshots:\n     transitivePeerDependencies:\n       - supports-color\n \n-  drizzle-orm@0.38.0(@libsql/client-wasm@0.14.0)(@types/react@19.0.1)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0):\n+  drizzle-orm@0.38.1(@libsql/client-wasm@0.14.0)(@types/react@19.0.1)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0):\n     optionalDependencies:\n       '@libsql/client-wasm': 0.14.0\n       '@types/react': 19.0.1",
    "output": "fix(deps): update dependency drizzle-orm to v0.38.1 (#774)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 27b6add..efb1bb4 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -149,7 +149,7 @@ importers:\n         version: 8.56.12\n       '@types/node':\n         specifier: ^22.7.8\n-        version: 22.10.1\n+        version: 22.10.2\n       '@types/react':\n         specifier: ^19.0.0\n         version: 19.0.1\n@@ -1477,8 +1477,8 @@ packages:\n   '@types/json5@0.0.29':\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n \n-  '@types/node@22.10.1':\n-    resolution: {integrity: sha512-qKgsUwfHZV2WCWLAnVP1JqnpE6Im6h3Y0+fYgMTasNQ7V++CBX5OT1as0g0f+OyubbFqhf6XVNIsmN4IIhEgGQ==}\n+  '@types/node@22.10.2':\n+    resolution: {integrity: sha512-Xxr6BBRCAOQixvonOye19wnzyDiUtTeqldOOmj3CkeblonbccA12PFwlufvRdrpjXxqnmUaeiU5EOA+7s5diUQ==}\n \n   '@types/react-dom@19.0.2':\n     resolution: {integrity: sha512-c1s+7TKFaDRRxr1TxccIX2u7sfCnc3RxkVyBIUA2lCpyqCF+QoAwQ/CBg7bsMdVwP120HEH143VQezKtef5nCg==}\n@@ -4409,7 +4409,7 @@ snapshots:\n \n   '@types/json5@0.0.29': {}\n \n-  '@types/node@22.10.1':\n+  '@types/node@22.10.2':\n     dependencies:\n       undici-types: 6.20.0\n ",
    "output": "chore(deps): update dependency @types/node to v22.10.2 (#773)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex b95c63e..27b6add 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -61,7 +61,7 @@ importers:\n         version: 1.1.4(@types/react-dom@19.0.2(@types/react@19.0.1))(@types/react@19.0.1)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n       '@t3-oss/env-nextjs':\n         specifier: ^0.11.1\n-        version: 0.11.1(typescript@5.7.2)(zod@3.23.8)\n+        version: 0.11.1(typescript@5.7.2)(zod@3.24.0)\n       '@tanstack/react-table':\n         specifier: ^8.20.5\n         version: 8.20.5(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n@@ -133,7 +133,7 @@ importers:\n         version: 1.1.1(@types/react-dom@19.0.2(@types/react@19.0.1))(@types/react@19.0.1)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n       zod:\n         specifier: ^3.23.8\n-        version: 3.23.8\n+        version: 3.24.0\n     devDependencies:\n       '@faker-js/faker':\n         specifier: ^9.0.3\n@@ -3381,8 +3381,8 @@ packages:\n     resolution: {integrity: sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==}\n     engines: {node: '>=10'}\n \n-  zod@3.23.8:\n-    resolution: {integrity: sha512-XBx9AXhXktjUqnepgTiE5flcKIYWi/rme0Eaj+5Y0lftuGBq+jyRu/md4WnuxqgP1ubdpNCsYEYPxrzVHD8d6g==}\n+  zod@3.24.0:\n+    resolution: {integrity: sha512-Hz+wiY8yD0VLA2k/+nsg2Abez674dDGTai33SwNvMPuf9uIrBC9eFgIMQxBBbHFxVXi8W+5nX9DcAh9YNSQm/w==}\n \n snapshots:\n \n@@ -4372,16 +4372,16 @@ snapshots:\n     dependencies:\n       tslib: 2.8.1\n \n-  '@t3-oss/env-core@0.11.1(typescript@5.7.2)(zod@3.23.8)':\n+  '@t3-oss/env-core@0.11.1(typescript@5.7.2)(zod@3.24.0)':\n     dependencies:\n-      zod: 3.23.8\n+      zod: 3.24.0\n     optionalDependencies:\n       typescript: 5.7.2\n \n-  '@t3-oss/env-nextjs@0.11.1(typescript@5.7.2)(zod@3.23.8)':\n+  '@t3-oss/env-nextjs@0.11.1(typescript@5.7.2)(zod@3.24.0)':\n     dependencies:\n-      '@t3-oss/env-core': 0.11.1(typescript@5.7.2)(zod@3.23.8)\n-      zod: 3.23.8\n+      '@t3-oss/env-core': 0.11.1(typescript@5.7.2)(zod@3.24.0)\n+      zod: 3.24.0\n     optionalDependencies:\n       typescript: 5.7.2\n \n@@ -6497,4 +6497,4 @@ snapshots:\n \n   yocto-queue@0.1.0: {}\n \n-  zod@3.23.8: {}\n+  zod@3.24.0: {}",
    "output": "fix(deps): update dependency zod to v3.24.0 (#770)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex e89b236..52cf319 100644\n--- a/package.json\n+++ b/package.json\n@@ -47,7 +47,7 @@\n     \"clsx\": \"^2.1.1\",\n     \"cmdk\": \"^1.0.0\",\n     \"date-fns\": \"^4.1.0\",\n-    \"drizzle-orm\": \"^0.37.0\",\n+    \"drizzle-orm\": \"^0.38.0\",\n     \"export-to-csv\": \"^1.4.0\",\n     \"geist\": \"^1.3.1\",\n     \"lucide-react\": \"^0.468.0\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 3cc170a..ac5565c 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -78,8 +78,8 @@ importers:\n         specifier: ^4.1.0\n         version: 4.1.0\n       drizzle-orm:\n-        specifier: ^0.37.0\n-        version: 0.37.0(@libsql/client-wasm@0.14.0)(@types/react@19.0.1)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0)\n+        specifier: ^0.38.0\n+        version: 0.38.0(@libsql/client-wasm@0.14.0)(@types/react@19.0.1)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0)\n       export-to-csv:\n         specifier: ^1.4.0\n         version: 1.4.0\n@@ -1853,8 +1853,8 @@ packages:\n     resolution: {integrity: sha512-zAf0qg/BX2lV/Xip4igXrtbDv+Ub8S39U6qSOEGNvqcHrnmaQjS4mkkFZOUsgXRbuH56QUeWZxfnLHefrKCV5g==}\n     hasBin: true\n \n-  drizzle-orm@0.37.0:\n-    resolution: {integrity: sha512-AsCNACQ/T2CyZUkrBRUqFT2ibHJ9ZHz3+lzYJFFn3hnj7ylIeItMz5kacRG89uSE74nXYShqehr6u+6ks4JR1A==}\n+  drizzle-orm@0.38.0:\n+    resolution: {integrity: sha512-Ev1UYKOUxiVwLZZfos4hoNDMDkp313FqF0CHelhR+BeOdb76z/a6pKF6SgYQSrmj6EXH4cy6QIkmuxl2KIFW0A==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=4'\n@@ -4834,7 +4834,7 @@ snapshots:\n     transitivePeerDependencies:\n       - supports-color\n \n-  drizzle-orm@0.37.0(@libsql/client-wasm@0.14.0)(@types/react@19.0.1)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0):\n+  drizzle-orm@0.38.0(@libsql/client-wasm@0.14.0)(@types/react@19.0.1)(pg@8.13.1)(postgres@3.4.5)(react@19.0.0):\n     optionalDependencies:\n       '@libsql/client-wasm': 0.14.0\n       '@types/react': 19.0.1",
    "output": "fix(deps): update dependency drizzle-orm to ^0.38.0 (#767)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 9cc9a5a..e89b236 100644\n--- a/package.json\n+++ b/package.json\n@@ -79,7 +79,7 @@\n     \"@typescript-eslint/parser\": \"^8.11.0\",\n     \"autoprefixer\": \"^10.4.20\",\n     \"dotenv-cli\": \"^7.4.2\",\n-    \"drizzle-kit\": \"^0.29.0\",\n+    \"drizzle-kit\": \"^0.30.0\",\n     \"eslint\": \"^8.57.0\",\n     \"eslint-config-next\": \"^15.0.0\",\n     \"eslint-config-prettier\": \"^9.1.0\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex f69f0b6..3cc170a 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -169,8 +169,8 @@ importers:\n         specifier: ^7.4.2\n         version: 7.4.4\n       drizzle-kit:\n-        specifier: ^0.29.0\n-        version: 0.29.1\n+        specifier: ^0.30.0\n+        version: 0.30.0\n       eslint:\n         specifier: ^8.57.0\n         version: 8.57.1\n@@ -1849,8 +1849,8 @@ packages:\n     resolution: {integrity: sha512-ZmdL2rui+eB2YwhsWzjInR8LldtZHGDoQ1ugH85ppHKwpUHL7j7rN0Ti9NCnGiQbhaZ11FpR+7ao1dNsmduNUg==}\n     engines: {node: '>=12'}\n \n-  drizzle-kit@0.29.1:\n-    resolution: {integrity: sha512-OvHL8RVyYiPR3LLRE3SHdcON8xGXl+qMfR9uTTnFWBPIqVk/3NWYZPb7nfpM1Bhix3H+BsxqPyyagG7YZ+Z63A==}\n+  drizzle-kit@0.30.0:\n+    resolution: {integrity: sha512-zAf0qg/BX2lV/Xip4igXrtbDv+Ub8S39U6qSOEGNvqcHrnmaQjS4mkkFZOUsgXRbuH56QUeWZxfnLHefrKCV5g==}\n     hasBin: true\n \n   drizzle-orm@0.37.0:\n@@ -4825,7 +4825,7 @@ snapshots:\n \n   dotenv@16.4.5: {}\n \n-  drizzle-kit@0.29.1:\n+  drizzle-kit@0.30.0:\n     dependencies:\n       '@drizzle-team/brocli': 0.10.2\n       '@esbuild-kit/esm-loader': 2.6.5",
    "output": "chore(deps): update dependency drizzle-kit to ^0.30.0 (#766)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex e850e94..f69f0b6 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -121,7 +121,7 @@ importers:\n         version: 0.0.1\n       sonner:\n         specifier: ^1.5.0\n-        version: 1.7.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n+        version: 1.7.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n       tailwind-merge:\n         specifier: ^2.5.4\n         version: 2.5.5\n@@ -3089,8 +3089,8 @@ packages:\n   simple-swizzle@0.2.2:\n     resolution: {integrity: sha512-JA//kQgZtbuY83m+xT+tXJkmJncGMTFT+C+g2h2R9uxkYIrE2yy9sgmcLhCnw57/WSD+Eh3J97FPEDFnbXnDUg==}\n \n-  sonner@1.7.0:\n-    resolution: {integrity: sha512-W6dH7m5MujEPyug3lpI2l3TC3Pp1+LTgK0Efg+IHDrBbtEjyCmCHHo6yfNBOsf1tFZ6zf+jceWwB38baC8yO9g==}\n+  sonner@1.7.1:\n+    resolution: {integrity: sha512-b6LHBfH32SoVasRFECrdY8p8s7hXPDn3OHUFbZZbiB1ctLS9Gdh6rpX2dVrpQA0kiL5jcRzDDldwwLkSKk3+QQ==}\n     peerDependencies:\n       react: ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n       react-dom: ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n@@ -6138,7 +6138,7 @@ snapshots:\n       is-arrayish: 0.3.2\n     optional: true\n \n-  sonner@1.7.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n+  sonner@1.7.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n     dependencies:\n       react: 19.0.0\n       react-dom: 19.0.0(react@19.0.0)",
    "output": "fix(deps): update dependency sonner to v1.7.1 (#765)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/app/_components/tasks-table.tsx b/src/app/_components/tasks-table.tsx\nindex f2cabd0..159bba2 100644\n--- a/src/app/_components/tasks-table.tsx\n+++ b/src/app/_components/tasks-table.tsx\n@@ -148,7 +148,7 @@ export function TasksTable({ promises }: TasksTableProps) {\n       sorting: [{ id: \"createdAt\", desc: true }],\n       columnPinning: { right: [\"actions\"] },\n     },\n-    getRowId: (originalRow, index) => `${originalRow.id}-${index}`,\n+    getRowId: (originalRow) => originalRow.id,\n     shallow: false,\n     clearOnDefault: true,\n   })\ndiff --git a/src/app/_components/update-task-sheet.tsx b/src/app/_components/update-task-sheet.tsx\nindex 261bdff..722fb5d 100644\n--- a/src/app/_components/update-task-sheet.tsx\n+++ b/src/app/_components/update-task-sheet.tsx\n@@ -56,15 +56,6 @@ export function UpdateTaskSheet({ task, ...props }: UpdateTaskSheetProps) {\n     },\n   })\n \n-  React.useEffect(() => {\n-    form.reset({\n-      title: task?.title ?? \"\",\n-      label: task?.label,\n-      status: task?.status,\n-      priority: task?.priority,\n-    })\n-  }, [task, form])\n-\n   function onSubmit(input: UpdateTaskSchema) {\n     startUpdateTransition(async () => {\n       if (!task) return",
    "output": "fix: multiple rerender"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 3c083e1..e850e94 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -22,7 +22,7 @@ importers:\n         version: 3.2.2(react@19.0.0)\n       '@hookform/resolvers':\n         specifier: ^3.9.0\n-        version: 3.9.1(react-hook-form@7.53.2(react@19.0.0))\n+        version: 3.9.1(react-hook-form@7.54.0(react@19.0.0))\n       '@radix-ui/react-checkbox':\n         specifier: ^1.1.2\n         version: 1.1.2(@types/react-dom@19.0.1)(@types/react@19.0.1)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n@@ -115,7 +115,7 @@ importers:\n         version: 19.0.0(react@19.0.0)\n       react-hook-form:\n         specifier: ^7.53.1\n-        version: 7.53.2(react@19.0.0)\n+        version: 7.54.0(react@19.0.0)\n       server-only:\n         specifier: ^0.0.1\n         version: 0.0.1\n@@ -2929,8 +2929,8 @@ packages:\n     peerDependencies:\n       react: ^19.0.0\n \n-  react-hook-form@7.53.2:\n-    resolution: {integrity: sha512-YVel6fW5sOeedd1524pltpHX+jgU2u3DSDtXEaBORNdqiNrsX/nUI/iGXONegttg0mJVnfrIkiV0cmTU6Oo2xw==}\n+  react-hook-form@7.54.0:\n+    resolution: {integrity: sha512-PS05+UQy/IdSbJNojBypxAo9wllhHgGmyr8/dyGQcPoiMf3e7Dfb9PWYVRco55bLbxH9S+1yDDJeTdlYCSxO3A==}\n     engines: {node: '>=18.0.0'}\n     peerDependencies:\n       react: ^16.8.0 || ^17 || ^18 || ^19\n@@ -3734,9 +3734,9 @@ snapshots:\n \n   '@floating-ui/utils@0.2.8': {}\n \n-  '@hookform/resolvers@3.9.1(react-hook-form@7.53.2(react@19.0.0))':\n+  '@hookform/resolvers@3.9.1(react-hook-form@7.54.0(react@19.0.0))':\n     dependencies:\n-      react-hook-form: 7.53.2(react@19.0.0)\n+      react-hook-form: 7.54.0(react@19.0.0)\n \n   '@humanwhocodes/config-array@0.13.0':\n     dependencies:\n@@ -5945,7 +5945,7 @@ snapshots:\n       react: 19.0.0\n       scheduler: 0.25.0\n \n-  react-hook-form@7.53.2(react@19.0.0):\n+  react-hook-form@7.54.0(react@19.0.0):\n     dependencies:\n       react: 19.0.0\n ",
    "output": "fix(deps): update dependency react-hook-form to v7.54.0 (#763)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 325ce95..9cc9a5a 100644\n--- a/package.json\n+++ b/package.json\n@@ -96,5 +96,5 @@\n   \"ct3aMetadata\": {\n     \"initVersion\": \"7.23.1\"\n   },\n-  \"packageManager\": \"pnpm@9.14.4\"\n+  \"packageManager\": \"pnpm@9.15.0\"\n }",
    "output": "chore(deps): update pnpm to v9.15.0 (#762)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex a51430a..52da542 100644\n--- a/package.json\n+++ b/package.json\n@@ -50,7 +50,7 @@\n     \"drizzle-orm\": \"^0.37.0\",\n     \"export-to-csv\": \"^1.4.0\",\n     \"geist\": \"^1.3.1\",\n-    \"lucide-react\": \"^0.465.0\",\n+    \"lucide-react\": \"^0.468.0\",\n     \"nanoid\": \"^5.0.7\",\n     \"next\": \"^15.0.0\",\n     \"next-themes\": \"^0.4.3\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 7aafecf..fafe739 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -87,8 +87,8 @@ importers:\n         specifier: ^1.3.1\n         version: 1.3.1(next@15.0.4(react-dom@18.3.1(react@18.3.1))(react@18.3.1))\n       lucide-react:\n-        specifier: ^0.465.0\n-        version: 0.465.0(react@18.3.1)\n+        specifier: ^0.468.0\n+        version: 0.468.0(react@18.3.1)\n       nanoid:\n         specifier: ^5.0.7\n         version: 5.0.9\n@@ -2542,8 +2542,8 @@ packages:\n     resolution: {integrity: sha512-CgeuL5uom6j/ZVrg7G/+1IXqRY8JXX4Hghfy5YE0EhoYQWvndP1kufu58cmZLNIDKnRhZrXfdS9urVWx98AipQ==}\n     engines: {node: 20 || >=22}\n \n-  lucide-react@0.465.0:\n-    resolution: {integrity: sha512-uV7WEqbwaCcc+QjAxIhAvkAr3kgwkkYID3XptCHll72/F7NZlk6ONmJYpk+Xqx5Q0r/8wiOjz73H1BYbl8Z8iw==}\n+  lucide-react@0.468.0:\n+    resolution: {integrity: sha512-6koYRhnM2N0GGZIdXzSeiNwguv1gt/FAjZOiPl76roBi3xKEXa4WmfpxgQwTTL4KipXjefrnf3oV4IsYhi4JFA==}\n     peerDependencies:\n       react: ^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0-rc\n \n@@ -5648,7 +5648,7 @@ snapshots:\n \n   lru-cache@11.0.1: {}\n \n-  lucide-react@0.465.0(react@18.3.1):\n+  lucide-react@0.468.0(react@18.3.1):\n     dependencies:\n       react: 18.3.1\n ",
    "output": "fix(deps): update dependency lucide-react to ^0.468.0 (#754)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex bc73848..238cd0e 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -97,7 +97,7 @@ importers:\n         version: 15.0.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       next-themes:\n         specifier: ^0.4.3\n-        version: 0.4.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n+        version: 0.4.4(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       nuqs:\n         specifier: ^2.0.0\n         version: 2.2.3(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.7.2))(next@15.0.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n@@ -2592,8 +2592,8 @@ packages:\n   natural-compare@1.4.0:\n     resolution: {integrity: sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==}\n \n-  next-themes@0.4.3:\n-    resolution: {integrity: sha512-nG84VPkTdUHR2YeD89YchvV4I9RbiMAql3GiLEQlPvq1ioaqPaIReK+yMRdg/zgiXws620qS1rU30TiWmmG9lA==}\n+  next-themes@0.4.4:\n+    resolution: {integrity: sha512-LDQ2qIOJF0VnuVrrMSMLrWGjRMkq+0mpgl6e0juCLqdJ+oo8Q84JRWT6Wh11VDQKkMMe+dVzDKLWs5n87T+PkQ==}\n     peerDependencies:\n       react: ^16.8 || ^17 || ^18 || ^19 || ^19.0.0-rc\n       react-dom: ^16.8 || ^17 || ^18 || ^19 || ^19.0.0-rc\n@@ -5681,7 +5681,7 @@ snapshots:\n \n   natural-compare@1.4.0: {}\n \n-  next-themes@0.4.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1):\n+  next-themes@0.4.4(react-dom@18.3.1(react@18.3.1))(react@18.3.1):\n     dependencies:\n       react: 18.3.1\n       react-dom: 18.3.1(react@18.3.1)",
    "output": "fix(deps): update dependency next-themes to v0.4.4 (#759)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex c5b8167..c325e25 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -10,13 +10,13 @@ importers:\n     dependencies:\n       '@dnd-kit/core':\n         specifier: ^6.1.0\n-        version: 6.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n+        version: 6.3.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       '@dnd-kit/modifiers':\n         specifier: ^9.0.0\n-        version: 9.0.0(@dnd-kit/core@6.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n+        version: 9.0.0(@dnd-kit/core@6.3.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n       '@dnd-kit/sortable':\n         specifier: ^10.0.0\n-        version: 10.0.0(@dnd-kit/core@6.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n+        version: 10.0.0(@dnd-kit/core@6.3.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n       '@dnd-kit/utilities':\n         specifier: ^3.2.2\n         version: 3.2.2(react@18.3.1)\n@@ -252,8 +252,8 @@ packages:\n     peerDependencies:\n       react: '>=16.8.0'\n \n-  '@dnd-kit/core@6.3.0':\n-    resolution: {integrity: sha512-1PZxmnH+hQFwcaVRCe4SrtBn4cZ9S0trGtxHE13iLGEEZFhiFe+Sxg4ZUlwirYsXJCejqUYDi85PQC7J8/AINg==}\n+  '@dnd-kit/core@6.3.1':\n+    resolution: {integrity: sha512-xkGBRQQab4RLwgXxoqETICr6S5JlogafbhNsidmrkVv2YRs5MLwpjoF2qpiGjQt8S9AoxtIV603s0GIUpY5eYQ==}\n     peerDependencies:\n       react: '>=16.8.0'\n       react-dom: '>=16.8.0'\n@@ -3430,7 +3430,7 @@ snapshots:\n       react: 18.3.1\n       tslib: 2.8.1\n \n-  '@dnd-kit/core@6.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':\n+  '@dnd-kit/core@6.3.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':\n     dependencies:\n       '@dnd-kit/accessibility': 3.1.1(react@18.3.1)\n       '@dnd-kit/utilities': 3.2.2(react@18.3.1)\n@@ -3438,16 +3438,16 @@ snapshots:\n       react-dom: 18.3.1(react@18.3.1)\n       tslib: 2.8.1\n \n-  '@dnd-kit/modifiers@9.0.0(@dnd-kit/core@6.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)':\n+  '@dnd-kit/modifiers@9.0.0(@dnd-kit/core@6.3.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)':\n     dependencies:\n-      '@dnd-kit/core': 6.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n+      '@dnd-kit/core': 6.3.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       '@dnd-kit/utilities': 3.2.2(react@18.3.1)\n       react: 18.3.1\n       tslib: 2.8.1\n \n-  '@dnd-kit/sortable@10.0.0(@dnd-kit/core@6.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)':\n+  '@dnd-kit/sortable@10.0.0(@dnd-kit/core@6.3.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)':\n     dependencies:\n-      '@dnd-kit/core': 6.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n+      '@dnd-kit/core': 6.3.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       '@dnd-kit/utilities': 3.2.2(react@18.3.1)\n       react: 18.3.1\n       tslib: 2.8.1",
    "output": "fix(deps): update dependency @dnd-kit/core to v6.3.1 (#756)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 883bff8..a51430a 100644\n--- a/package.json\n+++ b/package.json\n@@ -25,8 +25,8 @@\n   },\n   \"dependencies\": {\n     \"@dnd-kit/core\": \"^6.1.0\",\n-    \"@dnd-kit/modifiers\": \"^8.0.0\",\n-    \"@dnd-kit/sortable\": \"^9.0.0\",\n+    \"@dnd-kit/modifiers\": \"^9.0.0\",\n+    \"@dnd-kit/sortable\": \"^10.0.0\",\n     \"@dnd-kit/utilities\": \"^3.2.2\",\n     \"@hookform/resolvers\": \"^3.9.0\",\n     \"@radix-ui/react-checkbox\": \"^1.1.2\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 324008f..c5b8167 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -12,11 +12,11 @@ importers:\n         specifier: ^6.1.0\n         version: 6.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       '@dnd-kit/modifiers':\n-        specifier: ^8.0.0\n-        version: 8.0.0(@dnd-kit/core@6.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n-      '@dnd-kit/sortable':\n         specifier: ^9.0.0\n         version: 9.0.0(@dnd-kit/core@6.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n+      '@dnd-kit/sortable':\n+        specifier: ^10.0.0\n+        version: 10.0.0(@dnd-kit/core@6.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n       '@dnd-kit/utilities':\n         specifier: ^3.2.2\n         version: 3.2.2(react@18.3.1)\n@@ -258,16 +258,16 @@ packages:\n       react: '>=16.8.0'\n       react-dom: '>=16.8.0'\n \n-  '@dnd-kit/modifiers@8.0.0':\n-    resolution: {integrity: sha512-oPZ0JoKtVSK9hVHSBDKG1oCLgnZbpxuH/SMnyDtXkNhn9+SF1+98DlWILFYxIT8faOS/GgfhlNFREmym6oqrEg==}\n+  '@dnd-kit/modifiers@9.0.0':\n+    resolution: {integrity: sha512-ybiLc66qRGuZoC20wdSSG6pDXFikui/dCNGthxv4Ndy8ylErY0N3KVxY2bgo7AWwIbxDmXDg3ylAFmnrjcbVvw==}\n     peerDependencies:\n-      '@dnd-kit/core': ^6.2.0\n+      '@dnd-kit/core': ^6.3.0\n       react: '>=16.8.0'\n \n-  '@dnd-kit/sortable@9.0.0':\n-    resolution: {integrity: sha512-3/9r8Mmba0nKTbo8kPnVSFZKf/VSy94nXZ3aUwzPEh78j/LooQ/EFKRZENak4PHKBkN53mgTF/z+Sd8H+FcAnQ==}\n+  '@dnd-kit/sortable@10.0.0':\n+    resolution: {integrity: sha512-+xqhmIIzvAYMGfBYYnbKuNicfSsk4RksY2XdmJhT+HAC01nix6fHCztU68jooFiMUB01Ky3F0FyOvhG/BZrWkg==}\n     peerDependencies:\n-      '@dnd-kit/core': ^6.2.0\n+      '@dnd-kit/core': ^6.3.0\n       react: '>=16.8.0'\n \n   '@dnd-kit/utilities@3.2.2':\n@@ -3438,14 +3438,14 @@ snapshots:\n       react-dom: 18.3.1(react@18.3.1)\n       tslib: 2.8.1\n \n-  '@dnd-kit/modifiers@8.0.0(@dnd-kit/core@6.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)':\n+  '@dnd-kit/modifiers@9.0.0(@dnd-kit/core@6.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)':\n     dependencies:\n       '@dnd-kit/core': 6.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       '@dnd-kit/utilities': 3.2.2(react@18.3.1)\n       react: 18.3.1\n       tslib: 2.8.1\n \n-  '@dnd-kit/sortable@9.0.0(@dnd-kit/core@6.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)':\n+  '@dnd-kit/sortable@10.0.0(@dnd-kit/core@6.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)':\n     dependencies:\n       '@dnd-kit/core': 6.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       '@dnd-kit/utilities': 3.2.2(react@18.3.1)",
    "output": "fix(deps): update dnd-kit monorepo (#753)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex b89e69f..324008f 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -10,13 +10,13 @@ importers:\n     dependencies:\n       '@dnd-kit/core':\n         specifier: ^6.1.0\n-        version: 6.2.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n+        version: 6.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       '@dnd-kit/modifiers':\n         specifier: ^8.0.0\n-        version: 8.0.0(@dnd-kit/core@6.2.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n+        version: 8.0.0(@dnd-kit/core@6.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n       '@dnd-kit/sortable':\n         specifier: ^9.0.0\n-        version: 9.0.0(@dnd-kit/core@6.2.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n+        version: 9.0.0(@dnd-kit/core@6.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n       '@dnd-kit/utilities':\n         specifier: ^3.2.2\n         version: 3.2.2(react@18.3.1)\n@@ -252,8 +252,8 @@ packages:\n     peerDependencies:\n       react: '>=16.8.0'\n \n-  '@dnd-kit/core@6.2.0':\n-    resolution: {integrity: sha512-KVK/CJmaYGTxTPU6P0+Oy4itgffTUa80B8317sXzfOr1qUzSL29jE7Th11llXiu2haB7B9Glpzo2CDElin+geQ==}\n+  '@dnd-kit/core@6.3.0':\n+    resolution: {integrity: sha512-1PZxmnH+hQFwcaVRCe4SrtBn4cZ9S0trGtxHE13iLGEEZFhiFe+Sxg4ZUlwirYsXJCejqUYDi85PQC7J8/AINg==}\n     peerDependencies:\n       react: '>=16.8.0'\n       react-dom: '>=16.8.0'\n@@ -3430,7 +3430,7 @@ snapshots:\n       react: 18.3.1\n       tslib: 2.8.1\n \n-  '@dnd-kit/core@6.2.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':\n+  '@dnd-kit/core@6.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':\n     dependencies:\n       '@dnd-kit/accessibility': 3.1.1(react@18.3.1)\n       '@dnd-kit/utilities': 3.2.2(react@18.3.1)\n@@ -3438,16 +3438,16 @@ snapshots:\n       react-dom: 18.3.1(react@18.3.1)\n       tslib: 2.8.1\n \n-  '@dnd-kit/modifiers@8.0.0(@dnd-kit/core@6.2.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)':\n+  '@dnd-kit/modifiers@8.0.0(@dnd-kit/core@6.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)':\n     dependencies:\n-      '@dnd-kit/core': 6.2.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n+      '@dnd-kit/core': 6.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       '@dnd-kit/utilities': 3.2.2(react@18.3.1)\n       react: 18.3.1\n       tslib: 2.8.1\n \n-  '@dnd-kit/sortable@9.0.0(@dnd-kit/core@6.2.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)':\n+  '@dnd-kit/sortable@9.0.0(@dnd-kit/core@6.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)':\n     dependencies:\n-      '@dnd-kit/core': 6.2.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n+      '@dnd-kit/core': 6.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       '@dnd-kit/utilities': 3.2.2(react@18.3.1)\n       react: 18.3.1\n       tslib: 2.8.1",
    "output": "fix(deps): update dependency @dnd-kit/core to v6.3.0 (#752)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 53240d1..883bff8 100644\n--- a/package.json\n+++ b/package.json\n@@ -50,7 +50,7 @@\n     \"drizzle-orm\": \"^0.37.0\",\n     \"export-to-csv\": \"^1.4.0\",\n     \"geist\": \"^1.3.1\",\n-    \"lucide-react\": \"^0.464.0\",\n+    \"lucide-react\": \"^0.465.0\",\n     \"nanoid\": \"^5.0.7\",\n     \"next\": \"^15.0.0\",\n     \"next-themes\": \"^0.4.3\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex a8389f6..ea59784 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -87,8 +87,8 @@ importers:\n         specifier: ^1.3.1\n         version: 1.3.1(next@15.0.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1))\n       lucide-react:\n-        specifier: ^0.464.0\n-        version: 0.464.0(react@18.3.1)\n+        specifier: ^0.465.0\n+        version: 0.465.0(react@18.3.1)\n       nanoid:\n         specifier: ^5.0.7\n         version: 5.0.9\n@@ -2539,8 +2539,8 @@ packages:\n     resolution: {integrity: sha512-CgeuL5uom6j/ZVrg7G/+1IXqRY8JXX4Hghfy5YE0EhoYQWvndP1kufu58cmZLNIDKnRhZrXfdS9urVWx98AipQ==}\n     engines: {node: 20 || >=22}\n \n-  lucide-react@0.464.0:\n-    resolution: {integrity: sha512-eCx1qClbnw5qRqB2Z1AFFp71wdJXEwhPp5ii8LviyvHb7o/7eMXFiTyDHh7JpjM9BO9pC6ZUp/c7mCwwxbPIcg==}\n+  lucide-react@0.465.0:\n+    resolution: {integrity: sha512-uV7WEqbwaCcc+QjAxIhAvkAr3kgwkkYID3XptCHll72/F7NZlk6ONmJYpk+Xqx5Q0r/8wiOjz73H1BYbl8Z8iw==}\n     peerDependencies:\n       react: ^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0-rc\n \n@@ -5638,7 +5638,7 @@ snapshots:\n \n   lru-cache@11.0.1: {}\n \n-  lucide-react@0.464.0(react@18.3.1):\n+  lucide-react@0.465.0(react@18.3.1):\n     dependencies:\n       react: 18.3.1\n ",
    "output": "fix(deps): update dependency lucide-react to ^0.465.0 (#750)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 7f4793a..a8389f6 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -170,7 +170,7 @@ importers:\n         version: 7.4.4\n       drizzle-kit:\n         specifier: ^0.29.0\n-        version: 0.29.0\n+        version: 0.29.1\n       eslint:\n         specifier: ^8.57.0\n         version: 8.57.1\n@@ -1852,8 +1852,8 @@ packages:\n     resolution: {integrity: sha512-ZmdL2rui+eB2YwhsWzjInR8LldtZHGDoQ1ugH85ppHKwpUHL7j7rN0Ti9NCnGiQbhaZ11FpR+7ao1dNsmduNUg==}\n     engines: {node: '>=12'}\n \n-  drizzle-kit@0.29.0:\n-    resolution: {integrity: sha512-WjH0eC7/WKl8hucZPl/H5Df6WbUs1KJdM/vfX6bCjn1lOePrbeeroc18dzAVXdZpvgYx0ywJcFOypoC5MfYAYg==}\n+  drizzle-kit@0.29.1:\n+    resolution: {integrity: sha512-OvHL8RVyYiPR3LLRE3SHdcON8xGXl+qMfR9uTTnFWBPIqVk/3NWYZPb7nfpM1Bhix3H+BsxqPyyagG7YZ+Z63A==}\n     hasBin: true\n \n   drizzle-orm@0.37.0:\n@@ -4824,7 +4824,7 @@ snapshots:\n \n   dotenv@16.4.5: {}\n \n-  drizzle-kit@0.29.0:\n+  drizzle-kit@0.29.1:\n     dependencies:\n       '@drizzle-team/brocli': 0.10.2\n       '@esbuild-kit/esm-loader': 2.6.5",
    "output": "chore(deps): update dependency drizzle-kit to v0.29.1 (#749)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 3891e23..7f4793a 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -140,7 +140,7 @@ importers:\n         version: 9.3.0\n       '@ianvs/prettier-plugin-sort-imports':\n         specifier: ^4.3.1\n-        version: 4.4.0(prettier@3.4.1)\n+        version: 4.4.0(prettier@3.4.2)\n       '@total-typescript/ts-reset':\n         specifier: ^0.6.1\n         version: 0.6.1\n@@ -191,10 +191,10 @@ importers:\n         version: 8.4.49\n       prettier:\n         specifier: ^3.3.3\n-        version: 3.4.1\n+        version: 3.4.2\n       prettier-plugin-tailwindcss:\n         specifier: ^0.6.8\n-        version: 0.6.9(@ianvs/prettier-plugin-sort-imports@4.4.0(prettier@3.4.1))(prettier@3.4.1)\n+        version: 0.6.9(@ianvs/prettier-plugin-sort-imports@4.4.0(prettier@3.4.2))(prettier@3.4.2)\n       rimraf:\n         specifier: ^6.0.1\n         version: 6.0.1\n@@ -2903,8 +2903,8 @@ packages:\n       prettier-plugin-svelte:\n         optional: true\n \n-  prettier@3.4.1:\n-    resolution: {integrity: sha512-G+YdqtITVZmOJje6QkXQWzl3fSfMxFwm1tjTyo9exhkmWSqC4Yhd1+lug++IlR2mvRVAxEDDWYkQdeSztajqgg==}\n+  prettier@3.4.2:\n+    resolution: {integrity: sha512-e9MewbtFo+Fevyuxn/4rrcDAaq0IYxPGLvObpQjiZBMAzB9IGmzlnG9RZy3FFas+eBMu2vA0CszMeduow5dIuQ==}\n     engines: {node: '>=14'}\n     hasBin: true\n \n@@ -3746,13 +3746,13 @@ snapshots:\n \n   '@humanwhocodes/object-schema@2.0.3': {}\n \n-  '@ianvs/prettier-plugin-sort-imports@4.4.0(prettier@3.4.1)':\n+  '@ianvs/prettier-plugin-sort-imports@4.4.0(prettier@3.4.2)':\n     dependencies:\n       '@babel/generator': 7.26.2\n       '@babel/parser': 7.26.2\n       '@babel/traverse': 7.25.9\n       '@babel/types': 7.26.0\n-      prettier: 3.4.1\n+      prettier: 3.4.2\n       semver: 7.6.3\n     transitivePeerDependencies:\n       - supports-color\n@@ -5913,13 +5913,13 @@ snapshots:\n \n   prelude-ls@1.2.1: {}\n \n-  prettier-plugin-tailwindcss@0.6.9(@ianvs/prettier-plugin-sort-imports@4.4.0(prettier@3.4.1))(prettier@3.4.1):\n+  prettier-plugin-tailwindcss@0.6.9(@ianvs/prettier-plugin-sort-imports@4.4.0(prettier@3.4.2))(prettier@3.4.2):\n     dependencies:\n-      prettier: 3.4.1\n+      prettier: 3.4.2\n     optionalDependencies:\n-      '@ianvs/prettier-plugin-sort-imports': 4.4.0(prettier@3.4.1)\n+      '@ianvs/prettier-plugin-sort-imports': 4.4.0(prettier@3.4.2)\n \n-  prettier@3.4.1: {}\n+  prettier@3.4.2: {}\n \n   prop-types@15.8.1:\n     dependencies:",
    "output": "chore(deps): update dependency prettier to v3.4.2 (#748)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex c80f061..53240d1 100644\n--- a/package.json\n+++ b/package.json\n@@ -50,7 +50,7 @@\n     \"drizzle-orm\": \"^0.37.0\",\n     \"export-to-csv\": \"^1.4.0\",\n     \"geist\": \"^1.3.1\",\n-    \"lucide-react\": \"^0.462.0\",\n+    \"lucide-react\": \"^0.464.0\",\n     \"nanoid\": \"^5.0.7\",\n     \"next\": \"^15.0.0\",\n     \"next-themes\": \"^0.4.3\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex d8a8c5e..3891e23 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -87,8 +87,8 @@ importers:\n         specifier: ^1.3.1\n         version: 1.3.1(next@15.0.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1))\n       lucide-react:\n-        specifier: ^0.462.0\n-        version: 0.462.0(react@18.3.1)\n+        specifier: ^0.464.0\n+        version: 0.464.0(react@18.3.1)\n       nanoid:\n         specifier: ^5.0.7\n         version: 5.0.9\n@@ -2539,8 +2539,8 @@ packages:\n     resolution: {integrity: sha512-CgeuL5uom6j/ZVrg7G/+1IXqRY8JXX4Hghfy5YE0EhoYQWvndP1kufu58cmZLNIDKnRhZrXfdS9urVWx98AipQ==}\n     engines: {node: 20 || >=22}\n \n-  lucide-react@0.462.0:\n-    resolution: {integrity: sha512-NTL7EbAao9IFtuSivSZgrAh4fZd09Lr+6MTkqIxuHaH2nnYiYIzXPo06cOxHg9wKLdj6LL8TByG4qpePqwgx/g==}\n+  lucide-react@0.464.0:\n+    resolution: {integrity: sha512-eCx1qClbnw5qRqB2Z1AFFp71wdJXEwhPp5ii8LviyvHb7o/7eMXFiTyDHh7JpjM9BO9pC6ZUp/c7mCwwxbPIcg==}\n     peerDependencies:\n       react: ^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0-rc\n \n@@ -5638,7 +5638,7 @@ snapshots:\n \n   lru-cache@11.0.1: {}\n \n-  lucide-react@0.462.0(react@18.3.1):\n+  lucide-react@0.464.0(react@18.3.1):\n     dependencies:\n       react: 18.3.1\n ",
    "output": "fix(deps): update dependency lucide-react to ^0.464.0 (#744)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 50dc22c..c80f061 100644\n--- a/package.json\n+++ b/package.json\n@@ -47,7 +47,7 @@\n     \"clsx\": \"^2.1.1\",\n     \"cmdk\": \"^1.0.0\",\n     \"date-fns\": \"^4.1.0\",\n-    \"drizzle-orm\": \"^0.36.0\",\n+    \"drizzle-orm\": \"^0.37.0\",\n     \"export-to-csv\": \"^1.4.0\",\n     \"geist\": \"^1.3.1\",\n     \"lucide-react\": \"^0.462.0\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex e367f00..a6a3c5f 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -78,8 +78,8 @@ importers:\n         specifier: ^4.1.0\n         version: 4.1.0\n       drizzle-orm:\n-        specifier: ^0.36.0\n-        version: 0.36.4(@libsql/client-wasm@0.14.0)(@types/react@18.3.12)(pg@8.13.1)(postgres@3.4.5)(react@18.3.1)\n+        specifier: ^0.37.0\n+        version: 0.37.0(@libsql/client-wasm@0.14.0)(@types/react@18.3.12)(pg@8.13.1)(postgres@3.4.5)(react@18.3.1)\n       export-to-csv:\n         specifier: ^1.4.0\n         version: 1.4.0\n@@ -1856,11 +1856,11 @@ packages:\n     resolution: {integrity: sha512-WjH0eC7/WKl8hucZPl/H5Df6WbUs1KJdM/vfX6bCjn1lOePrbeeroc18dzAVXdZpvgYx0ywJcFOypoC5MfYAYg==}\n     hasBin: true\n \n-  drizzle-orm@0.36.4:\n-    resolution: {integrity: sha512-1OZY3PXD7BR00Gl61UUOFihslDldfH4NFRH2MbP54Yxi0G/PKn4HfO65JYZ7c16DeP3SpM3Aw+VXVG9j6CRSXA==}\n+  drizzle-orm@0.37.0:\n+    resolution: {integrity: sha512-AsCNACQ/T2CyZUkrBRUqFT2ibHJ9ZHz3+lzYJFFn3hnj7ylIeItMz5kacRG89uSE74nXYShqehr6u+6ks4JR1A==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n-      '@cloudflare/workers-types': '>=3'\n+      '@cloudflare/workers-types': '>=4'\n       '@electric-sql/pglite': '>=0.2.0'\n       '@libsql/client': '>=0.10.0'\n       '@libsql/client-wasm': '>=0.10.0'\n@@ -4837,7 +4837,7 @@ snapshots:\n     transitivePeerDependencies:\n       - supports-color\n \n-  drizzle-orm@0.36.4(@libsql/client-wasm@0.14.0)(@types/react@18.3.12)(pg@8.13.1)(postgres@3.4.5)(react@18.3.1):\n+  drizzle-orm@0.37.0(@libsql/client-wasm@0.14.0)(@types/react@18.3.12)(pg@8.13.1)(postgres@3.4.5)(react@18.3.1):\n     optionalDependencies:\n       '@libsql/client-wasm': 0.14.0\n       '@types/react': 18.3.12",
    "output": "fix(deps): update dependency drizzle-orm to ^0.37.0 (#746)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 15fdad9..50dc22c 100644\n--- a/package.json\n+++ b/package.json\n@@ -79,7 +79,7 @@\n     \"@typescript-eslint/parser\": \"^8.11.0\",\n     \"autoprefixer\": \"^10.4.20\",\n     \"dotenv-cli\": \"^7.4.2\",\n-    \"drizzle-kit\": \"^0.28.0\",\n+    \"drizzle-kit\": \"^0.29.0\",\n     \"eslint\": \"^8.57.0\",\n     \"eslint-config-next\": \"^15.0.0\",\n     \"eslint-config-prettier\": \"^9.1.0\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 9ced672..e367f00 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -169,8 +169,8 @@ importers:\n         specifier: ^7.4.2\n         version: 7.4.4\n       drizzle-kit:\n-        specifier: ^0.28.0\n-        version: 0.28.1\n+        specifier: ^0.29.0\n+        version: 0.29.0\n       eslint:\n         specifier: ^8.57.0\n         version: 8.57.1\n@@ -1852,8 +1852,8 @@ packages:\n     resolution: {integrity: sha512-ZmdL2rui+eB2YwhsWzjInR8LldtZHGDoQ1ugH85ppHKwpUHL7j7rN0Ti9NCnGiQbhaZ11FpR+7ao1dNsmduNUg==}\n     engines: {node: '>=12'}\n \n-  drizzle-kit@0.28.1:\n-    resolution: {integrity: sha512-JimOV+ystXTWMgZkLHYHf2w3oS28hxiH1FR0dkmJLc7GHzdGJoJAQtQS5DRppnabsRZwE2U1F6CuezVBgmsBBQ==}\n+  drizzle-kit@0.29.0:\n+    resolution: {integrity: sha512-WjH0eC7/WKl8hucZPl/H5Df6WbUs1KJdM/vfX6bCjn1lOePrbeeroc18dzAVXdZpvgYx0ywJcFOypoC5MfYAYg==}\n     hasBin: true\n \n   drizzle-orm@0.36.4:\n@@ -4828,7 +4828,7 @@ snapshots:\n \n   dotenv@16.4.5: {}\n \n-  drizzle-kit@0.28.1:\n+  drizzle-kit@0.29.0:\n     dependencies:\n       '@drizzle-team/brocli': 0.10.2\n       '@esbuild-kit/esm-loader': 2.6.5",
    "output": "chore(deps): update dependency drizzle-kit to ^0.29.0 (#745)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex b4689d4..9ced672 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -137,7 +137,7 @@ importers:\n     devDependencies:\n       '@faker-js/faker':\n         specifier: ^9.0.3\n-        version: 9.2.0\n+        version: 9.3.0\n       '@ianvs/prettier-plugin-sort-imports':\n         specifier: ^4.3.1\n         version: 4.4.0(prettier@3.4.1)\n@@ -731,8 +731,8 @@ packages:\n     resolution: {integrity: sha512-d9zaMRSTIKDLhctzH12MtXvJKSSUhaHcjV+2Z+GK+EEY7XKpP5yR4x+N3TAcHTcu963nIr+TMcCb4DBCYX1z6Q==}\n     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n \n-  '@faker-js/faker@9.2.0':\n-    resolution: {integrity: sha512-ulqQu4KMr1/sTFIYvqSdegHT8NIkt66tFAkugGnHA+1WAfEn6hMzNR+svjXGFRVLnapxvej67Z/LwchFrnLBUg==}\n+  '@faker-js/faker@9.3.0':\n+    resolution: {integrity: sha512-r0tJ3ZOkMd9xsu3VRfqlFR6cz0V/jFYRswAIpC+m/DIfAUXq7g8N7wTAlhSANySXYGKzGryfDXwtwsY8TxEIDw==}\n     engines: {node: '>=18.0.0', npm: '>=9.0.0'}\n \n   '@floating-ui/core@1.6.8':\n@@ -3715,7 +3715,7 @@ snapshots:\n \n   '@eslint/js@8.57.1': {}\n \n-  '@faker-js/faker@9.2.0': {}\n+  '@faker-js/faker@9.3.0': {}\n \n   '@floating-ui/core@1.6.8':\n     dependencies:",
    "output": "chore(deps): update dependency @faker-js/faker to v9.3.0 (#743)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex da090de..15fdad9 100644\n--- a/package.json\n+++ b/package.json\n@@ -96,5 +96,5 @@\n   \"ct3aMetadata\": {\n     \"initVersion\": \"7.23.1\"\n   },\n-  \"packageManager\": \"pnpm@9.14.3\"\n+  \"packageManager\": \"pnpm@9.14.4\"\n }",
    "output": "chore(deps): update pnpm to v9.14.4 (#741)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 7339d85..da090de 100644\n--- a/package.json\n+++ b/package.json\n@@ -96,5 +96,5 @@\n   \"ct3aMetadata\": {\n     \"initVersion\": \"7.23.1\"\n   },\n-  \"packageManager\": \"pnpm@9.14.2\"\n+  \"packageManager\": \"pnpm@9.14.3\"\n }",
    "output": "chore(deps): update pnpm to v9.14.3 (#739)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex dfbce4b..4b67b52 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -149,7 +149,7 @@ importers:\n         version: 8.56.12\n       '@types/node':\n         specifier: ^22.7.8\n-        version: 22.10.0\n+        version: 22.10.1\n       '@types/react':\n         specifier: ^18.3.11\n         version: 18.3.12\n@@ -1477,8 +1477,8 @@ packages:\n   '@types/json5@0.0.29':\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n \n-  '@types/node@22.10.0':\n-    resolution: {integrity: sha512-XC70cRZVElFHfIUB40FgZOBbgJYFKKMa5nb9lxcwYstFG/Mi+/Y0bGS+rs6Dmhmkpq4pnNiLiuZAbc02YCOnmA==}\n+  '@types/node@22.10.1':\n+    resolution: {integrity: sha512-qKgsUwfHZV2WCWLAnVP1JqnpE6Im6h3Y0+fYgMTasNQ7V++CBX5OT1as0g0f+OyubbFqhf6XVNIsmN4IIhEgGQ==}\n \n   '@types/prop-types@15.7.13':\n     resolution: {integrity: sha512-hCZTSvwbzWGvhqxp/RqVqwU999pBf2vp7hzIjiYOsl8wqOmUxkQ6ddw1cV3l8811+kdUFus/q4d1Y3E3SyEifA==}\n@@ -4405,7 +4405,7 @@ snapshots:\n \n   '@types/json5@0.0.29': {}\n \n-  '@types/node@22.10.0':\n+  '@types/node@22.10.1':\n     dependencies:\n       undici-types: 6.20.0\n ",
    "output": "chore(deps): update dependency @types/node to v22.10.1 (#738)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 7660bff..7339d85 100644\n--- a/package.json\n+++ b/package.json\n@@ -50,7 +50,7 @@\n     \"drizzle-orm\": \"^0.36.0\",\n     \"export-to-csv\": \"^1.4.0\",\n     \"geist\": \"^1.3.1\",\n-    \"lucide-react\": \"^0.461.0\",\n+    \"lucide-react\": \"^0.462.0\",\n     \"nanoid\": \"^5.0.7\",\n     \"next\": \"^15.0.0\",\n     \"next-themes\": \"^0.4.3\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 1f3ccec..dfbce4b 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -87,8 +87,8 @@ importers:\n         specifier: ^1.3.1\n         version: 1.3.1(next@15.0.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1))\n       lucide-react:\n-        specifier: ^0.461.0\n-        version: 0.461.0(react@18.3.1)\n+        specifier: ^0.462.0\n+        version: 0.462.0(react@18.3.1)\n       nanoid:\n         specifier: ^5.0.7\n         version: 5.0.9\n@@ -2543,8 +2543,8 @@ packages:\n     resolution: {integrity: sha512-CgeuL5uom6j/ZVrg7G/+1IXqRY8JXX4Hghfy5YE0EhoYQWvndP1kufu58cmZLNIDKnRhZrXfdS9urVWx98AipQ==}\n     engines: {node: 20 || >=22}\n \n-  lucide-react@0.461.0:\n-    resolution: {integrity: sha512-Scpw3D/dV1bgVRC5Kh774RCm99z0iZpPv75M6kg7QL1lLvkQ1rmI1Sjjic1aGp1ULBwd7FokV6ry0g+d6pMB+w==}\n+  lucide-react@0.462.0:\n+    resolution: {integrity: sha512-NTL7EbAao9IFtuSivSZgrAh4fZd09Lr+6MTkqIxuHaH2nnYiYIzXPo06cOxHg9wKLdj6LL8TByG4qpePqwgx/g==}\n     peerDependencies:\n       react: ^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0-rc\n \n@@ -5644,7 +5644,7 @@ snapshots:\n \n   lru-cache@11.0.1: {}\n \n-  lucide-react@0.461.0(react@18.3.1):\n+  lucide-react@0.462.0(react@18.3.1):\n     dependencies:\n       react: 18.3.1\n ",
    "output": "fix(deps): update dependency lucide-react to ^0.462.0 (#737)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 7377ab1..1f3ccec 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -91,7 +91,7 @@ importers:\n         version: 0.461.0(react@18.3.1)\n       nanoid:\n         specifier: ^5.0.7\n-        version: 5.0.8\n+        version: 5.0.9\n       next:\n         specifier: ^15.0.0\n         version: 15.0.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n@@ -2583,13 +2583,13 @@ packages:\n   mz@2.7.0:\n     resolution: {integrity: sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==}\n \n-  nanoid@3.3.7:\n-    resolution: {integrity: sha512-eSRppjcPIatRIMC1U6UngP8XFcz8MQWGQdt1MTBQ7NaAmvXDfvNxbvWV3x2y6CdEUciCSsDHDQZbhYaB8QEo2g==}\n+  nanoid@3.3.8:\n+    resolution: {integrity: sha512-WNLf5Sd8oZxOm+TzppcYk8gVOgP+l58xNy58D0nbUnOxOWRWvlcCV4kUF7ltmI6PsrLl/BgKEyS4mqsGChFN0w==}\n     engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1}\n     hasBin: true\n \n-  nanoid@5.0.8:\n-    resolution: {integrity: sha512-TcJPw+9RV9dibz1hHUzlLVy8N4X9TnwirAjrU08Juo6BNKggzVfP2ZJ/3ZUSq15Xl5i85i+Z89XBO90pB2PghQ==}\n+  nanoid@5.0.9:\n+    resolution: {integrity: sha512-Aooyr6MXU6HpvvWXKoVoXwKMs/KyVakWwg7xQfv5/S/RIgJMy0Ifa45H9qqYy7pTCszrHzP21Uk4PZq2HpEM8Q==}\n     engines: {node: ^18 || >=20}\n     hasBin: true\n \n@@ -5681,9 +5681,9 @@ snapshots:\n       object-assign: 4.1.1\n       thenify-all: 1.6.0\n \n-  nanoid@3.3.7: {}\n+  nanoid@3.3.8: {}\n \n-  nanoid@5.0.8: {}\n+  nanoid@5.0.9: {}\n \n   natural-compare@1.4.0: {}\n \n@@ -5895,13 +5895,13 @@ snapshots:\n \n   postcss@8.4.31:\n     dependencies:\n-      nanoid: 3.3.7\n+      nanoid: 3.3.8\n       picocolors: 1.1.1\n       source-map-js: 1.2.1\n \n   postcss@8.4.49:\n     dependencies:\n-      nanoid: 3.3.7\n+      nanoid: 3.3.8\n       picocolors: 1.1.1\n       source-map-js: 1.2.1\n ",
    "output": "fix(deps): update dependency nanoid to v5.0.9 (#736)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 62af7bc..7377ab1 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -140,7 +140,7 @@ importers:\n         version: 9.2.0\n       '@ianvs/prettier-plugin-sort-imports':\n         specifier: ^4.3.1\n-        version: 4.4.0(prettier@3.4.0)\n+        version: 4.4.0(prettier@3.4.1)\n       '@total-typescript/ts-reset':\n         specifier: ^0.6.1\n         version: 0.6.1\n@@ -191,10 +191,10 @@ importers:\n         version: 8.4.49\n       prettier:\n         specifier: ^3.3.3\n-        version: 3.4.0\n+        version: 3.4.1\n       prettier-plugin-tailwindcss:\n         specifier: ^0.6.8\n-        version: 0.6.9(@ianvs/prettier-plugin-sort-imports@4.4.0(prettier@3.4.0))(prettier@3.4.0)\n+        version: 0.6.9(@ianvs/prettier-plugin-sort-imports@4.4.0(prettier@3.4.1))(prettier@3.4.1)\n       rimraf:\n         specifier: ^6.0.1\n         version: 6.0.1\n@@ -2907,8 +2907,8 @@ packages:\n       prettier-plugin-svelte:\n         optional: true\n \n-  prettier@3.4.0:\n-    resolution: {integrity: sha512-/OXNZcLyWkfo13ofOW5M7SLh+k5pnIs07owXK2teFpnfaOEcycnSy7HQxldaVX1ZP/7Q8oO1eDuQJNwbomQq5Q==}\n+  prettier@3.4.1:\n+    resolution: {integrity: sha512-G+YdqtITVZmOJje6QkXQWzl3fSfMxFwm1tjTyo9exhkmWSqC4Yhd1+lug++IlR2mvRVAxEDDWYkQdeSztajqgg==}\n     engines: {node: '>=14'}\n     hasBin: true\n \n@@ -3750,13 +3750,13 @@ snapshots:\n \n   '@humanwhocodes/object-schema@2.0.3': {}\n \n-  '@ianvs/prettier-plugin-sort-imports@4.4.0(prettier@3.4.0)':\n+  '@ianvs/prettier-plugin-sort-imports@4.4.0(prettier@3.4.1)':\n     dependencies:\n       '@babel/generator': 7.26.2\n       '@babel/parser': 7.26.2\n       '@babel/traverse': 7.25.9\n       '@babel/types': 7.26.0\n-      prettier: 3.4.0\n+      prettier: 3.4.1\n       semver: 7.6.3\n     transitivePeerDependencies:\n       - supports-color\n@@ -5919,13 +5919,13 @@ snapshots:\n \n   prelude-ls@1.2.1: {}\n \n-  prettier-plugin-tailwindcss@0.6.9(@ianvs/prettier-plugin-sort-imports@4.4.0(prettier@3.4.0))(prettier@3.4.0):\n+  prettier-plugin-tailwindcss@0.6.9(@ianvs/prettier-plugin-sort-imports@4.4.0(prettier@3.4.1))(prettier@3.4.1):\n     dependencies:\n-      prettier: 3.4.0\n+      prettier: 3.4.1\n     optionalDependencies:\n-      '@ianvs/prettier-plugin-sort-imports': 4.4.0(prettier@3.4.0)\n+      '@ianvs/prettier-plugin-sort-imports': 4.4.0(prettier@3.4.1)\n \n-  prettier@3.4.0: {}\n+  prettier@3.4.1: {}\n \n   prop-types@15.8.1:\n     dependencies:",
    "output": "chore(deps): update dependency prettier to v3.4.1 (#735)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 286916f..62af7bc 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -67,7 +67,7 @@ importers:\n         version: 8.20.5(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       class-variance-authority:\n         specifier: ^0.7.0\n-        version: 0.7.0\n+        version: 0.7.1\n       clsx:\n         specifier: ^2.1.1\n         version: 2.1.1\n@@ -1716,16 +1716,12 @@ packages:\n     resolution: {integrity: sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==}\n     engines: {node: '>= 8.10.0'}\n \n-  class-variance-authority@0.7.0:\n-    resolution: {integrity: sha512-jFI8IQw4hczaL4ALINxqLEXQbWcNjoSkloa4IaufXCJr6QawJyw7tuRysRsrE8w2p/4gGaxKIt/hX3qz/IbD1A==}\n+  class-variance-authority@0.7.1:\n+    resolution: {integrity: sha512-Ka+9Trutv7G8M6WT6SeiRWz792K5qEqIGEGzXKhAE6xOWAY6pPH8U+9IY3oCMv6kqTmLsv7Xh/2w2RigkePMsg==}\n \n   client-only@0.0.1:\n     resolution: {integrity: sha512-IV3Ou0jSMzZrd3pZ48nLkT9DA7Ag1pnPzaiQhpW7c3RbcqqzvzzVu+L8gfqMp/8IM2MQtSiqaCxrrcfu8I8rMA==}\n \n-  clsx@2.0.0:\n-    resolution: {integrity: sha512-rQ1+kcj+ttHG0MKVGBUXwayCCF1oh39BF5COIpRzuCEv8Mwjv0XucrI2ExNTOn9IlLifGClWQcU9BrZORvtw6Q==}\n-    engines: {node: '>=6'}\n-\n   clsx@2.1.1:\n     resolution: {integrity: sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==}\n     engines: {node: '>=6'}\n@@ -4699,14 +4695,12 @@ snapshots:\n     optionalDependencies:\n       fsevents: 2.3.3\n \n-  class-variance-authority@0.7.0:\n+  class-variance-authority@0.7.1:\n     dependencies:\n-      clsx: 2.0.0\n+      clsx: 2.1.1\n \n   client-only@0.0.1: {}\n \n-  clsx@2.0.0: {}\n-\n   clsx@2.1.1: {}\n \n   cmdk@1.0.4(@types/react-dom@18.3.1)(@types/react@18.3.12)(react-dom@18.3.1(react@18.3.1))(react@18.3.1):",
    "output": "fix(deps): update dependency class-variance-authority to v0.7.1 (#734)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex fce9b06..286916f 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -140,7 +140,7 @@ importers:\n         version: 9.2.0\n       '@ianvs/prettier-plugin-sort-imports':\n         specifier: ^4.3.1\n-        version: 4.4.0(prettier@3.3.3)\n+        version: 4.4.0(prettier@3.4.0)\n       '@total-typescript/ts-reset':\n         specifier: ^0.6.1\n         version: 0.6.1\n@@ -191,10 +191,10 @@ importers:\n         version: 8.4.49\n       prettier:\n         specifier: ^3.3.3\n-        version: 3.3.3\n+        version: 3.4.0\n       prettier-plugin-tailwindcss:\n         specifier: ^0.6.8\n-        version: 0.6.9(@ianvs/prettier-plugin-sort-imports@4.4.0(prettier@3.3.3))(prettier@3.3.3)\n+        version: 0.6.9(@ianvs/prettier-plugin-sort-imports@4.4.0(prettier@3.4.0))(prettier@3.4.0)\n       rimraf:\n         specifier: ^6.0.1\n         version: 6.0.1\n@@ -2911,8 +2911,8 @@ packages:\n       prettier-plugin-svelte:\n         optional: true\n \n-  prettier@3.3.3:\n-    resolution: {integrity: sha512-i2tDNA0O5IrMO757lfrdQZCc2jPNDVntV0m/+4whiDfWaTKfMNgR7Qz0NAeGz/nRqF4m5/6CLzbP4/liHt12Ew==}\n+  prettier@3.4.0:\n+    resolution: {integrity: sha512-/OXNZcLyWkfo13ofOW5M7SLh+k5pnIs07owXK2teFpnfaOEcycnSy7HQxldaVX1ZP/7Q8oO1eDuQJNwbomQq5Q==}\n     engines: {node: '>=14'}\n     hasBin: true\n \n@@ -3754,13 +3754,13 @@ snapshots:\n \n   '@humanwhocodes/object-schema@2.0.3': {}\n \n-  '@ianvs/prettier-plugin-sort-imports@4.4.0(prettier@3.3.3)':\n+  '@ianvs/prettier-plugin-sort-imports@4.4.0(prettier@3.4.0)':\n     dependencies:\n       '@babel/generator': 7.26.2\n       '@babel/parser': 7.26.2\n       '@babel/traverse': 7.25.9\n       '@babel/types': 7.26.0\n-      prettier: 3.3.3\n+      prettier: 3.4.0\n       semver: 7.6.3\n     transitivePeerDependencies:\n       - supports-color\n@@ -5925,13 +5925,13 @@ snapshots:\n \n   prelude-ls@1.2.1: {}\n \n-  prettier-plugin-tailwindcss@0.6.9(@ianvs/prettier-plugin-sort-imports@4.4.0(prettier@3.3.3))(prettier@3.3.3):\n+  prettier-plugin-tailwindcss@0.6.9(@ianvs/prettier-plugin-sort-imports@4.4.0(prettier@3.4.0))(prettier@3.4.0):\n     dependencies:\n-      prettier: 3.3.3\n+      prettier: 3.4.0\n     optionalDependencies:\n-      '@ianvs/prettier-plugin-sort-imports': 4.4.0(prettier@3.3.3)\n+      '@ianvs/prettier-plugin-sort-imports': 4.4.0(prettier@3.4.0)\n \n-  prettier@3.3.3: {}\n+  prettier@3.4.0: {}\n \n   prop-types@15.8.1:\n     dependencies:",
    "output": "chore(deps): update dependency prettier to v3.4.0 (#733)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 649918f..fce9b06 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -149,7 +149,7 @@ importers:\n         version: 8.56.12\n       '@types/node':\n         specifier: ^22.7.8\n-        version: 22.9.4\n+        version: 22.10.0\n       '@types/react':\n         specifier: ^18.3.11\n         version: 18.3.12\n@@ -1477,8 +1477,8 @@ packages:\n   '@types/json5@0.0.29':\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n \n-  '@types/node@22.9.4':\n-    resolution: {integrity: sha512-d9RWfoR7JC/87vj7n+PVTzGg9hDyuFjir3RxUHbjFSKNd9mpxbxwMEyaCim/ddCmy4IuW7HjTzF3g9p3EtWEOg==}\n+  '@types/node@22.10.0':\n+    resolution: {integrity: sha512-XC70cRZVElFHfIUB40FgZOBbgJYFKKMa5nb9lxcwYstFG/Mi+/Y0bGS+rs6Dmhmkpq4pnNiLiuZAbc02YCOnmA==}\n \n   '@types/prop-types@15.7.13':\n     resolution: {integrity: sha512-hCZTSvwbzWGvhqxp/RqVqwU999pBf2vp7hzIjiYOsl8wqOmUxkQ6ddw1cV3l8811+kdUFus/q4d1Y3E3SyEifA==}\n@@ -3287,8 +3287,8 @@ packages:\n   unbox-primitive@1.0.2:\n     resolution: {integrity: sha512-61pPlCD9h51VoreyJ0BReideM3MDKMKnh6+V9L08331ipq6Q8OFXZYiqP6n/tbHx4s5I9uRhcye6BrbkizkBDw==}\n \n-  undici-types@6.19.8:\n-    resolution: {integrity: sha512-ve2KP6f/JnbPBFyobGHuerC9g1FYGn/F8n1LWTwNxCEzd6IfqTwUQcNXgEtmmQ6DlRrC1hrSrBnCZPokRrDHjw==}\n+  undici-types@6.20.0:\n+    resolution: {integrity: sha512-Ny6QZ2Nju20vw1SRHe3d9jVu6gJ+4e3+MMpqu7pqE5HT6WsTSlce++GQmK5UXS8mzV8DSYHrQH+Xrf2jVcuKNg==}\n \n   update-browserslist-db@1.1.1:\n     resolution: {integrity: sha512-R8UzCaa9Az+38REPiJ1tXlImTJXlVfgHZsglwBD/k6nj76ctsH1E3q4doGrukiLQd3sGQYu56r5+lo5r94l29A==}\n@@ -4409,9 +4409,9 @@ snapshots:\n \n   '@types/json5@0.0.29': {}\n \n-  '@types/node@22.9.4':\n+  '@types/node@22.10.0':\n     dependencies:\n-      undici-types: 6.19.8\n+      undici-types: 6.20.0\n \n   '@types/prop-types@15.7.13': {}\n \n@@ -6385,7 +6385,7 @@ snapshots:\n       has-symbols: 1.0.3\n       which-boxed-primitive: 1.0.2\n \n-  undici-types@6.19.8: {}\n+  undici-types@6.20.0: {}\n \n   update-browserslist-db@1.1.1(browserslist@4.24.2):\n     dependencies:",
    "output": "chore(deps): update dependency @types/node to v22.10.0 (#732)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 73c9324..7660bff 100644\n--- a/package.json\n+++ b/package.json\n@@ -50,7 +50,7 @@\n     \"drizzle-orm\": \"^0.36.0\",\n     \"export-to-csv\": \"^1.4.0\",\n     \"geist\": \"^1.3.1\",\n-    \"lucide-react\": \"^0.460.0\",\n+    \"lucide-react\": \"^0.461.0\",\n     \"nanoid\": \"^5.0.7\",\n     \"next\": \"^15.0.0\",\n     \"next-themes\": \"^0.4.3\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex e44d4b7..649918f 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -87,8 +87,8 @@ importers:\n         specifier: ^1.3.1\n         version: 1.3.1(next@15.0.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1))\n       lucide-react:\n-        specifier: ^0.460.0\n-        version: 0.460.0(react@18.3.1)\n+        specifier: ^0.461.0\n+        version: 0.461.0(react@18.3.1)\n       nanoid:\n         specifier: ^5.0.7\n         version: 5.0.8\n@@ -2547,8 +2547,8 @@ packages:\n     resolution: {integrity: sha512-CgeuL5uom6j/ZVrg7G/+1IXqRY8JXX4Hghfy5YE0EhoYQWvndP1kufu58cmZLNIDKnRhZrXfdS9urVWx98AipQ==}\n     engines: {node: 20 || >=22}\n \n-  lucide-react@0.460.0:\n-    resolution: {integrity: sha512-BVtq/DykVeIvRTJvRAgCsOwaGL8Un3Bxh8MbDxMhEWlZay3T4IpEKDEpwt5KZ0KJMHzgm6jrltxlT5eXOWXDHg==}\n+  lucide-react@0.461.0:\n+    resolution: {integrity: sha512-Scpw3D/dV1bgVRC5Kh774RCm99z0iZpPv75M6kg7QL1lLvkQ1rmI1Sjjic1aGp1ULBwd7FokV6ry0g+d6pMB+w==}\n     peerDependencies:\n       react: ^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0-rc\n \n@@ -5650,7 +5650,7 @@ snapshots:\n \n   lru-cache@11.0.1: {}\n \n-  lucide-react@0.460.0(react@18.3.1):\n+  lucide-react@0.461.0(react@18.3.1):\n     dependencies:\n       react: 18.3.1\n ",
    "output": "fix(deps): update dependency lucide-react to ^0.461.0 (#731)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex bd14eb0..e44d4b7 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -149,7 +149,7 @@ importers:\n         version: 8.56.12\n       '@types/node':\n         specifier: ^22.7.8\n-        version: 22.9.3\n+        version: 22.9.4\n       '@types/react':\n         specifier: ^18.3.11\n         version: 18.3.12\n@@ -1477,8 +1477,8 @@ packages:\n   '@types/json5@0.0.29':\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n \n-  '@types/node@22.9.3':\n-    resolution: {integrity: sha512-F3u1fs/fce3FFk+DAxbxc78DF8x0cY09RRL8GnXLmkJ1jvx3TtPdWoTT5/NiYfI5ASqXBmfqJi9dZ3gxMx4lzw==}\n+  '@types/node@22.9.4':\n+    resolution: {integrity: sha512-d9RWfoR7JC/87vj7n+PVTzGg9hDyuFjir3RxUHbjFSKNd9mpxbxwMEyaCim/ddCmy4IuW7HjTzF3g9p3EtWEOg==}\n \n   '@types/prop-types@15.7.13':\n     resolution: {integrity: sha512-hCZTSvwbzWGvhqxp/RqVqwU999pBf2vp7hzIjiYOsl8wqOmUxkQ6ddw1cV3l8811+kdUFus/q4d1Y3E3SyEifA==}\n@@ -4409,7 +4409,7 @@ snapshots:\n \n   '@types/json5@0.0.29': {}\n \n-  '@types/node@22.9.3':\n+  '@types/node@22.9.4':\n     dependencies:\n       undici-types: 6.19.8\n ",
    "output": "chore(deps): update dependency @types/node to v22.9.4 (#730)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 6c7f149..3a5a27f 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -124,7 +124,7 @@ importers:\n         version: 1.7.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       tailwind-merge:\n         specifier: ^2.5.4\n-        version: 2.5.4\n+        version: 2.5.5\n       tailwindcss-animate:\n         specifier: ^1.0.7\n         version: 1.0.7(tailwindcss@3.4.15)\n@@ -3198,8 +3198,8 @@ packages:\n     resolution: {integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==}\n     engines: {node: '>= 0.4'}\n \n-  tailwind-merge@2.5.4:\n-    resolution: {integrity: sha512-0q8cfZHMu9nuYP/b5Shb7Y7Sh1B7Nnl5GqNr1U+n2p6+mybvRtayrQ+0042Z5byvTA8ihjlP8Odo8/VnHbZu4Q==}\n+  tailwind-merge@2.5.5:\n+    resolution: {integrity: sha512-0LXunzzAZzo0tEPxV3I297ffKZPlKDrjj7NXphC8V5ak9yHC5zRmxnOe2m/Rd/7ivsOMJe3JZ2JVocoDdQTRBA==}\n \n   tailwindcss-animate@1.0.7:\n     resolution: {integrity: sha512-bl6mpH3T7I3UFxuvDEXLxy/VuFxBk5bbzplh7tXI68mwMokNYd1t9qPBHlnyTwfa4JGC4zP516I1hYYtQ/vspA==}\n@@ -6262,7 +6262,7 @@ snapshots:\n \n   supports-preserve-symlinks-flag@1.0.0: {}\n \n-  tailwind-merge@2.5.4: {}\n+  tailwind-merge@2.5.5: {}\n \n   tailwindcss-animate@1.0.7(tailwindcss@3.4.15):\n     dependencies:",
    "output": "fix(deps): update dependency tailwind-merge to v2.5.5 (#728)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 47a9490..73c9324 100644\n--- a/package.json\n+++ b/package.json\n@@ -25,8 +25,8 @@\n   },\n   \"dependencies\": {\n     \"@dnd-kit/core\": \"^6.1.0\",\n-    \"@dnd-kit/modifiers\": \"^7.0.0\",\n-    \"@dnd-kit/sortable\": \"^8.0.0\",\n+    \"@dnd-kit/modifiers\": \"^8.0.0\",\n+    \"@dnd-kit/sortable\": \"^9.0.0\",\n     \"@dnd-kit/utilities\": \"^3.2.2\",\n     \"@hookform/resolvers\": \"^3.9.0\",\n     \"@radix-ui/react-checkbox\": \"^1.1.2\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 0ba8169..6c7f149 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -12,11 +12,11 @@ importers:\n         specifier: ^6.1.0\n         version: 6.2.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       '@dnd-kit/modifiers':\n-        specifier: ^7.0.0\n-        version: 7.0.0(@dnd-kit/core@6.2.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n-      '@dnd-kit/sortable':\n         specifier: ^8.0.0\n         version: 8.0.0(@dnd-kit/core@6.2.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n+      '@dnd-kit/sortable':\n+        specifier: ^9.0.0\n+        version: 9.0.0(@dnd-kit/core@6.2.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n       '@dnd-kit/utilities':\n         specifier: ^3.2.2\n         version: 3.2.2(react@18.3.1)\n@@ -258,16 +258,16 @@ packages:\n       react: '>=16.8.0'\n       react-dom: '>=16.8.0'\n \n-  '@dnd-kit/modifiers@7.0.0':\n-    resolution: {integrity: sha512-BG/ETy3eBjFap7+zIti53f0PCLGDzNXyTmn6fSdrudORf+OH04MxrW4p5+mPu4mgMk9kM41iYONjc3DOUWTcfg==}\n+  '@dnd-kit/modifiers@8.0.0':\n+    resolution: {integrity: sha512-oPZ0JoKtVSK9hVHSBDKG1oCLgnZbpxuH/SMnyDtXkNhn9+SF1+98DlWILFYxIT8faOS/GgfhlNFREmym6oqrEg==}\n     peerDependencies:\n-      '@dnd-kit/core': ^6.1.0\n+      '@dnd-kit/core': ^6.2.0\n       react: '>=16.8.0'\n \n-  '@dnd-kit/sortable@8.0.0':\n-    resolution: {integrity: sha512-U3jk5ebVXe1Lr7c2wU7SBZjcWdQP+j7peHJfCspnA81enlu88Mgd7CC8Q+pub9ubP7eKVETzJW+IBAhsqbSu/g==}\n+  '@dnd-kit/sortable@9.0.0':\n+    resolution: {integrity: sha512-3/9r8Mmba0nKTbo8kPnVSFZKf/VSy94nXZ3aUwzPEh78j/LooQ/EFKRZENak4PHKBkN53mgTF/z+Sd8H+FcAnQ==}\n     peerDependencies:\n-      '@dnd-kit/core': ^6.1.0\n+      '@dnd-kit/core': ^6.2.0\n       react: '>=16.8.0'\n \n   '@dnd-kit/utilities@3.2.2':\n@@ -3446,19 +3446,19 @@ snapshots:\n       react-dom: 18.3.1(react@18.3.1)\n       tslib: 2.8.1\n \n-  '@dnd-kit/modifiers@7.0.0(@dnd-kit/core@6.2.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)':\n+  '@dnd-kit/modifiers@8.0.0(@dnd-kit/core@6.2.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)':\n     dependencies:\n       '@dnd-kit/core': 6.2.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       '@dnd-kit/utilities': 3.2.2(react@18.3.1)\n       react: 18.3.1\n-      tslib: 2.8.0\n+      tslib: 2.8.1\n \n-  '@dnd-kit/sortable@8.0.0(@dnd-kit/core@6.2.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)':\n+  '@dnd-kit/sortable@9.0.0(@dnd-kit/core@6.2.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)':\n     dependencies:\n       '@dnd-kit/core': 6.2.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       '@dnd-kit/utilities': 3.2.2(react@18.3.1)\n       react: 18.3.1\n-      tslib: 2.8.0\n+      tslib: 2.8.1\n \n   '@dnd-kit/utilities@3.2.2(react@18.3.1)':\n     dependencies:",
    "output": "fix(deps): update dnd-kit monorepo (#727)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 1792e6e..a9bd736 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -100,7 +100,7 @@ importers:\n         version: 0.4.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       nuqs:\n         specifier: ^2.0.0\n-        version: 2.2.2(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.7.2))(next@15.0.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n+        version: 2.2.3(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.7.2))(next@15.0.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n       postgres:\n         specifier: ^3.4.4\n         version: 3.4.5\n@@ -2638,8 +2638,8 @@ packages:\n     resolution: {integrity: sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==}\n     engines: {node: '>=0.10.0'}\n \n-  nuqs@2.2.2:\n-    resolution: {integrity: sha512-h7xI5nzLgeP/9nn1eAgRiXYRtT2HKPoIKZ541kEzkzz20grM4geb5S4OAKh84IAfHyIKlSeTo93FUhjhE7/6gA==}\n+  nuqs@2.2.3:\n+    resolution: {integrity: sha512-nMCcUW06KSqEXA0xp+LiRqDpIE59BVYbjZLe0HUisJAlswfihHYSsAjYTzV0lcE1thfh8uh+LqUHGdQ8qq8rfA==}\n     peerDependencies:\n       '@remix-run/react': '>=2'\n       next: '>=14.2.0'\n@@ -5729,7 +5729,7 @@ snapshots:\n \n   normalize-range@0.1.2: {}\n \n-  nuqs@2.2.2(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.7.2))(next@15.0.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1):\n+  nuqs@2.2.3(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.7.2))(next@15.0.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1):\n     dependencies:\n       mitt: 3.0.1\n       react: 18.3.1",
    "output": "fix(deps): update dependency nuqs to v2.2.3 (#725)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 6b6da61..1792e6e 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -149,7 +149,7 @@ importers:\n         version: 8.56.12\n       '@types/node':\n         specifier: ^22.7.8\n-        version: 22.9.2\n+        version: 22.9.3\n       '@types/react':\n         specifier: ^18.3.11\n         version: 18.3.12\n@@ -1477,8 +1477,8 @@ packages:\n   '@types/json5@0.0.29':\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n \n-  '@types/node@22.9.2':\n-    resolution: {integrity: sha512-wwuxAVEbsRvDD9x7buvAl7DyQ7Oj+va/d/Veug7higYzp9MF0CINbfWTBgDFMpcVwcdUiYuNmX2KfnvY3N70mw==}\n+  '@types/node@22.9.3':\n+    resolution: {integrity: sha512-F3u1fs/fce3FFk+DAxbxc78DF8x0cY09RRL8GnXLmkJ1jvx3TtPdWoTT5/NiYfI5ASqXBmfqJi9dZ3gxMx4lzw==}\n \n   '@types/prop-types@15.7.13':\n     resolution: {integrity: sha512-hCZTSvwbzWGvhqxp/RqVqwU999pBf2vp7hzIjiYOsl8wqOmUxkQ6ddw1cV3l8811+kdUFus/q4d1Y3E3SyEifA==}\n@@ -4409,7 +4409,7 @@ snapshots:\n \n   '@types/json5@0.0.29': {}\n \n-  '@types/node@22.9.2':\n+  '@types/node@22.9.3':\n     dependencies:\n       undici-types: 6.19.8\n ",
    "output": "chore(deps): update dependency @types/node to v22.9.3 (#724)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 6a74595..6b6da61 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -149,7 +149,7 @@ importers:\n         version: 8.56.12\n       '@types/node':\n         specifier: ^22.7.8\n-        version: 22.9.1\n+        version: 22.9.2\n       '@types/react':\n         specifier: ^18.3.11\n         version: 18.3.12\n@@ -1477,8 +1477,8 @@ packages:\n   '@types/json5@0.0.29':\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n \n-  '@types/node@22.9.1':\n-    resolution: {integrity: sha512-p8Yy/8sw1caA8CdRIQBG5tiLHmxtQKObCijiAa9Ez+d4+PRffM4054xbju0msf+cvhJpnFEeNjxmVT/0ipktrg==}\n+  '@types/node@22.9.2':\n+    resolution: {integrity: sha512-wwuxAVEbsRvDD9x7buvAl7DyQ7Oj+va/d/Veug7higYzp9MF0CINbfWTBgDFMpcVwcdUiYuNmX2KfnvY3N70mw==}\n \n   '@types/prop-types@15.7.13':\n     resolution: {integrity: sha512-hCZTSvwbzWGvhqxp/RqVqwU999pBf2vp7hzIjiYOsl8wqOmUxkQ6ddw1cV3l8811+kdUFus/q4d1Y3E3SyEifA==}\n@@ -4409,7 +4409,7 @@ snapshots:\n \n   '@types/json5@0.0.29': {}\n \n-  '@types/node@22.9.1':\n+  '@types/node@22.9.2':\n     dependencies:\n       undici-types: 6.19.8\n ",
    "output": "chore(deps): update dependency @types/node to v22.9.2 (#723)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex aa1c061..281e990 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -79,7 +79,7 @@ importers:\n         version: 4.1.0\n       drizzle-orm:\n         specifier: ^0.36.0\n-        version: 0.36.3(@libsql/client-wasm@0.14.0)(@types/react@18.3.12)(pg@8.13.1)(postgres@3.4.5)(react@18.3.1)\n+        version: 0.36.4(@libsql/client-wasm@0.14.0)(@types/react@18.3.12)(pg@8.13.1)(postgres@3.4.5)(react@18.3.1)\n       export-to-csv:\n         specifier: ^1.4.0\n         version: 1.4.0\n@@ -1860,15 +1860,15 @@ packages:\n     resolution: {integrity: sha512-JimOV+ystXTWMgZkLHYHf2w3oS28hxiH1FR0dkmJLc7GHzdGJoJAQtQS5DRppnabsRZwE2U1F6CuezVBgmsBBQ==}\n     hasBin: true\n \n-  drizzle-orm@0.36.3:\n-    resolution: {integrity: sha512-ffQB7CcyCTvQBK6xtRLMl/Jsd5xFTBs+UTHrgs1hbk68i5TPkbsoCPbKEwiEsQZfq2I7VH632XJpV1g7LS2H9Q==}\n+  drizzle-orm@0.36.4:\n+    resolution: {integrity: sha512-1OZY3PXD7BR00Gl61UUOFihslDldfH4NFRH2MbP54Yxi0G/PKn4HfO65JYZ7c16DeP3SpM3Aw+VXVG9j6CRSXA==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=3'\n       '@electric-sql/pglite': '>=0.2.0'\n       '@libsql/client': '>=0.10.0'\n       '@libsql/client-wasm': '>=0.10.0'\n-      '@neondatabase/serverless': '>=0.1'\n+      '@neondatabase/serverless': '>=0.10.0'\n       '@op-engineering/op-sqlite': '>=2'\n       '@opentelemetry/api': ^1.4.1\n       '@planetscale/database': '>=1'\n@@ -4843,7 +4843,7 @@ snapshots:\n     transitivePeerDependencies:\n       - supports-color\n \n-  drizzle-orm@0.36.3(@libsql/client-wasm@0.14.0)(@types/react@18.3.12)(pg@8.13.1)(postgres@3.4.5)(react@18.3.1):\n+  drizzle-orm@0.36.4(@libsql/client-wasm@0.14.0)(@types/react@18.3.12)(pg@8.13.1)(postgres@3.4.5)(react@18.3.1):\n     optionalDependencies:\n       '@libsql/client-wasm': 0.14.0\n       '@types/react': 18.3.12",
    "output": "fix(deps): update dependency drizzle-orm to v0.36.4 (#721)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex f3dd23b..aa1c061 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -167,7 +167,7 @@ importers:\n         version: 10.4.20(postcss@8.4.49)\n       dotenv-cli:\n         specifier: ^7.4.2\n-        version: 7.4.3\n+        version: 7.4.4\n       drizzle-kit:\n         specifier: ^0.28.0\n         version: 0.28.1\n@@ -1844,8 +1844,8 @@ packages:\n     resolution: {integrity: sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==}\n     engines: {node: '>=6.0.0'}\n \n-  dotenv-cli@7.4.3:\n-    resolution: {integrity: sha512-lf1E+TL1xFeoOHy2hSO3kLkx3KX8CDi17ccn5z5dVCnk2PuWqUKAnBVgQmhfS0BPuzFbptTEHVcIKFsGF0NAcg==}\n+  dotenv-cli@7.4.4:\n+    resolution: {integrity: sha512-XkBYCG0tPIes+YZr4SpfFv76SQrV/LeCE8CI7JSEMi3VR9MvTihCGTOtbIexD6i2mXF+6px7trb1imVCXSNMDw==}\n     hasBin: true\n \n   dotenv-expand@10.0.0:\n@@ -4823,7 +4823,7 @@ snapshots:\n     dependencies:\n       esutils: 2.0.3\n \n-  dotenv-cli@7.4.3:\n+  dotenv-cli@7.4.4:\n     dependencies:\n       cross-spawn: 7.0.6\n       dotenv: 16.4.5",
    "output": "chore(deps): update dependency dotenv-cli to v7.4.4 (#720)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/tsconfig.json b/tsconfig.json\nindex df575aa..c5eef6e 100644\n--- a/tsconfig.json\n+++ b/tsconfig.json\n@@ -26,8 +26,7 @@\n     /* Path Aliases */\n     \"baseUrl\": \".\",\n     \"paths\": {\n-      \"@/*\": [\"./src/*\"],\n-      \"contentlayer/generated\": [\"./.contentlayer/generated\"]\n+      \"@/*\": [\"./src/*\"]\n     }\n   },\n   \"include\": [",
    "output": "chore: revert (#719)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 760bc92..f3dd23b 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -100,7 +100,7 @@ importers:\n         version: 0.4.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       nuqs:\n         specifier: ^2.0.0\n-        version: 2.2.1(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n+        version: 2.2.2(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n       postgres:\n         specifier: ^3.4.4\n         version: 3.4.5\n@@ -2638,8 +2638,8 @@ packages:\n     resolution: {integrity: sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==}\n     engines: {node: '>=0.10.0'}\n \n-  nuqs@2.2.1:\n-    resolution: {integrity: sha512-P0swZtg6k9LRXzlT9gQAFtQg25Edan2Evt5vwyGvh00Z+rHH19gb2ZajU/E/SfhwE858aM/jb+wJziWbbwSlcg==}\n+  nuqs@2.2.2:\n+    resolution: {integrity: sha512-h7xI5nzLgeP/9nn1eAgRiXYRtT2HKPoIKZ541kEzkzz20grM4geb5S4OAKh84IAfHyIKlSeTo93FUhjhE7/6gA==}\n     peerDependencies:\n       '@remix-run/react': '>=2'\n       next: '>=14.2.0'\n@@ -5729,7 +5729,7 @@ snapshots:\n \n   normalize-range@0.1.2: {}\n \n-  nuqs@2.2.1(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1):\n+  nuqs@2.2.2(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1):\n     dependencies:\n       mitt: 3.0.1\n       react: 18.3.1",
    "output": "fix(deps): update dependency nuqs to v2.2.2 (#718)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex a23148f..47a9490 100644\n--- a/package.json\n+++ b/package.json\n@@ -96,5 +96,5 @@\n   \"ct3aMetadata\": {\n     \"initVersion\": \"7.23.1\"\n   },\n-  \"packageManager\": \"pnpm@9.14.1\"\n+  \"packageManager\": \"pnpm@9.14.2\"\n }",
    "output": "chore(deps): update pnpm to v9.14.2 (#717)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 92a4e6e..a23148f 100644\n--- a/package.json\n+++ b/package.json\n@@ -96,5 +96,5 @@\n   \"ct3aMetadata\": {\n     \"initVersion\": \"7.23.1\"\n   },\n-  \"packageManager\": \"pnpm@9.13.2\"\n+  \"packageManager\": \"pnpm@9.14.1\"\n }",
    "output": "chore(deps): update pnpm to v9.14.1 (#716)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 833e053..760bc92 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -149,7 +149,7 @@ importers:\n         version: 8.56.12\n       '@types/node':\n         specifier: ^22.7.8\n-        version: 22.9.0\n+        version: 22.9.1\n       '@types/react':\n         specifier: ^18.3.11\n         version: 18.3.12\n@@ -1477,8 +1477,8 @@ packages:\n   '@types/json5@0.0.29':\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n \n-  '@types/node@22.9.0':\n-    resolution: {integrity: sha512-vuyHg81vvWA1Z1ELfvLko2c8f34gyA0zaic0+Rllc5lbCnbSyuvb2Oxpm6TAUAC/2xZN3QGqxBNggD1nNR2AfQ==}\n+  '@types/node@22.9.1':\n+    resolution: {integrity: sha512-p8Yy/8sw1caA8CdRIQBG5tiLHmxtQKObCijiAa9Ez+d4+PRffM4054xbju0msf+cvhJpnFEeNjxmVT/0ipktrg==}\n \n   '@types/prop-types@15.7.13':\n     resolution: {integrity: sha512-hCZTSvwbzWGvhqxp/RqVqwU999pBf2vp7hzIjiYOsl8wqOmUxkQ6ddw1cV3l8811+kdUFus/q4d1Y3E3SyEifA==}\n@@ -4409,7 +4409,7 @@ snapshots:\n \n   '@types/json5@0.0.29': {}\n \n-  '@types/node@22.9.0':\n+  '@types/node@22.9.1':\n     dependencies:\n       undici-types: 6.19.8\n ",
    "output": "chore(deps): update dependency @types/node to v22.9.1 (#715)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 2332246..833e053 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -194,7 +194,7 @@ importers:\n         version: 3.3.3\n       prettier-plugin-tailwindcss:\n         specifier: ^0.6.8\n-        version: 0.6.8(@ianvs/prettier-plugin-sort-imports@4.4.0(prettier@3.3.3))(prettier@3.3.3)\n+        version: 0.6.9(@ianvs/prettier-plugin-sort-imports@4.4.0(prettier@3.3.3))(prettier@3.3.3)\n       rimraf:\n         specifier: ^6.0.1\n         version: 6.0.1\n@@ -2856,8 +2856,8 @@ packages:\n     resolution: {integrity: sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==}\n     engines: {node: '>= 0.8.0'}\n \n-  prettier-plugin-tailwindcss@0.6.8:\n-    resolution: {integrity: sha512-dGu3kdm7SXPkiW4nzeWKCl3uoImdd5CTZEJGxyypEPL37Wj0HT2pLqjrvSei1nTeuQfO4PUfjeW5cTUNRLZ4sA==}\n+  prettier-plugin-tailwindcss@0.6.9:\n+    resolution: {integrity: sha512-r0i3uhaZAXYP0At5xGfJH876W3HHGHDp+LCRUJrs57PBeQ6mYHMwr25KH8NPX44F2yGTvdnH7OqCshlQx183Eg==}\n     engines: {node: '>=14.21.3'}\n     peerDependencies:\n       '@ianvs/prettier-plugin-sort-imports': '*'\n@@ -5925,7 +5925,7 @@ snapshots:\n \n   prelude-ls@1.2.1: {}\n \n-  prettier-plugin-tailwindcss@0.6.8(@ianvs/prettier-plugin-sort-imports@4.4.0(prettier@3.3.3))(prettier@3.3.3):\n+  prettier-plugin-tailwindcss@0.6.9(@ianvs/prettier-plugin-sort-imports@4.4.0(prettier@3.3.3))(prettier@3.3.3):\n     dependencies:\n       prettier: 3.3.3\n     optionalDependencies:",
    "output": "chore(deps): update dependency prettier-plugin-tailwindcss to v0.6.9 (#714)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 939b732..2332246 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -167,7 +167,7 @@ importers:\n         version: 10.4.20(postcss@8.4.49)\n       dotenv-cli:\n         specifier: ^7.4.2\n-        version: 7.4.2\n+        version: 7.4.3\n       drizzle-kit:\n         specifier: ^0.28.0\n         version: 0.28.1\n@@ -1765,6 +1765,10 @@ packages:\n     resolution: {integrity: sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==}\n     engines: {node: '>= 8'}\n \n+  cross-spawn@7.0.6:\n+    resolution: {integrity: sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==}\n+    engines: {node: '>= 8'}\n+\n   cssesc@3.0.0:\n     resolution: {integrity: sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==}\n     engines: {node: '>=4'}\n@@ -1840,8 +1844,8 @@ packages:\n     resolution: {integrity: sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==}\n     engines: {node: '>=6.0.0'}\n \n-  dotenv-cli@7.4.2:\n-    resolution: {integrity: sha512-SbUj8l61zIbzyhIbg0FwPJq6+wjbzdn9oEtozQpZ6kW2ihCcapKVZj49oCT3oPM+mgQm+itgvUQcG5szxVrZTA==}\n+  dotenv-cli@7.4.3:\n+    resolution: {integrity: sha512-lf1E+TL1xFeoOHy2hSO3kLkx3KX8CDi17ccn5z5dVCnk2PuWqUKAnBVgQmhfS0BPuzFbptTEHVcIKFsGF0NAcg==}\n     hasBin: true\n \n   dotenv-expand@10.0.0:\n@@ -4748,6 +4752,12 @@ snapshots:\n       shebang-command: 2.0.0\n       which: 2.0.2\n \n+  cross-spawn@7.0.6:\n+    dependencies:\n+      path-key: 3.1.1\n+      shebang-command: 2.0.0\n+      which: 2.0.2\n+\n   cssesc@3.0.0: {}\n \n   csstype@3.1.3: {}\n@@ -4813,9 +4823,9 @@ snapshots:\n     dependencies:\n       esutils: 2.0.3\n \n-  dotenv-cli@7.4.2:\n+  dotenv-cli@7.4.3:\n     dependencies:\n-      cross-spawn: 7.0.3\n+      cross-spawn: 7.0.6\n       dotenv: 16.4.5\n       dotenv-expand: 10.0.0\n       minimist: 1.2.8\n@@ -5303,7 +5313,7 @@ snapshots:\n \n   foreground-child@3.3.0:\n     dependencies:\n-      cross-spawn: 7.0.3\n+      cross-spawn: 7.0.6\n       signal-exit: 4.1.0\n \n   fraction.js@4.3.7: {}",
    "output": "chore(deps): update dependency dotenv-cli to v7.4.3 (#713)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex d4911ff..92a4e6e 100644\n--- a/package.json\n+++ b/package.json\n@@ -50,7 +50,7 @@\n     \"drizzle-orm\": \"^0.36.0\",\n     \"export-to-csv\": \"^1.4.0\",\n     \"geist\": \"^1.3.1\",\n-    \"lucide-react\": \"^0.456.0\",\n+    \"lucide-react\": \"^0.460.0\",\n     \"nanoid\": \"^5.0.7\",\n     \"next\": \"^15.0.0\",\n     \"next-themes\": \"^0.4.3\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex b04b4c8..043937b 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -87,8 +87,8 @@ importers:\n         specifier: ^1.3.1\n         version: 1.3.1(next@15.0.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1))\n       lucide-react:\n-        specifier: ^0.456.0\n-        version: 0.456.0(react@18.3.1)\n+        specifier: ^0.460.0\n+        version: 0.460.0(react@18.3.1)\n       nanoid:\n         specifier: ^5.0.7\n         version: 5.0.8\n@@ -2534,8 +2534,8 @@ packages:\n     resolution: {integrity: sha512-CgeuL5uom6j/ZVrg7G/+1IXqRY8JXX4Hghfy5YE0EhoYQWvndP1kufu58cmZLNIDKnRhZrXfdS9urVWx98AipQ==}\n     engines: {node: 20 || >=22}\n \n-  lucide-react@0.456.0:\n-    resolution: {integrity: sha512-DIIGJqTT5X05sbAsQ+OhA8OtJYyD4NsEMCA/HQW/Y6ToPQ7gwbtujIoeAaup4HpHzV35SQOarKAWH8LYglB6eA==}\n+  lucide-react@0.460.0:\n+    resolution: {integrity: sha512-BVtq/DykVeIvRTJvRAgCsOwaGL8Un3Bxh8MbDxMhEWlZay3T4IpEKDEpwt5KZ0KJMHzgm6jrltxlT5eXOWXDHg==}\n     peerDependencies:\n       react: ^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0-rc\n \n@@ -5628,7 +5628,7 @@ snapshots:\n \n   lru-cache@11.0.1: {}\n \n-  lucide-react@0.456.0(react@18.3.1):\n+  lucide-react@0.460.0(react@18.3.1):\n     dependencies:\n       react: 18.3.1\n ",
    "output": "fix(deps): update dependency lucide-react to ^0.460.0 (#709)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 3b2a6ba..b04b4c8 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -100,7 +100,7 @@ importers:\n         version: 0.4.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       nuqs:\n         specifier: ^2.0.0\n-        version: 2.2.0(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n+        version: 2.2.1(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n       postgres:\n         specifier: ^3.4.4\n         version: 3.4.5\n@@ -2625,8 +2625,8 @@ packages:\n     resolution: {integrity: sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==}\n     engines: {node: '>=0.10.0'}\n \n-  nuqs@2.2.0:\n-    resolution: {integrity: sha512-ff0UDkuFfbACr7nONLsLTkBUvqxbaaYAYfS9jHSIr8zjacABHCHOwysYmkXyOmU+BPA68v+Xspr+2HKnNYbpeQ==}\n+  nuqs@2.2.1:\n+    resolution: {integrity: sha512-P0swZtg6k9LRXzlT9gQAFtQg25Edan2Evt5vwyGvh00Z+rHH19gb2ZajU/E/SfhwE858aM/jb+wJziWbbwSlcg==}\n     peerDependencies:\n       '@remix-run/react': '>=2'\n       next: '>=14.2.0'\n@@ -5707,7 +5707,7 @@ snapshots:\n \n   normalize-range@0.1.2: {}\n \n-  nuqs@2.2.0(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1):\n+  nuqs@2.2.1(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1):\n     dependencies:\n       mitt: 3.0.1\n       react: 18.3.1",
    "output": "fix(deps): update dependency nuqs to v2.2.1 (#711)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 3671f2b..3b2a6ba 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -79,7 +79,7 @@ importers:\n         version: 4.1.0\n       drizzle-orm:\n         specifier: ^0.36.0\n-        version: 0.36.2(@libsql/client-wasm@0.14.0)(@types/react@18.3.12)(pg@8.13.1)(postgres@3.4.5)(react@18.3.1)\n+        version: 0.36.3(@libsql/client-wasm@0.14.0)(@types/react@18.3.12)(pg@8.13.1)(postgres@3.4.5)(react@18.3.1)\n       export-to-csv:\n         specifier: ^1.4.0\n         version: 1.4.0\n@@ -1851,8 +1851,8 @@ packages:\n     resolution: {integrity: sha512-JimOV+ystXTWMgZkLHYHf2w3oS28hxiH1FR0dkmJLc7GHzdGJoJAQtQS5DRppnabsRZwE2U1F6CuezVBgmsBBQ==}\n     hasBin: true\n \n-  drizzle-orm@0.36.2:\n-    resolution: {integrity: sha512-uVwIdQMo+zwI09hCSNVR29tYn4Vw6F7gga/CsZgDJmTSGDdUdLo+Ur45Qc3gDK7oFTxD/eRANNnPgvPmRY+jSA==}\n+  drizzle-orm@0.36.3:\n+    resolution: {integrity: sha512-ffQB7CcyCTvQBK6xtRLMl/Jsd5xFTBs+UTHrgs1hbk68i5TPkbsoCPbKEwiEsQZfq2I7VH632XJpV1g7LS2H9Q==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=3'\n@@ -4823,7 +4823,7 @@ snapshots:\n     transitivePeerDependencies:\n       - supports-color\n \n-  drizzle-orm@0.36.2(@libsql/client-wasm@0.14.0)(@types/react@18.3.12)(pg@8.13.1)(postgres@3.4.5)(react@18.3.1):\n+  drizzle-orm@0.36.3(@libsql/client-wasm@0.14.0)(@types/react@18.3.12)(pg@8.13.1)(postgres@3.4.5)(react@18.3.1):\n     optionalDependencies:\n       '@libsql/client-wasm': 0.14.0\n       '@types/react': 18.3.12",
    "output": "fix(deps): update dependency drizzle-orm to v0.36.3 (#710)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 1badee2..d4911ff 100644\n--- a/package.json\n+++ b/package.json\n@@ -96,5 +96,5 @@\n   \"ct3aMetadata\": {\n     \"initVersion\": \"7.23.1\"\n   },\n-  \"packageManager\": \"pnpm@9.13.1\"\n+  \"packageManager\": \"pnpm@9.13.2\"\n }",
    "output": "chore(deps): update pnpm to v9.13.2 (#708)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/components/data-table/data-table-filter-list.tsx b/src/components/data-table/data-table-filter-list.tsx\nindex 670fb74..31c0a2d 100644\n--- a/src/components/data-table/data-table-filter-list.tsx\n+++ b/src/components/data-table/data-table-filter-list.tsx\n@@ -125,7 +125,7 @@ export function DataTableFilterList<TData>({\n     debounced = false,\n   }: {\n     rowId: string\n-    field: Partial<Filter<TData>>\n+    field: Omit<Partial<Filter<TData>>, \"rowId\">\n     debounced?: boolean\n   }) {\n     const updateFunction = debounced ? debouncedSetFilters : setFilters\ndiff --git a/src/components/data-table/data-table-sort-list.tsx b/src/components/data-table/data-table-sort-list.tsx\nindex cbb48e0..6619d0a 100644\n--- a/src/components/data-table/data-table-sort-list.tsx\n+++ b/src/components/data-table/data-table-sort-list.tsx\n@@ -116,12 +116,12 @@ export function DataTableSortList<TData>({\n   }\n \n   function updateSort({\n+    id,\n     field,\n-    index,\n     debounced = false,\n   }: {\n+    id: string\n     field: Partial<ExtendedColumnSort<TData>>\n-    index: number\n     debounced?: boolean\n   }) {\n     const updateFunction = debounced ? debouncedSetSorting : setSorting\n@@ -129,8 +129,8 @@ export function DataTableSortList<TData>({\n     updateFunction((prevSorting) => {\n       if (!prevSorting) return prevSorting\n \n-      const updatedSorting = prevSorting.map((sort, i) =>\n-        i === index ? { ...sort, ...field } : sort\n+      const updatedSorting = prevSorting.map((sort) =>\n+        sort.id === id ? { ...sort, ...field } : sort\n       )\n       return updatedSorting\n     })\n@@ -197,7 +197,7 @@ export function DataTableSortList<TData>({\n           )}\n           <div className=\"flex max-h-40 flex-col gap-2 overflow-y-auto p-0.5\">\n             <div className=\"flex w-full flex-col gap-2\">\n-              {uniqueSorting.map((sort, index) => {\n+              {uniqueSorting.map((sort) => {\n                 const sortId = `${id}-sort-${sort.id}`\n                 const fieldListboxId = `${sortId}-field-listbox`\n                 const fieldTriggerId = `${sortId}-field-trigger`\n@@ -256,10 +256,10 @@ export function DataTableSortList<TData>({\n                                       const newFieldTriggerId = `${id}-sort-${value}-field-trigger`\n \n                                       updateSort({\n+                                        id: sort.id,\n                                         field: {\n                                           id: value as StringKeyOf<TData>,\n                                         },\n-                                        index,\n                                       })\n \n                                       requestAnimationFrame(() => {\n@@ -292,8 +292,8 @@ export function DataTableSortList<TData>({\n                         value={sort.desc ? \"desc\" : \"asc\"}\n                         onValueChange={(value: SortDirection) =>\n                           updateSort({\n+                            id: sort.id,\n                             field: { id: sort.id, desc: value === \"desc\" },\n-                            index,\n                           })\n                         }\n                       >",
    "output": "feat: update update-fucntions"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/components/data-table/data-table-filter-list.tsx b/src/components/data-table/data-table-filter-list.tsx\nindex 64592e8..670fb74 100644\n--- a/src/components/data-table/data-table-filter-list.tsx\n+++ b/src/components/data-table/data-table-filter-list.tsx\n@@ -132,18 +132,10 @@ export function DataTableFilterList<TData>({\n     updateFunction((prevFilters) => {\n       const updatedFilters = prevFilters.map((filter) => {\n         if (filter.rowId === rowId) {\n-          const updatedFilter = { ...filter, ...field }\n-          if (\"type\" in field) {\n-            updatedFilter.value = \"\"\n-          }\n-          if (field.operator === \"isEmpty\" || field.operator === \"isNotEmpty\") {\n-            updatedFilter.value = \"\"\n-          }\n-          return updatedFilter\n+          return { ...filter, ...field }\n         }\n         return filter\n       })\n-\n       return updatedFilters\n     })\n   }\n@@ -655,20 +647,21 @@ export function DataTableFilterList<TData>({\n                                   key={field.id}\n                                   value={field.id}\n                                   onSelect={(value) => {\n-                                    const column = filterFields.find(\n+                                    const filterField = filterFields.find(\n                                       (col) => col.id === value\n                                     )\n \n-                                    if (!column) return\n+                                    if (!filterField) return\n \n                                     updateFilter({\n                                       rowId: filter.rowId,\n                                       field: {\n                                         id: value as StringKeyOf<TData>,\n-                                        type: column.type,\n+                                        type: filterField.type,\n                                         operator: getDefaultFilterOperator(\n-                                          column.type\n+                                          filterField.type\n                                         ),\n+                                        value: \"\",\n                                       },\n                                     })\n \n@@ -700,7 +693,13 @@ export function DataTableFilterList<TData>({\n                       onValueChange={(value: FilterOperator) =>\n                         updateFilter({\n                           rowId: filter.rowId,\n-                          field: { operator: value },\n+                          field: {\n+                            operator: value,\n+                            value:\n+                              value === \"isEmpty\" || value === \"isNotEmpty\"\n+                                ? \"\"\n+                                : filter.value,\n+                          },\n                         })\n                       }\n                     >\ndiff --git a/src/components/data-table/data-table-sort-list.tsx b/src/components/data-table/data-table-sort-list.tsx\nindex a3ce252..cbb48e0 100644\n--- a/src/components/data-table/data-table-sort-list.tsx\n+++ b/src/components/data-table/data-table-sort-list.tsx\n@@ -97,7 +97,7 @@ export function DataTableSortList<TData>({\n           label: toSentenceCase(column.id),\n           selected: false,\n         })),\n-    [table, sorting]\n+    [sorting, table]\n   )\n \n   function addSort() {",
    "output": "feat: update function"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 878b11a..1badee2 100644\n--- a/package.json\n+++ b/package.json\n@@ -96,5 +96,5 @@\n   \"ct3aMetadata\": {\n     \"initVersion\": \"7.23.1\"\n   },\n-  \"packageManager\": \"pnpm@9.13.0\"\n+  \"packageManager\": \"pnpm@9.13.1\"\n }",
    "output": "chore(deps): update pnpm to v9.13.1 (#707)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex d380755..3671f2b 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -127,7 +127,7 @@ importers:\n         version: 2.5.4\n       tailwindcss-animate:\n         specifier: ^1.0.7\n-        version: 1.0.7(tailwindcss@3.4.14)\n+        version: 1.0.7(tailwindcss@3.4.15)\n       vaul:\n         specifier: ^1.1.0\n         version: 1.1.1(@types/react-dom@18.3.1)(@types/react@18.3.12)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n@@ -182,7 +182,7 @@ importers:\n         version: 9.1.0(eslint@8.57.1)\n       eslint-plugin-tailwindcss:\n         specifier: ^3.17.5\n-        version: 3.17.5(tailwindcss@3.4.14)\n+        version: 3.17.5(tailwindcss@3.4.15)\n       pg:\n         specifier: ^8.13.0\n         version: 8.13.1\n@@ -200,7 +200,7 @@ importers:\n         version: 6.0.1\n       tailwindcss:\n         specifier: ^3.4.14\n-        version: 3.4.14\n+        version: 3.4.15\n       tsx:\n         specifier: ^4.19.1\n         version: 4.19.2\n@@ -3193,8 +3193,8 @@ packages:\n     peerDependencies:\n       tailwindcss: '>=3.0.0 || insiders'\n \n-  tailwindcss@3.4.14:\n-    resolution: {integrity: sha512-IcSvOcTRcUtQQ7ILQL5quRDg7Xs93PdJEk1ZLbhhvJc7uj/OAhYOnruEiwnGgBvUtaUAJ8/mhSw1o8L2jCiENA==}\n+  tailwindcss@3.4.15:\n+    resolution: {integrity: sha512-r4MeXnfBmSOuKUWmXe6h2CcyfzJCEk4F0pptO5jlnYSIViUkVmsawj80N5h2lO3gwcmSb4n3PuN+e+GC1Guylw==}\n     engines: {node: '>=14.0.0'}\n     hasBin: true\n \n@@ -5162,11 +5162,11 @@ snapshots:\n       string.prototype.matchall: 4.0.11\n       string.prototype.repeat: 1.0.0\n \n-  eslint-plugin-tailwindcss@3.17.5(tailwindcss@3.4.14):\n+  eslint-plugin-tailwindcss@3.17.5(tailwindcss@3.4.15):\n     dependencies:\n       fast-glob: 3.3.2\n       postcss: 8.4.49\n-      tailwindcss: 3.4.14\n+      tailwindcss: 3.4.15\n \n   eslint-scope@7.2.2:\n     dependencies:\n@@ -6242,11 +6242,11 @@ snapshots:\n \n   tailwind-merge@2.5.4: {}\n \n-  tailwindcss-animate@1.0.7(tailwindcss@3.4.14):\n+  tailwindcss-animate@1.0.7(tailwindcss@3.4.15):\n     dependencies:\n-      tailwindcss: 3.4.14\n+      tailwindcss: 3.4.15\n \n-  tailwindcss@3.4.14:\n+  tailwindcss@3.4.15:\n     dependencies:\n       '@alloc/quick-lru': 5.2.0\n       arg: 5.0.2",
    "output": "chore(deps): update dependency tailwindcss to v3.4.15 (#706)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex b9ac438..d380755 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -100,7 +100,7 @@ importers:\n         version: 0.4.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       nuqs:\n         specifier: ^2.0.0\n-        version: 2.1.2(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n+        version: 2.2.0(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n       postgres:\n         specifier: ^3.4.4\n         version: 3.4.5\n@@ -2625,13 +2625,13 @@ packages:\n     resolution: {integrity: sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==}\n     engines: {node: '>=0.10.0'}\n \n-  nuqs@2.1.2:\n-    resolution: {integrity: sha512-WL9Qb6Pn8JPLCTE04l0CaRjeVrEdybEuLuc7IMS/H6HJnxjO2f63i1sd6HkU3ntEY6rc05M1PL8/ZRvdBC7pgw==}\n+  nuqs@2.2.0:\n+    resolution: {integrity: sha512-ff0UDkuFfbACr7nONLsLTkBUvqxbaaYAYfS9jHSIr8zjacABHCHOwysYmkXyOmU+BPA68v+Xspr+2HKnNYbpeQ==}\n     peerDependencies:\n-      '@remix-run/react': '>= 2'\n-      next: '>= 14.2.0'\n-      react: '>= 18.2.0'\n-      react-router-dom: '>= 6'\n+      '@remix-run/react': '>=2'\n+      next: '>=14.2.0'\n+      react: '>=18.2.0 || ^19.0.0-0'\n+      react-router-dom: '>=6'\n     peerDependenciesMeta:\n       '@remix-run/react':\n         optional: true\n@@ -5707,7 +5707,7 @@ snapshots:\n \n   normalize-range@0.1.2: {}\n \n-  nuqs@2.1.2(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1):\n+  nuqs@2.2.0(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1):\n     dependencies:\n       mitt: 3.0.1\n       react: 18.3.1",
    "output": "fix(deps): update dependency nuqs to v2.2.0 (#705)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 05a74ed..b9ac438 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -79,7 +79,7 @@ importers:\n         version: 4.1.0\n       drizzle-orm:\n         specifier: ^0.36.0\n-        version: 0.36.1(@libsql/client-wasm@0.14.0)(@types/react@18.3.12)(pg@8.13.1)(postgres@3.4.5)(react@18.3.1)\n+        version: 0.36.2(@libsql/client-wasm@0.14.0)(@types/react@18.3.12)(pg@8.13.1)(postgres@3.4.5)(react@18.3.1)\n       export-to-csv:\n         specifier: ^1.4.0\n         version: 1.4.0\n@@ -1851,8 +1851,8 @@ packages:\n     resolution: {integrity: sha512-JimOV+ystXTWMgZkLHYHf2w3oS28hxiH1FR0dkmJLc7GHzdGJoJAQtQS5DRppnabsRZwE2U1F6CuezVBgmsBBQ==}\n     hasBin: true\n \n-  drizzle-orm@0.36.1:\n-    resolution: {integrity: sha512-F4hbimnMEhyWzDowQB4xEuVJJWXLHZYD7FYwvo8RImY+N7pStGqsbfmT95jDbec1s4qKmQbiuxEDZY90LRrfIw==}\n+  drizzle-orm@0.36.2:\n+    resolution: {integrity: sha512-uVwIdQMo+zwI09hCSNVR29tYn4Vw6F7gga/CsZgDJmTSGDdUdLo+Ur45Qc3gDK7oFTxD/eRANNnPgvPmRY+jSA==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=3'\n@@ -1873,7 +1873,7 @@ packages:\n       '@xata.io/client': '*'\n       better-sqlite3: '>=7'\n       bun-types: '*'\n-      expo-sqlite: '>=13.2.0'\n+      expo-sqlite: '>=14.0.0'\n       knex: '*'\n       kysely: '*'\n       mysql2: '>=2'\n@@ -4823,7 +4823,7 @@ snapshots:\n     transitivePeerDependencies:\n       - supports-color\n \n-  drizzle-orm@0.36.1(@libsql/client-wasm@0.14.0)(@types/react@18.3.12)(pg@8.13.1)(postgres@3.4.5)(react@18.3.1):\n+  drizzle-orm@0.36.2(@libsql/client-wasm@0.14.0)(@types/react@18.3.12)(pg@8.13.1)(postgres@3.4.5)(react@18.3.1):\n     optionalDependencies:\n       '@libsql/client-wasm': 0.14.0\n       '@types/react': 18.3.12",
    "output": "fix(deps): update dependency drizzle-orm to v0.36.2 (#704)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 70d86fc..05a74ed 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -170,7 +170,7 @@ importers:\n         version: 7.4.2\n       drizzle-kit:\n         specifier: ^0.28.0\n-        version: 0.28.0\n+        version: 0.28.1\n       eslint:\n         specifier: ^8.57.0\n         version: 8.57.1\n@@ -1847,8 +1847,8 @@ packages:\n     resolution: {integrity: sha512-ZmdL2rui+eB2YwhsWzjInR8LldtZHGDoQ1ugH85ppHKwpUHL7j7rN0Ti9NCnGiQbhaZ11FpR+7ao1dNsmduNUg==}\n     engines: {node: '>=12'}\n \n-  drizzle-kit@0.28.0:\n-    resolution: {integrity: sha512-KqI+CS2Ga9GYIrXpxpCDUJJrH/AT/k4UY0Pb4oRgQEGkgN1EdCnqp664cXgwPWjDr5RBtTsjZipw8+8C//K63A==}\n+  drizzle-kit@0.28.1:\n+    resolution: {integrity: sha512-JimOV+ystXTWMgZkLHYHf2w3oS28hxiH1FR0dkmJLc7GHzdGJoJAQtQS5DRppnabsRZwE2U1F6CuezVBgmsBBQ==}\n     hasBin: true\n \n   drizzle-orm@0.36.1:\n@@ -4814,7 +4814,7 @@ snapshots:\n \n   dotenv@16.4.5: {}\n \n-  drizzle-kit@0.28.0:\n+  drizzle-kit@0.28.1:\n     dependencies:\n       '@drizzle-team/brocli': 0.10.2\n       '@esbuild-kit/esm-loader': 2.6.5",
    "output": "chore(deps): update dependency drizzle-kit to v0.28.1 (#703)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 5d811aa..878b11a 100644\n--- a/package.json\n+++ b/package.json\n@@ -96,5 +96,5 @@\n   \"ct3aMetadata\": {\n     \"initVersion\": \"7.23.1\"\n   },\n-  \"packageManager\": \"pnpm@9.12.3\"\n+  \"packageManager\": \"pnpm@9.13.0\"\n }",
    "output": "chore(deps): update pnpm to v9.13.0 (#702)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 5cad1f3..70d86fc 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -58,7 +58,7 @@ importers:\n         version: 1.1.0(@types/react-dom@18.3.1)(@types/react@18.3.12)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       '@radix-ui/react-tooltip':\n         specifier: ^1.1.3\n-        version: 1.1.3(@types/react-dom@18.3.1)(@types/react@18.3.12)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n+        version: 1.1.4(@types/react-dom@18.3.1)(@types/react@18.3.12)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       '@t3-oss/env-nextjs':\n         specifier: ^0.11.1\n         version: 0.11.1(typescript@5.6.3)(zod@3.23.8)\n@@ -738,8 +738,8 @@ packages:\n   '@floating-ui/core@1.6.8':\n     resolution: {integrity: sha512-7XJ9cPU+yI2QeLS+FCSlqNFZJq8arvswefkZrYI1yQBbftw6FyrZOxYSh+9S7z7TpeWlRt9zJ5IhM1WIL334jA==}\n \n-  '@floating-ui/dom@1.6.11':\n-    resolution: {integrity: sha512-qkMCxSR24v2vGkhYDo/UzxfJN3D4syqSjyuTFz6C7XcpU1pASPRieNI0Kj5VP3/503mOfYiGY891ugBX1GlABQ==}\n+  '@floating-ui/dom@1.6.12':\n+    resolution: {integrity: sha512-NP83c0HjokcGVEMeoStg317VD9W7eDlGK7457dMBANbKA6GJZdc7rjujdgqzTaz93jkGgc5P/jeWbaCHnMNc+w==}\n \n   '@floating-ui/react-dom@2.1.2':\n     resolution: {integrity: sha512-06okr5cgPzMNBy+Ycse2A6udMi4bqwW/zgBF/rwjcNqWkyr82Mcg8b0vjX8OJpZFy/FKjJmw6wV7t44kK6kW7A==}\n@@ -1302,8 +1302,8 @@ packages:\n       '@types/react-dom':\n         optional: true\n \n-  '@radix-ui/react-tooltip@1.1.3':\n-    resolution: {integrity: sha512-Z4w1FIS0BqVFI2c1jZvb/uDVJijJjJ2ZMuPV81oVgTZ7g3BZxobplnMVvXtFWgtozdvYJ+MFWtwkM5S2HnAong==}\n+  '@radix-ui/react-tooltip@1.1.4':\n+    resolution: {integrity: sha512-QpObUH/ZlpaO4YgHSaYzrLO2VuO+ZBFFgGzjMUPwtiYnAzzNNDPJeEGRrT7qNOrWm/Jr08M1vlp+vTHtnSQ0Uw==}\n     peerDependencies:\n       '@types/react': '*'\n       '@types/react-dom': '*'\n@@ -3712,14 +3712,14 @@ snapshots:\n     dependencies:\n       '@floating-ui/utils': 0.2.8\n \n-  '@floating-ui/dom@1.6.11':\n+  '@floating-ui/dom@1.6.12':\n     dependencies:\n       '@floating-ui/core': 1.6.8\n       '@floating-ui/utils': 0.2.8\n \n   '@floating-ui/react-dom@2.1.2(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':\n     dependencies:\n-      '@floating-ui/dom': 1.6.11\n+      '@floating-ui/dom': 1.6.12\n       react: 18.3.1\n       react-dom: 18.3.1(react@18.3.1)\n \n@@ -4243,7 +4243,7 @@ snapshots:\n       '@types/react': 18.3.12\n       '@types/react-dom': 18.3.1\n \n-  '@radix-ui/react-tooltip@1.1.3(@types/react-dom@18.3.1)(@types/react@18.3.12)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':\n+  '@radix-ui/react-tooltip@1.1.4(@types/react-dom@18.3.1)(@types/react@18.3.12)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':\n     dependencies:\n       '@radix-ui/primitive': 1.1.0\n       '@radix-ui/react-compose-refs': 1.1.0(@types/react@18.3.12)(react@18.3.1)",
    "output": "fix(deps): update dependency @radix-ui/react-tooltip to v1.1.4 (#701)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 11f6333..5cad1f3 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -100,7 +100,7 @@ importers:\n         version: 0.4.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       nuqs:\n         specifier: ^2.0.0\n-        version: 2.1.1(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n+        version: 2.1.2(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n       postgres:\n         specifier: ^3.4.4\n         version: 3.4.5\n@@ -2625,8 +2625,8 @@ packages:\n     resolution: {integrity: sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==}\n     engines: {node: '>=0.10.0'}\n \n-  nuqs@2.1.1:\n-    resolution: {integrity: sha512-iM2H8lMmhvk9bxupUs2oRle9usRNEAqppOkTMXOxD/uK85gOKAubU7T2zmPo8fnYQS4n5e/XswTiq+gLYGpy3w==}\n+  nuqs@2.1.2:\n+    resolution: {integrity: sha512-WL9Qb6Pn8JPLCTE04l0CaRjeVrEdybEuLuc7IMS/H6HJnxjO2f63i1sd6HkU3ntEY6rc05M1PL8/ZRvdBC7pgw==}\n     peerDependencies:\n       '@remix-run/react': '>= 2'\n       next: '>= 14.2.0'\n@@ -5707,7 +5707,7 @@ snapshots:\n \n   normalize-range@0.1.2: {}\n \n-  nuqs@2.1.1(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1):\n+  nuqs@2.1.2(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1):\n     dependencies:\n       mitt: 3.0.1\n       react: 18.3.1",
    "output": "fix(deps): update dependency nuqs to v2.1.2 (#700)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/components/data-table/data-table-filter-list.tsx b/src/components/data-table/data-table-filter-list.tsx\nindex c003669..8abd397 100644\n--- a/src/components/data-table/data-table-filter-list.tsx\n+++ b/src/components/data-table/data-table-filter-list.tsx\n@@ -551,8 +551,9 @@ export function DataTableFilterList<TData>({\n         <PopoverContent\n           id={`${id}-filter-dialog`}\n           align=\"start\"\n+          collisionPadding={16}\n           className={cn(\n-            \"flex w-[36rem] origin-[var(--radix-popover-content-transform-origin)] flex-col p-4\",\n+            \"flex w-[calc(100vw-theme(spacing.12))] min-w-60 origin-[var(--radix-popover-content-transform-origin)] flex-col p-4 sm:w-[36rem]\",\n             filters.length > 0 ? \"gap-3.5\" : \"gap-2\"\n           )}\n         >\n@@ -615,7 +616,7 @@ export function DataTableFilterList<TData>({\n                         </span>\n                       )}\n                     </div>\n-                    <Popover>\n+                    <Popover modal>\n                       <PopoverTrigger asChild>\n                         <Button\n                           id={fieldTriggerId}\ndiff --git a/src/components/data-table/data-table-sort-list.tsx b/src/components/data-table/data-table-sort-list.tsx\nindex 6e1bcb2..03bd3e4 100644\n--- a/src/components/data-table/data-table-sort-list.tsx\n+++ b/src/components/data-table/data-table-sort-list.tsx\n@@ -168,8 +168,9 @@ export function DataTableSortList<TData>({\n         <PopoverContent\n           id={`${id}-sort-dialog`}\n           align=\"start\"\n+          collisionPadding={16}\n           className={cn(\n-            \"flex w-[25rem] origin-[var(--radix-popover-content-transform-origin)] flex-col p-4\",\n+            \"flex w-[calc(100vw-theme(spacing.20))] min-w-72 max-w-[25rem] origin-[var(--radix-popover-content-transform-origin)] flex-col p-4 sm:w-[25rem]\",\n             uniqueSorting.length > 0 ? \"gap-3.5\" : \"gap-2\"\n           )}\n         >\n@@ -194,7 +195,7 @@ export function DataTableSortList<TData>({\n                 return (\n                   <SortableItem key={sort.id} value={sort.id} asChild>\n                     <div className=\"flex items-center gap-2\">\n-                      <Popover>\n+                      <Popover modal>\n                         <PopoverTrigger asChild>\n                           <Button\n                             id={fieldTriggerId}\ndiff --git a/src/components/data-table/data-table-view-options.tsx b/src/components/data-table/data-table-view-options.tsx\nindex 1544ca0..ba070d6 100644\n--- a/src/components/data-table/data-table-view-options.tsx\n+++ b/src/components/data-table/data-table-view-options.tsx\n@@ -30,7 +30,7 @@ export function DataTableViewOptions<TData>({\n   const triggerRef = React.useRef<HTMLButtonElement>(null)\n \n   return (\n-    <Popover>\n+    <Popover modal>\n       <PopoverTrigger asChild>\n         <Button\n           ref={triggerRef}",
    "output": "feat: responsive lists"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/components/ui/dropdown-menu.tsx b/src/components/ui/dropdown-menu.tsx\nindex 418395c..b854bb2 100644\n--- a/src/components/ui/dropdown-menu.tsx\n+++ b/src/components/ui/dropdown-menu.tsx\n@@ -27,14 +27,14 @@ const DropdownMenuSubTrigger = React.forwardRef<\n   <DropdownMenuPrimitive.SubTrigger\n     ref={ref}\n     className={cn(\n-      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent\",\n+      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n       inset && \"pl-8\",\n       className\n     )}\n     {...props}\n   >\n     {children}\n-    <ChevronRight className=\"ml-auto size-4\" />\n+    <ChevronRight className=\"ml-auto\" />\n   </DropdownMenuPrimitive.SubTrigger>\n ))\n DropdownMenuSubTrigger.displayName =\n@@ -84,7 +84,7 @@ const DropdownMenuItem = React.forwardRef<\n   <DropdownMenuPrimitive.Item\n     ref={ref}\n     className={cn(\n-      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n+      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&>svg]:size-4 [&>svg]:shrink-0\",\n       inset && \"pl-8\",\n       className\n     )}\n@@ -131,7 +131,7 @@ const DropdownMenuRadioItem = React.forwardRef<\n   >\n     <span className=\"absolute left-2 flex size-3.5 items-center justify-center\">\n       <DropdownMenuPrimitive.ItemIndicator>\n-        <Circle className=\"size-4 fill-current\" />\n+        <Circle className=\"size-2 fill-current\" />\n       </DropdownMenuPrimitive.ItemIndicator>\n     </span>\n     {children}",
    "output": "chore: update dropdown-menu"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/components/ui/select.tsx b/src/components/ui/select.tsx\nindex 4473107..d201c39 100644\n--- a/src/components/ui/select.tsx\n+++ b/src/components/ui/select.tsx\n@@ -2,7 +2,7 @@\n \n import * as React from \"react\"\n import * as SelectPrimitive from \"@radix-ui/react-select\"\n-import { ArrowUpDown, Check, ChevronDown, ChevronUp } from \"lucide-react\"\n+import { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n \n import { cn } from \"@/lib/utils\"\n \n@@ -26,7 +26,7 @@ const SelectTrigger = React.forwardRef<\n   >\n     {children}\n     <SelectPrimitive.Icon asChild>\n-      <ArrowUpDown className=\"size-4 opacity-50\" />\n+      <ChevronDown className=\"size-4 opacity-50\" />\n     </SelectPrimitive.Icon>\n   </SelectPrimitive.Trigger>\n ))\n@@ -44,7 +44,7 @@ const SelectScrollUpButton = React.forwardRef<\n     )}\n     {...props}\n   >\n-    <ChevronUp />\n+    <ChevronUp className=\"size-4\" />\n   </SelectPrimitive.ScrollUpButton>\n ))\n SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n@@ -61,7 +61,7 @@ const SelectScrollDownButton = React.forwardRef<\n     )}\n     {...props}\n   >\n-    <ChevronDown />\n+    <ChevronDown className=\"size-4\" />\n   </SelectPrimitive.ScrollDownButton>\n ))\n SelectScrollDownButton.displayName =",
    "output": "chore: sync select"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 6488dfa..5d811aa 100644\n--- a/package.json\n+++ b/package.json\n@@ -53,7 +53,7 @@\n     \"lucide-react\": \"^0.456.0\",\n     \"nanoid\": \"^5.0.7\",\n     \"next\": \"^15.0.0\",\n-    \"next-themes\": \"^0.3.0\",\n+    \"next-themes\": \"^0.4.3\",\n     \"nuqs\": \"^2.0.0\",\n     \"postgres\": \"^3.4.4\",\n     \"react\": \"^18.3.1\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 380a43d..2bddf69 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -96,8 +96,8 @@ importers:\n         specifier: ^15.0.0\n         version: 15.0.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       next-themes:\n-        specifier: ^0.3.0\n-        version: 0.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n+        specifier: ^0.4.3\n+        version: 0.4.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       nuqs:\n         specifier: ^2.0.0\n         version: 2.1.1(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n@@ -2587,11 +2587,11 @@ packages:\n   natural-compare@1.4.0:\n     resolution: {integrity: sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==}\n \n-  next-themes@0.3.0:\n-    resolution: {integrity: sha512-/QHIrsYpd6Kfk7xakK4svpDI5mmXP0gfvCoJdGpZQ2TOrQZmsW0QxjaiLn8wbIKjtm4BTSqLoix4lxYYOnLJ/w==}\n+  next-themes@0.4.3:\n+    resolution: {integrity: sha512-nG84VPkTdUHR2YeD89YchvV4I9RbiMAql3GiLEQlPvq1ioaqPaIReK+yMRdg/zgiXws620qS1rU30TiWmmG9lA==}\n     peerDependencies:\n-      react: ^16.8 || ^17 || ^18\n-      react-dom: ^16.8 || ^17 || ^18\n+      react: ^16.8 || ^17 || ^18 || ^19 || ^19.0.0-rc\n+      react-dom: ^16.8 || ^17 || ^18 || ^19 || ^19.0.0-rc\n \n   next@15.0.3:\n     resolution: {integrity: sha512-ontCbCRKJUIoivAdGB34yCaOcPgYXr9AAkV/IwqFfWWTXEPUgLYkSkqBhIk9KK7gGmgjc64B+RdoeIDM13Irnw==}\n@@ -5671,7 +5671,7 @@ snapshots:\n \n   natural-compare@1.4.0: {}\n \n-  next-themes@0.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1):\n+  next-themes@0.4.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1):\n     dependencies:\n       react: 18.3.1\n       react-dom: 18.3.1(react@18.3.1)\ndiff --git a/src/components/providers.tsx b/src/components/providers.tsx\nindex c38c95f..71c1f34 100644\n--- a/src/components/providers.tsx\n+++ b/src/components/providers.tsx\n@@ -1,7 +1,9 @@\n \"use client\"\n \n-import { ThemeProvider as NextThemesProvider } from \"next-themes\"\n-import type { ThemeProviderProps } from \"next-themes/dist/types\"\n+import {\n+  ThemeProvider as NextThemesProvider,\n+  type ThemeProviderProps,\n+} from \"next-themes\"\n import { NuqsAdapter } from \"nuqs/adapters/next/app\"\n \n import { TooltipProvider } from \"@/components/ui/tooltip\"\ndiff --git a/src/lib/id.ts b/src/lib/id.ts\nindex a82f66c..e6e44cb 100644\n--- a/src/lib/id.ts\n+++ b/src/lib/id.ts\n@@ -39,7 +39,5 @@ export function generateId(\n     length\n   )()\n \n-  return prefixOrOptions\n-    ? `${prefixes[prefixOrOptions as keyof typeof prefixes]}${separator}${id}`\n-    : id\n+  return prefixOrOptions ? `${prefixes[prefixOrOptions]}${separator}${id}` : id\n }",
    "output": "chore: bump next-themes"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex fd5e9c3..380a43d 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -22,7 +22,7 @@ importers:\n         version: 3.2.2(react@18.3.1)\n       '@hookform/resolvers':\n         specifier: ^3.9.0\n-        version: 3.9.1(react-hook-form@7.53.1(react@18.3.1))\n+        version: 3.9.1(react-hook-form@7.53.2(react@18.3.1))\n       '@radix-ui/react-checkbox':\n         specifier: ^1.1.2\n         version: 1.1.2(@types/react-dom@18.3.1)(@types/react@18.3.12)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n@@ -115,7 +115,7 @@ importers:\n         version: 18.3.1(react@18.3.1)\n       react-hook-form:\n         specifier: ^7.53.1\n-        version: 7.53.1(react@18.3.1)\n+        version: 7.53.2(react@18.3.1)\n       server-only:\n         specifier: ^0.0.1\n         version: 0.0.1\n@@ -2924,8 +2924,8 @@ packages:\n     peerDependencies:\n       react: ^18.3.1\n \n-  react-hook-form@7.53.1:\n-    resolution: {integrity: sha512-6aiQeBda4zjcuaugWvim9WsGqisoUk+etmFEsSUMm451/Ic8L/UAb7sRtMj3V+Hdzm6mMjU1VhiSzYUZeBm0Vg==}\n+  react-hook-form@7.53.2:\n+    resolution: {integrity: sha512-YVel6fW5sOeedd1524pltpHX+jgU2u3DSDtXEaBORNdqiNrsX/nUI/iGXONegttg0mJVnfrIkiV0cmTU6Oo2xw==}\n     engines: {node: '>=18.0.0'}\n     peerDependencies:\n       react: ^16.8.0 || ^17 || ^18 || ^19\n@@ -3725,9 +3725,9 @@ snapshots:\n \n   '@floating-ui/utils@0.2.8': {}\n \n-  '@hookform/resolvers@3.9.1(react-hook-form@7.53.1(react@18.3.1))':\n+  '@hookform/resolvers@3.9.1(react-hook-form@7.53.2(react@18.3.1))':\n     dependencies:\n-      react-hook-form: 7.53.1(react@18.3.1)\n+      react-hook-form: 7.53.2(react@18.3.1)\n \n   '@humanwhocodes/config-array@0.13.0':\n     dependencies:\n@@ -5932,7 +5932,7 @@ snapshots:\n       react: 18.3.1\n       scheduler: 0.23.2\n \n-  react-hook-form@7.53.1(react@18.3.1):\n+  react-hook-form@7.53.2(react@18.3.1):\n     dependencies:\n       react: 18.3.1\n ",
    "output": "fix(deps): update dependency react-hook-form to v7.53.2 (#696)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex a0cab42..6488dfa 100644\n--- a/package.json\n+++ b/package.json\n@@ -50,7 +50,7 @@\n     \"drizzle-orm\": \"^0.36.0\",\n     \"export-to-csv\": \"^1.4.0\",\n     \"geist\": \"^1.3.1\",\n-    \"lucide-react\": \"^0.455.0\",\n+    \"lucide-react\": \"^0.456.0\",\n     \"nanoid\": \"^5.0.7\",\n     \"next\": \"^15.0.0\",\n     \"next-themes\": \"^0.3.0\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 6ab7e73..fd5e9c3 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -87,8 +87,8 @@ importers:\n         specifier: ^1.3.1\n         version: 1.3.1(next@15.0.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1))\n       lucide-react:\n-        specifier: ^0.455.0\n-        version: 0.455.0(react@18.3.1)\n+        specifier: ^0.456.0\n+        version: 0.456.0(react@18.3.1)\n       nanoid:\n         specifier: ^5.0.7\n         version: 5.0.8\n@@ -2534,8 +2534,8 @@ packages:\n     resolution: {integrity: sha512-CgeuL5uom6j/ZVrg7G/+1IXqRY8JXX4Hghfy5YE0EhoYQWvndP1kufu58cmZLNIDKnRhZrXfdS9urVWx98AipQ==}\n     engines: {node: 20 || >=22}\n \n-  lucide-react@0.455.0:\n-    resolution: {integrity: sha512-XQoi58X4COfjy6s1P4TVsXMhU2r1KsfUTRFyds/yJvdzBNOfu0F9RRIas626T8UaNZzEv4llF7ivh4uLkYp3rw==}\n+  lucide-react@0.456.0:\n+    resolution: {integrity: sha512-DIIGJqTT5X05sbAsQ+OhA8OtJYyD4NsEMCA/HQW/Y6ToPQ7gwbtujIoeAaup4HpHzV35SQOarKAWH8LYglB6eA==}\n     peerDependencies:\n       react: ^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0-rc\n \n@@ -5628,7 +5628,7 @@ snapshots:\n \n   lru-cache@11.0.1: {}\n \n-  lucide-react@0.455.0(react@18.3.1):\n+  lucide-react@0.456.0(react@18.3.1):\n     dependencies:\n       react: 18.3.1\n ",
    "output": "fix(deps): update dependency lucide-react to ^0.456.0 (#695)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 753c182..a0cab42 100644\n--- a/package.json\n+++ b/package.json\n@@ -50,7 +50,7 @@\n     \"drizzle-orm\": \"^0.36.0\",\n     \"export-to-csv\": \"^1.4.0\",\n     \"geist\": \"^1.3.1\",\n-    \"lucide-react\": \"^0.454.0\",\n+    \"lucide-react\": \"^0.455.0\",\n     \"nanoid\": \"^5.0.7\",\n     \"next\": \"^15.0.0\",\n     \"next-themes\": \"^0.3.0\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 6975c24..6ab7e73 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -87,8 +87,8 @@ importers:\n         specifier: ^1.3.1\n         version: 1.3.1(next@15.0.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1))\n       lucide-react:\n-        specifier: ^0.454.0\n-        version: 0.454.0(react@18.3.1)\n+        specifier: ^0.455.0\n+        version: 0.455.0(react@18.3.1)\n       nanoid:\n         specifier: ^5.0.7\n         version: 5.0.8\n@@ -2534,8 +2534,8 @@ packages:\n     resolution: {integrity: sha512-CgeuL5uom6j/ZVrg7G/+1IXqRY8JXX4Hghfy5YE0EhoYQWvndP1kufu58cmZLNIDKnRhZrXfdS9urVWx98AipQ==}\n     engines: {node: 20 || >=22}\n \n-  lucide-react@0.454.0:\n-    resolution: {integrity: sha512-hw7zMDwykCLnEzgncEEjHeA6+45aeEzRYuKHuyRSOPkhko+J3ySGjGIzu+mmMfDFG1vazHepMaYFYHbTFAZAAQ==}\n+  lucide-react@0.455.0:\n+    resolution: {integrity: sha512-XQoi58X4COfjy6s1P4TVsXMhU2r1KsfUTRFyds/yJvdzBNOfu0F9RRIas626T8UaNZzEv4llF7ivh4uLkYp3rw==}\n     peerDependencies:\n       react: ^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0-rc\n \n@@ -5628,7 +5628,7 @@ snapshots:\n \n   lru-cache@11.0.1: {}\n \n-  lucide-react@0.454.0(react@18.3.1):\n+  lucide-react@0.455.0(react@18.3.1):\n     dependencies:\n       react: 18.3.1\n ",
    "output": "fix(deps): update dependency lucide-react to ^0.455.0 (#694)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex b6d0e10..753c182 100644\n--- a/package.json\n+++ b/package.json\n@@ -79,7 +79,7 @@\n     \"@typescript-eslint/parser\": \"^8.11.0\",\n     \"autoprefixer\": \"^10.4.20\",\n     \"dotenv-cli\": \"^7.4.2\",\n-    \"drizzle-kit\": \"^0.27.0\",\n+    \"drizzle-kit\": \"^0.28.0\",\n     \"eslint\": \"^8.57.0\",\n     \"eslint-config-next\": \"^15.0.0\",\n     \"eslint-config-prettier\": \"^9.1.0\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex e2d8756..6d7b394 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -169,8 +169,8 @@ importers:\n         specifier: ^7.4.2\n         version: 7.4.2\n       drizzle-kit:\n-        specifier: ^0.27.0\n-        version: 0.27.2\n+        specifier: ^0.28.0\n+        version: 0.28.0\n       eslint:\n         specifier: ^8.57.0\n         version: 8.57.1\n@@ -1847,8 +1847,8 @@ packages:\n     resolution: {integrity: sha512-ZmdL2rui+eB2YwhsWzjInR8LldtZHGDoQ1ugH85ppHKwpUHL7j7rN0Ti9NCnGiQbhaZ11FpR+7ao1dNsmduNUg==}\n     engines: {node: '>=12'}\n \n-  drizzle-kit@0.27.2:\n-    resolution: {integrity: sha512-F6cFZ1wxa9XzFyeeQsp/0/lIzUbDuQjS8/njpYBDWa+wdWmXuY+Z/X2hHFK/9PGHZkv3c9mER+mVWfKlp/B6Vw==}\n+  drizzle-kit@0.28.0:\n+    resolution: {integrity: sha512-KqI+CS2Ga9GYIrXpxpCDUJJrH/AT/k4UY0Pb4oRgQEGkgN1EdCnqp664cXgwPWjDr5RBtTsjZipw8+8C//K63A==}\n     hasBin: true\n \n   drizzle-orm@0.36.1:\n@@ -4811,7 +4811,7 @@ snapshots:\n \n   dotenv@16.4.5: {}\n \n-  drizzle-kit@0.27.2:\n+  drizzle-kit@0.28.0:\n     dependencies:\n       '@drizzle-team/brocli': 0.10.2\n       '@esbuild-kit/esm-loader': 2.6.5",
    "output": "chore(deps): update dependency drizzle-kit to ^0.28.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 1d17d12..32a037b 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -79,7 +79,7 @@ importers:\n         version: 4.1.0\n       drizzle-orm:\n         specifier: ^0.36.0\n-        version: 0.36.0(@libsql/client-wasm@0.14.0)(@types/react@18.3.12)(pg@8.13.1)(postgres@3.4.5)(react@18.3.1)\n+        version: 0.36.1(@libsql/client-wasm@0.14.0)(@types/react@18.3.12)(pg@8.13.1)(postgres@3.4.5)(react@18.3.1)\n       export-to-csv:\n         specifier: ^1.4.0\n         version: 1.4.0\n@@ -1910,8 +1910,8 @@ packages:\n     resolution: {integrity: sha512-F6cFZ1wxa9XzFyeeQsp/0/lIzUbDuQjS8/njpYBDWa+wdWmXuY+Z/X2hHFK/9PGHZkv3c9mER+mVWfKlp/B6Vw==}\n     hasBin: true\n \n-  drizzle-orm@0.36.0:\n-    resolution: {integrity: sha512-6BETYPdKSR7cDHC0ZfqZk2VrKJ8n/Rfd3ajFPsAbc69gi87nwZ6oBA2wUGMELHA0tQE4kUKN0Ds00LUZQ6Z69A==}\n+  drizzle-orm@0.36.1:\n+    resolution: {integrity: sha512-F4hbimnMEhyWzDowQB4xEuVJJWXLHZYD7FYwvo8RImY+N7pStGqsbfmT95jDbec1s4qKmQbiuxEDZY90LRrfIw==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=3'\n@@ -5001,7 +5001,7 @@ snapshots:\n     transitivePeerDependencies:\n       - supports-color\n \n-  drizzle-orm@0.36.0(@libsql/client-wasm@0.14.0)(@types/react@18.3.12)(pg@8.13.1)(postgres@3.4.5)(react@18.3.1):\n+  drizzle-orm@0.36.1(@libsql/client-wasm@0.14.0)(@types/react@18.3.12)(pg@8.13.1)(postgres@3.4.5)(react@18.3.1):\n     optionalDependencies:\n       '@libsql/client-wasm': 0.14.0\n       '@types/react': 18.3.12",
    "output": "fix(deps): update dependency drizzle-orm to v0.36.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 3f8ac48..1d17d12 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -170,7 +170,7 @@ importers:\n         version: 7.4.2\n       drizzle-kit:\n         specifier: ^0.27.0\n-        version: 0.27.1\n+        version: 0.27.2\n       eslint:\n         specifier: ^8.57.0\n         version: 8.57.1\n@@ -1906,8 +1906,8 @@ packages:\n     resolution: {integrity: sha512-ZmdL2rui+eB2YwhsWzjInR8LldtZHGDoQ1ugH85ppHKwpUHL7j7rN0Ti9NCnGiQbhaZ11FpR+7ao1dNsmduNUg==}\n     engines: {node: '>=12'}\n \n-  drizzle-kit@0.27.1:\n-    resolution: {integrity: sha512-4BNA0T2blN+jW5wSwhtc+FIlCMuxYSMWCnYYdOBi5rttwq8aVXRUid0d0NCzcBKtZQSPZGAUxy+TXr7Q1OgEug==}\n+  drizzle-kit@0.27.2:\n+    resolution: {integrity: sha512-F6cFZ1wxa9XzFyeeQsp/0/lIzUbDuQjS8/njpYBDWa+wdWmXuY+Z/X2hHFK/9PGHZkv3c9mER+mVWfKlp/B6Vw==}\n     hasBin: true\n \n   drizzle-orm@0.36.0:\n@@ -4992,7 +4992,7 @@ snapshots:\n \n   dotenv@16.4.5: {}\n \n-  drizzle-kit@0.27.1:\n+  drizzle-kit@0.27.2:\n     dependencies:\n       '@drizzle-team/brocli': 0.10.2\n       '@esbuild-kit/esm-loader': 2.6.5",
    "output": "chore(deps): update dependency drizzle-kit to v0.27.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/components/layouts/site-header.tsx b/src/components/layouts/site-header.tsx\nindex faa070d..1c1d118 100644\n--- a/src/components/layouts/site-header.tsx\n+++ b/src/components/layouts/site-header.tsx\n@@ -1,5 +1,5 @@\n import Link from \"next/link\"\n-import { TableIcon } from \"lucide-react\"\n+import { LayoutGrid } from \"lucide-react\"\n \n import { siteConfig } from \"@/config/site\"\n import { Button } from \"@/components/ui/button\"\n@@ -11,7 +11,7 @@ export function SiteHeader() {\n     <header className=\"sticky top-0 z-50 w-full border-b border-border/40 bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60\">\n       <div className=\"container flex h-14 items-center\">\n         <Link href=\"/\" className=\"mr-2 flex items-center md:mr-6 md:space-x-2\">\n-          <TableIcon className=\"size-4\" aria-hidden=\"true\" />\n+          <LayoutGrid className=\"size-4\" aria-hidden=\"true\" />\n           <span className=\"hidden font-bold md:inline-block\">\n             {siteConfig.name}\n           </span>",
    "output": "chore: update icons"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 0c72fe8..0f33a1a 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -149,7 +149,7 @@ importers:\n         version: 8.56.12\n       '@types/node':\n         specifier: ^22.7.8\n-        version: 22.8.7\n+        version: 22.9.0\n       '@types/react':\n         specifier: ^18.3.11\n         version: 18.3.12\n@@ -1524,8 +1524,8 @@ packages:\n   '@types/json5@0.0.29':\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n \n-  '@types/node@22.8.7':\n-    resolution: {integrity: sha512-LidcG+2UeYIWcMuMUpBKOnryBWG/rnmOHQR5apjn8myTQcx3rinFRn7DcIFhMnS0PPFSC6OafdIKEad0lj6U0Q==}\n+  '@types/node@22.9.0':\n+    resolution: {integrity: sha512-vuyHg81vvWA1Z1ELfvLko2c8f34gyA0zaic0+Rllc5lbCnbSyuvb2Oxpm6TAUAC/2xZN3QGqxBNggD1nNR2AfQ==}\n \n   '@types/prop-types@15.7.13':\n     resolution: {integrity: sha512-hCZTSvwbzWGvhqxp/RqVqwU999pBf2vp7hzIjiYOsl8wqOmUxkQ6ddw1cV3l8811+kdUFus/q4d1Y3E3SyEifA==}\n@@ -4560,7 +4560,7 @@ snapshots:\n \n   '@types/json5@0.0.29': {}\n \n-  '@types/node@22.8.7':\n+  '@types/node@22.9.0':\n     dependencies:\n       undici-types: 6.19.8\n ",
    "output": "chore(deps): update dependency @types/node to v22.9.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 4e414b3..cfb5bf3 100644\n--- a/package.json\n+++ b/package.json\n@@ -44,7 +44,6 @@\n     \"@radix-ui/react-tooltip\": \"^1.1.3\",\n     \"@t3-oss/env-nextjs\": \"^0.11.1\",\n     \"@tanstack/react-table\": \"^8.20.5\",\n-    \"@vercel/analytics\": \"^1.3.2\",\n     \"class-variance-authority\": \"^0.7.0\",\n     \"clsx\": \"^2.1.1\",\n     \"cmdk\": \"^1.0.0\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 8bda0d0..4f6d10b 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -68,9 +68,6 @@ importers:\n       '@tanstack/react-table':\n         specifier: ^8.20.5\n         version: 8.20.5(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n-      '@vercel/analytics':\n-        specifier: ^1.3.2\n-        version: 1.3.2(next@15.0.2(@babel/core@7.25.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n       class-variance-authority:\n         specifier: ^0.7.0\n         version: 0.7.0\n@@ -1599,17 +1596,6 @@ packages:\n   '@ungap/structured-clone@1.2.0':\n     resolution: {integrity: sha512-zuVdFrMJiuCDQUMCzQaD6KL28MjnqqN8XnAqiEq9PNm/hCPTSGfrXCOfwj1ow4LFb/tNymJPwsNbVePc1xFqrQ==}\n \n-  '@vercel/analytics@1.3.2':\n-    resolution: {integrity: sha512-n/Ws7skBbW+fUBMeg+jrT30+GP00jTHvCcL4fuVrShuML0uveEV/4vVUdvqEVnDgXIGfLm0GXW5EID2mCcRXhg==}\n-    peerDependencies:\n-      next: '>= 13'\n-      react: ^18.0 || ^19.0 || ^19.0.0-rc\n-    peerDependenciesMeta:\n-      next:\n-        optional: true\n-      react:\n-        optional: true\n-\n   '@web3-storage/multipart-parser@1.0.0':\n     resolution: {integrity: sha512-BEO6al7BYqcnfX15W2cnGR+Q566ACXAT9UQykORCWW80lmkpWsnEob6zJS1ZVBKsSJC8+7vJkHwlp+lXG1UCdw==}\n \n@@ -4672,13 +4658,6 @@ snapshots:\n \n   '@ungap/structured-clone@1.2.0': {}\n \n-  '@vercel/analytics@1.3.2(next@15.0.2(@babel/core@7.25.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)':\n-    dependencies:\n-      server-only: 0.0.1\n-    optionalDependencies:\n-      next: 15.0.2(@babel/core@7.25.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n-      react: 18.3.1\n-\n   '@web3-storage/multipart-parser@1.0.0':\n     optional: true\n \ndiff --git a/src/app/layout.tsx b/src/app/layout.tsx\nindex 6c5dd20..1ca82f1 100644\n--- a/src/app/layout.tsx\n+++ b/src/app/layout.tsx\n@@ -7,7 +7,6 @@ import { TailwindIndicator } from \"@/components/tailwind-indicator\"\n import \"@/styles/globals.css\"\n \n import type { Metadata, Viewport } from \"next\"\n-import { Analytics } from \"@vercel/analytics/react\"\n \n import { fontMono, fontSans } from \"@/lib/fonts\"\n import { Toaster } from \"@/components/ui/toaster\"\n@@ -87,7 +86,6 @@ export default function RootLayout({ children }: React.PropsWithChildren) {\n           </div>\n           <TailwindIndicator />\n         </ThemeProvider>\n-        <Analytics />\n         <Toaster />\n       </body>\n     </html>\ndiff --git a/tailwind.config.ts b/tailwind.config.ts\nindex 032e25d..aec8dd8 100644\n--- a/tailwind.config.ts\n+++ b/tailwind.config.ts\n@@ -73,5 +73,6 @@ export default {\n       },\n     },\n   },\n+  // eslint-disable-next-line @typescript-eslint/no-require-imports\n   plugins: [require(\"tailwindcss-animate\")],\n } satisfies Config",
    "output": "chore: remove analytics"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 98fa02c..8bda0d0 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -79,7 +79,7 @@ importers:\n         version: 2.1.1\n       cmdk:\n         specifier: ^1.0.0\n-        version: 1.0.3(@types/react-dom@18.3.1)(@types/react@18.3.12)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n+        version: 1.0.4(@types/react-dom@18.3.1)(@types/react@18.3.12)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       date-fns:\n         specifier: ^4.1.0\n         version: 4.1.0\n@@ -1794,8 +1794,8 @@ packages:\n     resolution: {integrity: sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==}\n     engines: {node: '>=6'}\n \n-  cmdk@1.0.3:\n-    resolution: {integrity: sha512-2c3uTjwT4YeHj60q2k8S1B0WHSoGR6t5CPnec6PMFD2QF4gwid0t1VSPNeEmL02EwBwNky/A3gwPCOViKTtoPA==}\n+  cmdk@1.0.4:\n+    resolution: {integrity: sha512-AnsjfHyHpQ/EFeAnG216WY7A5LiYCoZzCSygiLvfXC3H3LFGCprErteUcszaVluGOhuOTbJS3jWHrSDYPBBygg==}\n     peerDependencies:\n       react: ^18 || ^19 || ^19.0.0-rc\n       react-dom: ^18 || ^19 || ^19.0.0-rc\n@@ -4890,7 +4890,7 @@ snapshots:\n \n   clsx@2.1.1: {}\n \n-  cmdk@1.0.3(@types/react-dom@18.3.1)(@types/react@18.3.12)(react-dom@18.3.1(react@18.3.1))(react@18.3.1):\n+  cmdk@1.0.4(@types/react-dom@18.3.1)(@types/react@18.3.12)(react-dom@18.3.1(react@18.3.1))(react@18.3.1):\n     dependencies:\n       '@radix-ui/react-dialog': 1.1.2(@types/react-dom@18.3.1)(@types/react@18.3.12)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       '@radix-ui/react-id': 1.1.0(@types/react@18.3.12)(react@18.3.1)",
    "output": "fix(deps): update dependency cmdk to v1.0.4"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 5c8b06a..98fa02c 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -140,7 +140,7 @@ importers:\n     devDependencies:\n       '@faker-js/faker':\n         specifier: ^9.0.3\n-        version: 9.1.0\n+        version: 9.2.0\n       '@ianvs/prettier-plugin-sort-imports':\n         specifier: ^4.3.1\n         version: 4.3.1(prettier@3.3.3)\n@@ -776,8 +776,8 @@ packages:\n     resolution: {integrity: sha512-d9zaMRSTIKDLhctzH12MtXvJKSSUhaHcjV+2Z+GK+EEY7XKpP5yR4x+N3TAcHTcu963nIr+TMcCb4DBCYX1z6Q==}\n     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n \n-  '@faker-js/faker@9.1.0':\n-    resolution: {integrity: sha512-GJvX9iM9PBtKScJVlXQ0tWpihK3i0pha/XAhzQa1hPK/ILLa1Wq3I63Ij7lRtqTwmdTxRCyrUhLC5Sly9SLbug==}\n+  '@faker-js/faker@9.2.0':\n+    resolution: {integrity: sha512-ulqQu4KMr1/sTFIYvqSdegHT8NIkt66tFAkugGnHA+1WAfEn6hMzNR+svjXGFRVLnapxvej67Z/LwchFrnLBUg==}\n     engines: {node: '>=18.0.0', npm: '>=9.0.0'}\n \n   '@floating-ui/core@1.6.8':\n@@ -3879,7 +3879,7 @@ snapshots:\n \n   '@eslint/js@8.57.1': {}\n \n-  '@faker-js/faker@9.1.0': {}\n+  '@faker-js/faker@9.2.0': {}\n \n   '@floating-ui/core@1.6.8':\n     dependencies:",
    "output": "chore(deps): update dependency @faker-js/faker to v9.2.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 7381337..5c8b06a 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -124,7 +124,7 @@ importers:\n         version: 0.0.1\n       sonner:\n         specifier: ^1.5.0\n-        version: 1.6.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n+        version: 1.7.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       tailwind-merge:\n         specifier: ^2.5.4\n         version: 2.5.4\n@@ -3177,8 +3177,8 @@ packages:\n   simple-swizzle@0.2.2:\n     resolution: {integrity: sha512-JA//kQgZtbuY83m+xT+tXJkmJncGMTFT+C+g2h2R9uxkYIrE2yy9sgmcLhCnw57/WSD+Eh3J97FPEDFnbXnDUg==}\n \n-  sonner@1.6.1:\n-    resolution: {integrity: sha512-0iD+eDJHyJitl069BC6wVDykQD56FMKk4TD6XkcCcikcDYaGsFKlSU0mZQXYWKPpFof3jlV/u4vGZc2KCqz8OQ==}\n+  sonner@1.7.0:\n+    resolution: {integrity: sha512-W6dH7m5MujEPyug3lpI2l3TC3Pp1+LTgK0Efg+IHDrBbtEjyCmCHHo6yfNBOsf1tFZ6zf+jceWwB38baC8yO9g==}\n     peerDependencies:\n       react: ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n       react-dom: ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n@@ -6339,7 +6339,7 @@ snapshots:\n       is-arrayish: 0.3.2\n     optional: true\n \n-  sonner@1.6.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1):\n+  sonner@1.7.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1):\n     dependencies:\n       react: 18.3.1\n       react-dom: 18.3.1(react@18.3.1)",
    "output": "fix(deps): update dependency sonner to v1.7.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex cfb5bf3..4e414b3 100644\n--- a/package.json\n+++ b/package.json\n@@ -44,6 +44,7 @@\n     \"@radix-ui/react-tooltip\": \"^1.1.3\",\n     \"@t3-oss/env-nextjs\": \"^0.11.1\",\n     \"@tanstack/react-table\": \"^8.20.5\",\n+    \"@vercel/analytics\": \"^1.3.2\",\n     \"class-variance-authority\": \"^0.7.0\",\n     \"clsx\": \"^2.1.1\",\n     \"cmdk\": \"^1.0.0\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 7bc5375..7381337 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -68,6 +68,9 @@ importers:\n       '@tanstack/react-table':\n         specifier: ^8.20.5\n         version: 8.20.5(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n+      '@vercel/analytics':\n+        specifier: ^1.3.2\n+        version: 1.3.2(next@15.0.2(@babel/core@7.25.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n       class-variance-authority:\n         specifier: ^0.7.0\n         version: 0.7.0\n@@ -1596,6 +1599,17 @@ packages:\n   '@ungap/structured-clone@1.2.0':\n     resolution: {integrity: sha512-zuVdFrMJiuCDQUMCzQaD6KL28MjnqqN8XnAqiEq9PNm/hCPTSGfrXCOfwj1ow4LFb/tNymJPwsNbVePc1xFqrQ==}\n \n+  '@vercel/analytics@1.3.2':\n+    resolution: {integrity: sha512-n/Ws7skBbW+fUBMeg+jrT30+GP00jTHvCcL4fuVrShuML0uveEV/4vVUdvqEVnDgXIGfLm0GXW5EID2mCcRXhg==}\n+    peerDependencies:\n+      next: '>= 13'\n+      react: ^18.0 || ^19.0 || ^19.0.0-rc\n+    peerDependenciesMeta:\n+      next:\n+        optional: true\n+      react:\n+        optional: true\n+\n   '@web3-storage/multipart-parser@1.0.0':\n     resolution: {integrity: sha512-BEO6al7BYqcnfX15W2cnGR+Q566ACXAT9UQykORCWW80lmkpWsnEob6zJS1ZVBKsSJC8+7vJkHwlp+lXG1UCdw==}\n \n@@ -4658,6 +4672,13 @@ snapshots:\n \n   '@ungap/structured-clone@1.2.0': {}\n \n+  '@vercel/analytics@1.3.2(next@15.0.2(@babel/core@7.25.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)':\n+    dependencies:\n+      server-only: 0.0.1\n+    optionalDependencies:\n+      next: 15.0.2(@babel/core@7.25.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n+      react: 18.3.1\n+\n   '@web3-storage/multipart-parser@1.0.0':\n     optional: true\n \ndiff --git a/src/app/layout.tsx b/src/app/layout.tsx\nindex 1ca82f1..6c5dd20 100644\n--- a/src/app/layout.tsx\n+++ b/src/app/layout.tsx\n@@ -7,6 +7,7 @@ import { TailwindIndicator } from \"@/components/tailwind-indicator\"\n import \"@/styles/globals.css\"\n \n import type { Metadata, Viewport } from \"next\"\n+import { Analytics } from \"@vercel/analytics/react\"\n \n import { fontMono, fontSans } from \"@/lib/fonts\"\n import { Toaster } from \"@/components/ui/toaster\"\n@@ -86,6 +87,7 @@ export default function RootLayout({ children }: React.PropsWithChildren) {\n           </div>\n           <TailwindIndicator />\n         </ThemeProvider>\n+        <Analytics />\n         <Toaster />\n       </body>\n     </html>",
    "output": "chore: add analytics"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/app/_components/tasks-table.tsx b/src/app/_components/tasks-table.tsx\nindex 9cff88a..f2cabd0 100644\n--- a/src/app/_components/tasks-table.tsx\n+++ b/src/app/_components/tasks-table.tsx\n@@ -109,7 +109,7 @@ export function TasksTable({ promises }: TasksTableProps) {\n     {\n       id: \"status\",\n       label: \"Status\",\n-      type: \"select\",\n+      type: \"multi-select\",\n       options: tasks.status.enumValues.map((status) => ({\n         label: toSentenceCase(status),\n         value: status,",
    "output": "chore: select -> multi-select"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 174a58f..6f58329 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -137,7 +137,7 @@ importers:\n         version: 8.56.12\n       '@types/node':\n         specifier: ^22.7.8\n-        version: 22.8.6\n+        version: 22.8.7\n       '@types/react':\n         specifier: ^18.3.11\n         version: 18.3.12\n@@ -1484,8 +1484,8 @@ packages:\n   '@types/json5@0.0.29':\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n \n-  '@types/node@22.8.6':\n-    resolution: {integrity: sha512-tosuJYKrIqjQIlVCM4PEGxOmyg3FCPa/fViuJChnGeEIhjA46oy8FMVoF9su1/v8PNs2a8Q0iFNyOx0uOF91nw==}\n+  '@types/node@22.8.7':\n+    resolution: {integrity: sha512-LidcG+2UeYIWcMuMUpBKOnryBWG/rnmOHQR5apjn8myTQcx3rinFRn7DcIFhMnS0PPFSC6OafdIKEad0lj6U0Q==}\n \n   '@types/prop-types@15.7.13':\n     resolution: {integrity: sha512-hCZTSvwbzWGvhqxp/RqVqwU999pBf2vp7hzIjiYOsl8wqOmUxkQ6ddw1cV3l8811+kdUFus/q4d1Y3E3SyEifA==}\n@@ -4488,7 +4488,7 @@ snapshots:\n \n   '@types/json5@0.0.29': {}\n \n-  '@types/node@22.8.6':\n+  '@types/node@22.8.7':\n     dependencies:\n       undici-types: 6.19.8\n ",
    "output": "chore(deps): update dependency @types/node to v22.8.7"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 517ea60..174a58f 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -109,7 +109,7 @@ importers:\n         version: 0.0.1\n       sonner:\n         specifier: ^1.5.0\n-        version: 1.5.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n+        version: 1.6.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       tailwind-merge:\n         specifier: ^2.5.4\n         version: 2.5.4\n@@ -3123,11 +3123,11 @@ packages:\n   simple-swizzle@0.2.2:\n     resolution: {integrity: sha512-JA//kQgZtbuY83m+xT+tXJkmJncGMTFT+C+g2h2R9uxkYIrE2yy9sgmcLhCnw57/WSD+Eh3J97FPEDFnbXnDUg==}\n \n-  sonner@1.5.0:\n-    resolution: {integrity: sha512-FBjhG/gnnbN6FY0jaNnqZOMmB73R+5IiyYAw8yBj7L54ER7HB3fOSE5OFiQiE2iXWxeXKvg6fIP4LtVppHEdJA==}\n+  sonner@1.6.1:\n+    resolution: {integrity: sha512-0iD+eDJHyJitl069BC6wVDykQD56FMKk4TD6XkcCcikcDYaGsFKlSU0mZQXYWKPpFof3jlV/u4vGZc2KCqz8OQ==}\n     peerDependencies:\n-      react: ^18.0.0\n-      react-dom: ^18.0.0\n+      react: ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n+      react-dom: ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n \n   source-map-js@1.2.1:\n     resolution: {integrity: sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==}\n@@ -6246,7 +6246,7 @@ snapshots:\n       is-arrayish: 0.3.2\n     optional: true\n \n-  sonner@1.5.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1):\n+  sonner@1.6.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1):\n     dependencies:\n       react: 18.3.1\n       react-dom: 18.3.1(react@18.3.1)",
    "output": "fix(deps): update dependency sonner to v1.6.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex c9f1dd4..517ea60 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -158,7 +158,7 @@ importers:\n         version: 7.4.2\n       drizzle-kit:\n         specifier: ^0.27.0\n-        version: 0.27.0\n+        version: 0.27.1\n       eslint:\n         specifier: ^8.57.0\n         version: 8.57.1\n@@ -1871,8 +1871,8 @@ packages:\n     resolution: {integrity: sha512-ZmdL2rui+eB2YwhsWzjInR8LldtZHGDoQ1ugH85ppHKwpUHL7j7rN0Ti9NCnGiQbhaZ11FpR+7ao1dNsmduNUg==}\n     engines: {node: '>=12'}\n \n-  drizzle-kit@0.27.0:\n-    resolution: {integrity: sha512-vJJCPvKGLFcmOFBELKqcRng3Fc6qTOaKNAqetLEoysD7HjlSlJOWwM54FJlhpqA+cZcIdsL8r9/7v9JIFfs3MA==}\n+  drizzle-kit@0.27.1:\n+    resolution: {integrity: sha512-4BNA0T2blN+jW5wSwhtc+FIlCMuxYSMWCnYYdOBi5rttwq8aVXRUid0d0NCzcBKtZQSPZGAUxy+TXr7Q1OgEug==}\n     hasBin: true\n \n   drizzle-orm@0.36.0:\n@@ -4924,7 +4924,7 @@ snapshots:\n \n   dotenv@16.4.5: {}\n \n-  drizzle-kit@0.27.0:\n+  drizzle-kit@0.27.1:\n     dependencies:\n       '@drizzle-team/brocli': 0.10.2\n       '@esbuild-kit/esm-loader': 2.6.5",
    "output": "chore(deps): update dependency drizzle-kit to v0.27.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 3483f18..c9f1dd4 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -64,7 +64,7 @@ importers:\n         version: 2.1.1\n       cmdk:\n         specifier: ^1.0.0\n-        version: 1.0.1(@types/react-dom@18.3.1)(@types/react@18.3.12)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n+        version: 1.0.3(@types/react-dom@18.3.1)(@types/react@18.3.12)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       date-fns:\n         specifier: ^4.1.0\n         version: 4.1.0\n@@ -1740,8 +1740,8 @@ packages:\n     resolution: {integrity: sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==}\n     engines: {node: '>=6'}\n \n-  cmdk@1.0.1:\n-    resolution: {integrity: sha512-BrrauUJHeF0zGGDdWTXxok9mT1JN7fcgI7OK2wCwPRZFNj3ku/fzF07+OduSfQV8unyoTDbzX+0seoZwIwyBcQ==}\n+  cmdk@1.0.3:\n+    resolution: {integrity: sha512-2c3uTjwT4YeHj60q2k8S1B0WHSoGR6t5CPnec6PMFD2QF4gwid0t1VSPNeEmL02EwBwNky/A3gwPCOViKTtoPA==}\n     peerDependencies:\n       react: ^18 || ^19 || ^19.0.0-rc\n       react-dom: ^18 || ^19 || ^19.0.0-rc\n@@ -4797,7 +4797,7 @@ snapshots:\n \n   clsx@2.1.1: {}\n \n-  cmdk@1.0.1(@types/react-dom@18.3.1)(@types/react@18.3.12)(react-dom@18.3.1(react@18.3.1))(react@18.3.1):\n+  cmdk@1.0.3(@types/react-dom@18.3.1)(@types/react@18.3.12)(react-dom@18.3.1(react@18.3.1))(react@18.3.1):\n     dependencies:\n       '@radix-ui/react-dialog': 1.1.2(@types/react-dom@18.3.1)(@types/react@18.3.12)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       '@radix-ui/react-id': 1.1.0(@types/react@18.3.12)(react@18.3.1)",
    "output": "fix(deps): update dependency cmdk to v1.0.3"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 2c98f3d..3483f18 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -137,7 +137,7 @@ importers:\n         version: 8.56.12\n       '@types/node':\n         specifier: ^22.7.8\n-        version: 22.8.5\n+        version: 22.8.6\n       '@types/react':\n         specifier: ^18.3.11\n         version: 18.3.12\n@@ -1484,8 +1484,8 @@ packages:\n   '@types/json5@0.0.29':\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n \n-  '@types/node@22.8.5':\n-    resolution: {integrity: sha512-5iYk6AMPtsMbkZqCO1UGF9W5L38twq11S2pYWkybGHH2ogPUvXWNlQqJBzuEZWKj/WRH+QTeiv6ySWqJtvIEgA==}\n+  '@types/node@22.8.6':\n+    resolution: {integrity: sha512-tosuJYKrIqjQIlVCM4PEGxOmyg3FCPa/fViuJChnGeEIhjA46oy8FMVoF9su1/v8PNs2a8Q0iFNyOx0uOF91nw==}\n \n   '@types/prop-types@15.7.13':\n     resolution: {integrity: sha512-hCZTSvwbzWGvhqxp/RqVqwU999pBf2vp7hzIjiYOsl8wqOmUxkQ6ddw1cV3l8811+kdUFus/q4d1Y3E3SyEifA==}\n@@ -4488,7 +4488,7 @@ snapshots:\n \n   '@types/json5@0.0.29': {}\n \n-  '@types/node@22.8.5':\n+  '@types/node@22.8.6':\n     dependencies:\n       undici-types: 6.19.8\n ",
    "output": "chore(deps): update dependency @types/node to v22.8.6"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 0368071..2c98f3d 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -88,7 +88,7 @@ importers:\n         version: 0.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       nuqs:\n         specifier: ^2.0.0\n-        version: 2.1.0(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.2(@babel/core@7.25.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n+        version: 2.1.1(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.2(@babel/core@7.25.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n       postgres:\n         specifier: ^3.4.4\n         version: 3.4.5\n@@ -2664,8 +2664,8 @@ packages:\n     resolution: {integrity: sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==}\n     engines: {node: '>=0.10.0'}\n \n-  nuqs@2.1.0:\n-    resolution: {integrity: sha512-bJvw3g7PlXkJTmVNRFL0RIcHi9etF5/rIkMv7li3mqLwRz6iVUIVoRwJzqY5XCNe18qS3wRxfeYzOJ/sYrh6Rg==}\n+  nuqs@2.1.1:\n+    resolution: {integrity: sha512-iM2H8lMmhvk9bxupUs2oRle9usRNEAqppOkTMXOxD/uK85gOKAubU7T2zmPo8fnYQS4n5e/XswTiq+gLYGpy3w==}\n     peerDependencies:\n       '@remix-run/react': '>= 2'\n       next: '>= 14.2.0'\n@@ -5824,7 +5824,7 @@ snapshots:\n \n   normalize-range@0.1.2: {}\n \n-  nuqs@2.1.0(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.2(@babel/core@7.25.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1):\n+  nuqs@2.1.1(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.2(@babel/core@7.25.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1):\n     dependencies:\n       mitt: 3.0.1\n       react: 18.3.1",
    "output": "fix(deps): update dependency nuqs to v2.1.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 18071cc..0368071 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -137,7 +137,7 @@ importers:\n         version: 8.56.12\n       '@types/node':\n         specifier: ^22.7.8\n-        version: 22.8.4\n+        version: 22.8.5\n       '@types/react':\n         specifier: ^18.3.11\n         version: 18.3.12\n@@ -1484,8 +1484,8 @@ packages:\n   '@types/json5@0.0.29':\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n \n-  '@types/node@22.8.4':\n-    resolution: {integrity: sha512-SpNNxkftTJOPk0oN+y2bIqurEXHTA2AOZ3EJDDKeJ5VzkvvORSvmQXGQarcOzWV1ac7DCaPBEdMDxBsM+d8jWw==}\n+  '@types/node@22.8.5':\n+    resolution: {integrity: sha512-5iYk6AMPtsMbkZqCO1UGF9W5L38twq11S2pYWkybGHH2ogPUvXWNlQqJBzuEZWKj/WRH+QTeiv6ySWqJtvIEgA==}\n \n   '@types/prop-types@15.7.13':\n     resolution: {integrity: sha512-hCZTSvwbzWGvhqxp/RqVqwU999pBf2vp7hzIjiYOsl8wqOmUxkQ6ddw1cV3l8811+kdUFus/q4d1Y3E3SyEifA==}\n@@ -4488,7 +4488,7 @@ snapshots:\n \n   '@types/json5@0.0.29': {}\n \n-  '@types/node@22.8.4':\n+  '@types/node@22.8.5':\n     dependencies:\n       undici-types: 6.19.8\n ",
    "output": "chore(deps): update dependency @types/node to v22.8.5"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex ff6ea3f..18071cc 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -88,7 +88,7 @@ importers:\n         version: 0.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       nuqs:\n         specifier: ^2.0.0\n-        version: 2.0.4(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.2(@babel/core@7.25.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n+        version: 2.1.0(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.2(@babel/core@7.25.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n       postgres:\n         specifier: ^3.4.4\n         version: 3.4.5\n@@ -2664,8 +2664,8 @@ packages:\n     resolution: {integrity: sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==}\n     engines: {node: '>=0.10.0'}\n \n-  nuqs@2.0.4:\n-    resolution: {integrity: sha512-d0GQCOHW9o04slcTe9nfTgskCT/09K5pOMXu671Y8p7d/48KEKJLzZjklWXIt3pFjYaplErMZpXiLiYo0w8uQQ==}\n+  nuqs@2.1.0:\n+    resolution: {integrity: sha512-bJvw3g7PlXkJTmVNRFL0RIcHi9etF5/rIkMv7li3mqLwRz6iVUIVoRwJzqY5XCNe18qS3wRxfeYzOJ/sYrh6Rg==}\n     peerDependencies:\n       '@remix-run/react': '>= 2'\n       next: '>= 14.2.0'\n@@ -5824,7 +5824,7 @@ snapshots:\n \n   normalize-range@0.1.2: {}\n \n-  nuqs@2.0.4(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.2(@babel/core@7.25.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1):\n+  nuqs@2.1.0(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.2(@babel/core@7.25.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1):\n     dependencies:\n       mitt: 3.0.1\n       react: 18.3.1",
    "output": "fix(deps): update dependency nuqs to v2.1.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex ca5a69c..babb4c1 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -22,7 +22,7 @@ importers:\n         version: 2.1.2(@types/react-dom@18.3.1)(@types/react@18.3.12)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       '@radix-ui/react-icons':\n         specifier: ^1.3.0\n-        version: 1.3.0(react@18.3.1)\n+        version: 1.3.1(react@18.3.1)\n       '@radix-ui/react-label':\n         specifier: ^2.1.0\n         version: 2.1.0(@types/react-dom@18.3.1)(@types/react@18.3.12)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n@@ -1203,10 +1203,10 @@ packages:\n       '@types/react-dom':\n         optional: true\n \n-  '@radix-ui/react-icons@1.3.0':\n-    resolution: {integrity: sha512-jQxj/0LKgp+j9BiTXz3O3sgs26RNet2iLWmsPyRz2SIcR4q/4SbazXfnYwbAr+vLYKSfc7qxzyGQA1HLlYiuNw==}\n+  '@radix-ui/react-icons@1.3.1':\n+    resolution: {integrity: sha512-QvYompk0X+8Yjlo/Fv4McrzxohDdM5GgLHyQcPpcsPvlOSXCGFjdbuyGL5dzRbg0GpknAjQJJZzdiRK7iWVuFQ==}\n     peerDependencies:\n-      react: ^16.x || ^17.x || ^18.x\n+      react: ^16.x || ^17.x || ^18.x || ^19.x\n \n   '@radix-ui/react-id@1.0.1':\n     resolution: {integrity: sha512-tI7sT/kqYp8p96yGWY1OAnLHrqDgzHefRBKQ2YAkBS5ja7QLcZ9Z/uY7bEjPUatf8RomoXM8/1sMj1IJaE5UzQ==}\n@@ -4383,7 +4383,7 @@ snapshots:\n       '@types/react': 18.3.12\n       '@types/react-dom': 18.3.1\n \n-  '@radix-ui/react-icons@1.3.0(react@18.3.1)':\n+  '@radix-ui/react-icons@1.3.1(react@18.3.1)':\n     dependencies:\n       react: 18.3.1\n ",
    "output": "fix(deps): update dependency @radix-ui/react-icons to v1.3.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex e002eb0..ea25424 100644\n--- a/package.json\n+++ b/package.json\n@@ -44,7 +44,7 @@\n     \"clsx\": \"^2.1.1\",\n     \"cmdk\": \"^1.0.0\",\n     \"date-fns\": \"^4.1.0\",\n-    \"drizzle-orm\": \"^0.35.3\",\n+    \"drizzle-orm\": \"^0.36.0\",\n     \"export-to-csv\": \"^1.4.0\",\n     \"geist\": \"^1.3.1\",\n     \"nanoid\": \"^5.0.7\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 1a10a54..ca5a69c 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -69,8 +69,8 @@ importers:\n         specifier: ^4.1.0\n         version: 4.1.0\n       drizzle-orm:\n-        specifier: ^0.35.3\n-        version: 0.35.3(@libsql/client-wasm@0.14.0)(@types/react@18.3.12)(pg@8.13.1)(postgres@3.4.5)(react@18.3.1)\n+        specifier: ^0.36.0\n+        version: 0.36.0(@libsql/client-wasm@0.14.0)(@types/react@18.3.12)(pg@8.13.1)(postgres@3.4.5)(react@18.3.1)\n       export-to-csv:\n         specifier: ^1.4.0\n         version: 1.4.0\n@@ -2041,12 +2041,12 @@ packages:\n     resolution: {integrity: sha512-vJJCPvKGLFcmOFBELKqcRng3Fc6qTOaKNAqetLEoysD7HjlSlJOWwM54FJlhpqA+cZcIdsL8r9/7v9JIFfs3MA==}\n     hasBin: true\n \n-  drizzle-orm@0.35.3:\n-    resolution: {integrity: sha512-Uv6N+b36x4BaZlxc96e+ag7RnMapBLGhc4SSi2F7RDwqYJipWjaU/P68RUp1FbW9r+mxoDp8nMz2Eece8PJxfA==}\n+  drizzle-orm@0.36.0:\n+    resolution: {integrity: sha512-6BETYPdKSR7cDHC0ZfqZk2VrKJ8n/Rfd3ajFPsAbc69gi87nwZ6oBA2wUGMELHA0tQE4kUKN0Ds00LUZQ6Z69A==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=3'\n-      '@electric-sql/pglite': '>=0.1.1'\n+      '@electric-sql/pglite': '>=0.2.0'\n       '@libsql/client': '>=0.10.0'\n       '@libsql/client-wasm': '>=0.10.0'\n       '@neondatabase/serverless': '>=0.1'\n@@ -2082,6 +2082,8 @@ packages:\n         optional: true\n       '@libsql/client':\n         optional: true\n+      '@libsql/client-wasm':\n+        optional: true\n       '@neondatabase/serverless':\n         optional: true\n       '@op-engineering/op-sqlite':\n@@ -4121,10 +4123,12 @@ snapshots:\n     dependencies:\n       '@libsql/core': 0.14.0\n       js-base64: 3.7.7\n+    optional: true\n \n   '@libsql/core@0.14.0':\n     dependencies:\n       js-base64: 3.7.7\n+    optional: true\n \n   '@next/env@15.0.2': {}\n \n@@ -5256,10 +5260,9 @@ snapshots:\n     transitivePeerDependencies:\n       - supports-color\n \n-  drizzle-orm@0.35.3(@libsql/client-wasm@0.14.0)(@types/react@18.3.12)(pg@8.13.1)(postgres@3.4.5)(react@18.3.1):\n-    dependencies:\n-      '@libsql/client-wasm': 0.14.0\n+  drizzle-orm@0.36.0(@libsql/client-wasm@0.14.0)(@types/react@18.3.12)(pg@8.13.1)(postgres@3.4.5)(react@18.3.1):\n     optionalDependencies:\n+      '@libsql/client-wasm': 0.14.0\n       '@types/react': 18.3.12\n       pg: 8.13.1\n       postgres: 3.4.5\n@@ -6004,7 +6007,8 @@ snapshots:\n \n   jiti@1.21.6: {}\n \n-  js-base64@3.7.7: {}\n+  js-base64@3.7.7:\n+    optional: true\n \n   js-tokens@4.0.0: {}\n ",
    "output": "fix(deps): update dependency drizzle-orm to ^0.36.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 208902f..e002eb0 100644\n--- a/package.json\n+++ b/package.json\n@@ -75,7 +75,7 @@\n     \"@typescript-eslint/parser\": \"^8.11.0\",\n     \"autoprefixer\": \"^10.4.20\",\n     \"dotenv-cli\": \"^7.4.2\",\n-    \"drizzle-kit\": \"^0.26.2\",\n+    \"drizzle-kit\": \"^0.27.0\",\n     \"eslint\": \"^8.57.0\",\n     \"eslint-config-next\": \"^15.0.0\",\n     \"eslint-config-prettier\": \"^9.1.0\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 8a154f4..1a10a54 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -157,8 +157,8 @@ importers:\n         specifier: ^7.4.2\n         version: 7.4.2\n       drizzle-kit:\n-        specifier: ^0.26.2\n-        version: 0.26.2\n+        specifier: ^0.27.0\n+        version: 0.27.0\n       eslint:\n         specifier: ^8.57.0\n         version: 8.57.1\n@@ -281,8 +281,8 @@ packages:\n     resolution: {integrity: sha512-JWtuCu8VQsMladxVz/P4HzHUGCAwpuqacmowgXFs5XjxIgKuNjnLokQzuVjlTvIzODaDmpjT3oxcC48vyk9EWg==}\n     engines: {node: '>=6.9.0'}\n \n-  '@drizzle-team/brocli@0.10.1':\n-    resolution: {integrity: sha512-AHy0vjc+n/4w/8Mif+w86qpppHuF3AyXbcWW+R/W7GNA3F5/p2nuhlkCJaTXSLZheB4l1rtHzOfr9A7NwoR/Zg==}\n+  '@drizzle-team/brocli@0.10.2':\n+    resolution: {integrity: sha512-z33Il7l5dKjUgGULTqBsQBQwckHh5AbIuxhdsIxDDiZAzBOrZO6q9ogcWC65kU382AfynTfgNumVcNIjuIua6w==}\n \n   '@emnapi/runtime@1.3.1':\n     resolution: {integrity: sha512-kEBmG8KyqtxJZv+ygbEim+KCGtIq1fC22Ms3S4ziXmYKm8uyoLX0MHONVKwp+9opg390VaKRNt4a7A9NwmpNhw==}\n@@ -2037,8 +2037,8 @@ packages:\n     resolution: {integrity: sha512-ZmdL2rui+eB2YwhsWzjInR8LldtZHGDoQ1ugH85ppHKwpUHL7j7rN0Ti9NCnGiQbhaZ11FpR+7ao1dNsmduNUg==}\n     engines: {node: '>=12'}\n \n-  drizzle-kit@0.26.2:\n-    resolution: {integrity: sha512-cMq8omEKywjIy5KcqUo6LvEFxkl8/zYHsgYjFVXjmPWWtuW4blcz+YW9+oIhoaALgs2ebRjzXwsJgN9i6P49Dw==}\n+  drizzle-kit@0.27.0:\n+    resolution: {integrity: sha512-vJJCPvKGLFcmOFBELKqcRng3Fc6qTOaKNAqetLEoysD7HjlSlJOWwM54FJlhpqA+cZcIdsL8r9/7v9JIFfs3MA==}\n     hasBin: true\n \n   drizzle-orm@0.35.3:\n@@ -3715,7 +3715,7 @@ snapshots:\n       '@babel/helper-validator-identifier': 7.25.7\n       to-fast-properties: 2.0.0\n \n-  '@drizzle-team/brocli@0.10.1': {}\n+  '@drizzle-team/brocli@0.10.2': {}\n \n   '@emnapi/runtime@1.3.1':\n     dependencies:\n@@ -5247,9 +5247,9 @@ snapshots:\n \n   dotenv@16.4.5: {}\n \n-  drizzle-kit@0.26.2:\n+  drizzle-kit@0.27.0:\n     dependencies:\n-      '@drizzle-team/brocli': 0.10.1\n+      '@drizzle-team/brocli': 0.10.2\n       '@esbuild-kit/esm-loader': 2.6.5\n       esbuild: 0.19.12\n       esbuild-register: 3.6.0(esbuild@0.19.12)",
    "output": "chore(deps): update dependency drizzle-kit to ^0.27.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex e04877e..6d7c193 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -137,7 +137,7 @@ importers:\n         version: 8.56.12\n       '@types/node':\n         specifier: ^22.7.8\n-        version: 22.8.2\n+        version: 22.8.4\n       '@types/react':\n         specifier: ^18.3.11\n         version: 18.3.12\n@@ -1650,8 +1650,8 @@ packages:\n   '@types/json5@0.0.29':\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n \n-  '@types/node@22.8.2':\n-    resolution: {integrity: sha512-NzaRNFV+FZkvK/KLCsNdTvID0SThyrs5SHB6tsD/lajr22FGC73N2QeDPM2wHtVde8mgcXuSsHQkH5cX1pbPLw==}\n+  '@types/node@22.8.4':\n+    resolution: {integrity: sha512-SpNNxkftTJOPk0oN+y2bIqurEXHTA2AOZ3EJDDKeJ5VzkvvORSvmQXGQarcOzWV1ac7DCaPBEdMDxBsM+d8jWw==}\n \n   '@types/prop-types@15.7.13':\n     resolution: {integrity: sha512-hCZTSvwbzWGvhqxp/RqVqwU999pBf2vp7hzIjiYOsl8wqOmUxkQ6ddw1cV3l8811+kdUFus/q4d1Y3E3SyEifA==}\n@@ -4813,7 +4813,7 @@ snapshots:\n \n   '@types/json5@0.0.29': {}\n \n-  '@types/node@22.8.2':\n+  '@types/node@22.8.4':\n     dependencies:\n       undici-types: 6.19.8\n ",
    "output": "chore(deps): update dependency @types/node to v22.8.4"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 9cb8c74..a3db518 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -118,7 +118,7 @@ importers:\n         version: 1.0.7(tailwindcss@3.4.14)\n       vaul:\n         specifier: ^1.1.0\n-        version: 1.1.0(@types/react-dom@18.3.1)(@types/react@18.3.12)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n+        version: 1.1.1(@types/react-dom@18.3.1)(@types/react@18.3.12)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       zod:\n         specifier: ^3.23.8\n         version: 3.23.8\n@@ -3527,11 +3527,11 @@ packages:\n   util-deprecate@1.0.2:\n     resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}\n \n-  vaul@1.1.0:\n-    resolution: {integrity: sha512-YhO/bikcauk48hzhMhvIvT+U87cuCbNbKk9fF4Ou5UkI9t2KkBMernmdP37pCzF15hrv55fcny1YhexK8h6GVQ==}\n+  vaul@1.1.1:\n+    resolution: {integrity: sha512-+ejzF6ffQKPcfgS7uOrGn017g39F8SO4yLPXbBhpC7a0H+oPqPna8f1BUfXaz8eU4+pxbQcmjxW+jWBSbxjaFg==}\n     peerDependencies:\n-      react: ^16.8 || ^17.0 || ^18.0\n-      react-dom: ^16.8 || ^17.0 || ^18.0\n+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0\n+      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0\n \n   which-boxed-primitive@1.0.2:\n     resolution: {integrity: sha512-bwZdv0AKLpplFY2KZRX6TvyuN7ojjr7lwkg6ml0roIy9YeuSr7JS372qlNW18UQYzgYK9ziGcerWqZOmEn9VNg==}\n@@ -6847,7 +6847,7 @@ snapshots:\n \n   util-deprecate@1.0.2: {}\n \n-  vaul@1.1.0(@types/react-dom@18.3.1)(@types/react@18.3.12)(react-dom@18.3.1(react@18.3.1))(react@18.3.1):\n+  vaul@1.1.1(@types/react-dom@18.3.1)(@types/react@18.3.12)(react-dom@18.3.1(react@18.3.1))(react@18.3.1):\n     dependencies:\n       '@radix-ui/react-dialog': 1.1.2(@types/react-dom@18.3.1)(@types/react@18.3.12)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       react: 18.3.1",
    "output": "fix(deps): update dependency vaul to v1.1.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 8903cf7..9cb8c74 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -10,7 +10,7 @@ importers:\n     dependencies:\n       '@hookform/resolvers':\n         specifier: ^3.9.0\n-        version: 3.9.0(react-hook-form@7.53.1(react@18.3.1))\n+        version: 3.9.1(react-hook-form@7.53.1(react@18.3.1))\n       '@radix-ui/react-checkbox':\n         specifier: ^1.1.2\n         version: 1.1.2(@types/react-dom@18.3.1)(@types/react@18.3.12)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n@@ -756,8 +756,8 @@ packages:\n   '@floating-ui/utils@0.2.8':\n     resolution: {integrity: sha512-kym7SodPp8/wloecOpcmSnWJsK7M0E5Wg8UcFA+uO4B9s5d0ywXOEro/8HM9x0rW+TljRzul/14UYz3TleT3ig==}\n \n-  '@hookform/resolvers@3.9.0':\n-    resolution: {integrity: sha512-bU0Gr4EepJ/EQsH/IwEzYLsT/PEj5C0ynLQ4m+GSHS+xKH4TfSelhluTgOaoc4kA5s7eCsQbM4wvZLzELmWzUg==}\n+  '@hookform/resolvers@3.9.1':\n+    resolution: {integrity: sha512-ud2HqmGBM0P0IABqoskKWI6PEf6ZDDBZkFqe2Vnl+mTHCEHzr3ISjjZyCwTjC/qpL25JC9aIDkloQejvMeq0ug==}\n     peerDependencies:\n       react-hook-form: ^7.0.0\n \n@@ -3985,7 +3985,7 @@ snapshots:\n \n   '@floating-ui/utils@0.2.8': {}\n \n-  '@hookform/resolvers@3.9.0(react-hook-form@7.53.1(react@18.3.1))':\n+  '@hookform/resolvers@3.9.1(react-hook-form@7.53.1(react@18.3.1))':\n     dependencies:\n       react-hook-form: 7.53.1(react@18.3.1)\n ",
    "output": "fix(deps): update dependency @hookform/resolvers to v3.9.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 6369537..f50fd7d 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -137,7 +137,7 @@ importers:\n         version: 8.56.12\n       '@types/node':\n         specifier: ^22.7.8\n-        version: 22.8.1\n+        version: 22.8.2\n       '@types/react':\n         specifier: ^18.3.11\n         version: 18.3.12\n@@ -1650,8 +1650,8 @@ packages:\n   '@types/json5@0.0.29':\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n \n-  '@types/node@22.8.1':\n-    resolution: {integrity: sha512-k6Gi8Yyo8EtrNtkHXutUu2corfDf9su95VYVP10aGYMMROM6SAItZi0w1XszA6RtWTHSVp5OeFof37w0IEqCQg==}\n+  '@types/node@22.8.2':\n+    resolution: {integrity: sha512-NzaRNFV+FZkvK/KLCsNdTvID0SThyrs5SHB6tsD/lajr22FGC73N2QeDPM2wHtVde8mgcXuSsHQkH5cX1pbPLw==}\n \n   '@types/prop-types@15.7.13':\n     resolution: {integrity: sha512-hCZTSvwbzWGvhqxp/RqVqwU999pBf2vp7hzIjiYOsl8wqOmUxkQ6ddw1cV3l8811+kdUFus/q4d1Y3E3SyEifA==}\n@@ -4810,7 +4810,7 @@ snapshots:\n \n   '@types/json5@0.0.29': {}\n \n-  '@types/node@22.8.1':\n+  '@types/node@22.8.2':\n     dependencies:\n       undici-types: 6.19.8\n ",
    "output": "chore(deps): update dependency @types/node to v22.8.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 471f78e..d78abba 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -79,7 +79,7 @@ importers:\n         version: 1.3.1(next@15.0.1(@babel/core@7.25.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))\n       nanoid:\n         specifier: ^5.0.7\n-        version: 5.0.7\n+        version: 5.0.8\n       next:\n         specifier: ^15.0.0\n         version: 15.0.1(@babel/core@7.25.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n@@ -2769,8 +2769,8 @@ packages:\n     engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1}\n     hasBin: true\n \n-  nanoid@5.0.7:\n-    resolution: {integrity: sha512-oLxFY2gd2IqnjcYyOXD8XGCftpGtZP2AbHbOkthDkvRywH5ayNtPVy9YlOPcHckXzbLTCHpkb7FB+yuxKV13pQ==}\n+  nanoid@5.0.8:\n+    resolution: {integrity: sha512-TcJPw+9RV9dibz1hHUzlLVy8N4X9TnwirAjrU08Juo6BNKggzVfP2ZJ/3ZUSq15Xl5i85i+Z89XBO90pB2PghQ==}\n     engines: {node: ^18 || >=20}\n     hasBin: true\n \n@@ -6086,7 +6086,7 @@ snapshots:\n \n   nanoid@3.3.7: {}\n \n-  nanoid@5.0.7: {}\n+  nanoid@5.0.8: {}\n \n   natural-compare@1.4.0: {}\n ",
    "output": "fix(deps): update dependency nanoid to v5.0.8"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 9ba4730..208902f 100644\n--- a/package.json\n+++ b/package.json\n@@ -92,5 +92,5 @@\n   \"ct3aMetadata\": {\n     \"initVersion\": \"7.23.1\"\n   },\n-  \"packageManager\": \"pnpm@9.12.2\"\n+  \"packageManager\": \"pnpm@9.12.3\"\n }",
    "output": "chore(deps): update pnpm to v9.12.3"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 37e7b45..471f78e 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -191,7 +191,7 @@ importers:\n         version: 3.4.14\n       tsx:\n         specifier: ^4.19.1\n-        version: 4.19.1\n+        version: 4.19.2\n       typescript:\n         specifier: ^5.6.3\n         version: 5.6.3\n@@ -3442,8 +3442,8 @@ packages:\n   tslib@2.8.0:\n     resolution: {integrity: sha512-jWVzBLplnCmoaTr13V9dYbiQ99wvZRd0vNWaDRg+aVYRcjDF3nDksxFDE/+fkXnKhpnUUkmx5pK/v8mCtLVqZA==}\n \n-  tsx@4.19.1:\n-    resolution: {integrity: sha512-0flMz1lh74BR4wOvBjuh9olbnwqCPc35OOlfyzHba0Dc+QNUeWX/Gq2YTbnwcWPO3BMd8fkzRVrHcsR+a7z7rA==}\n+  tsx@4.19.2:\n+    resolution: {integrity: sha512-pOUl6Vo2LUq/bSa8S5q7b91cgNSjctn9ugq/+Mvow99qW6x/UZYwzxy/3NmqoT66eHYfCVvFvACC58UBPFf28g==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n \n@@ -6744,7 +6744,7 @@ snapshots:\n \n   tslib@2.8.0: {}\n \n-  tsx@4.19.1:\n+  tsx@4.19.2:\n     dependencies:\n       esbuild: 0.23.1\n       get-tsconfig: 4.8.1",
    "output": "chore(deps): update dependency tsx to v4.19.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 22149b2..37e7b45 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -125,7 +125,7 @@ importers:\n     devDependencies:\n       '@faker-js/faker':\n         specifier: ^9.0.3\n-        version: 9.0.3\n+        version: 9.1.0\n       '@ianvs/prettier-plugin-sort-imports':\n         specifier: ^4.3.1\n         version: 4.3.1(prettier@3.3.3)\n@@ -727,8 +727,8 @@ packages:\n     resolution: {integrity: sha512-d9zaMRSTIKDLhctzH12MtXvJKSSUhaHcjV+2Z+GK+EEY7XKpP5yR4x+N3TAcHTcu963nIr+TMcCb4DBCYX1z6Q==}\n     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n \n-  '@faker-js/faker@9.0.3':\n-    resolution: {integrity: sha512-lWrrK4QNlFSU+13PL9jMbMKLJYXDFu3tQfayBsMXX7KL/GiQeqfB1CzHkqD5UHBUtPAuPo6XwGbMFNdVMZObRA==}\n+  '@faker-js/faker@9.1.0':\n+    resolution: {integrity: sha512-GJvX9iM9PBtKScJVlXQ0tWpihK3i0pha/XAhzQa1hPK/ILLa1Wq3I63Ij7lRtqTwmdTxRCyrUhLC5Sly9SLbug==}\n     engines: {node: '>=18.0.0', npm: '>=9.0.0'}\n \n   '@floating-ui/core@1.6.8':\n@@ -3949,7 +3949,7 @@ snapshots:\n \n   '@eslint/js@8.57.1': {}\n \n-  '@faker-js/faker@9.0.3': {}\n+  '@faker-js/faker@9.1.0': {}\n \n   '@floating-ui/core@1.6.8':\n     dependencies:",
    "output": "chore(deps): update dependency @faker-js/faker to v9.1.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex d44706d..22149b2 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -137,7 +137,7 @@ importers:\n         version: 8.56.12\n       '@types/node':\n         specifier: ^22.7.8\n-        version: 22.8.0\n+        version: 22.8.1\n       '@types/react':\n         specifier: ^18.3.11\n         version: 18.3.12\n@@ -1640,8 +1640,8 @@ packages:\n   '@types/json5@0.0.29':\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n \n-  '@types/node@22.8.0':\n-    resolution: {integrity: sha512-84rafSBHC/z1i1E3p0cJwKA+CfYDNSXX9WSZBRopjIzLET8oNt6ht2tei4C7izwDeEiLLfdeSVBv1egOH916hg==}\n+  '@types/node@22.8.1':\n+    resolution: {integrity: sha512-k6Gi8Yyo8EtrNtkHXutUu2corfDf9su95VYVP10aGYMMROM6SAItZi0w1XszA6RtWTHSVp5OeFof37w0IEqCQg==}\n \n   '@types/prop-types@15.7.13':\n     resolution: {integrity: sha512-hCZTSvwbzWGvhqxp/RqVqwU999pBf2vp7hzIjiYOsl8wqOmUxkQ6ddw1cV3l8811+kdUFus/q4d1Y3E3SyEifA==}\n@@ -4793,7 +4793,7 @@ snapshots:\n \n   '@types/json5@0.0.29': {}\n \n-  '@types/node@22.8.0':\n+  '@types/node@22.8.1':\n     dependencies:\n       undici-types: 6.19.8\n ",
    "output": "chore(deps): update dependency @types/node to v22.8.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex fa32775..d44706d 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -137,7 +137,7 @@ importers:\n         version: 8.56.12\n       '@types/node':\n         specifier: ^22.7.8\n-        version: 22.7.9\n+        version: 22.8.0\n       '@types/react':\n         specifier: ^18.3.11\n         version: 18.3.12\n@@ -1640,8 +1640,8 @@ packages:\n   '@types/json5@0.0.29':\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n \n-  '@types/node@22.7.9':\n-    resolution: {integrity: sha512-jrTfRC7FM6nChvU7X2KqcrgquofrWLFDeYC1hKfwNWomVvrn7JIksqf344WN2X/y8xrgqBd2dJATZV4GbatBfg==}\n+  '@types/node@22.8.0':\n+    resolution: {integrity: sha512-84rafSBHC/z1i1E3p0cJwKA+CfYDNSXX9WSZBRopjIzLET8oNt6ht2tei4C7izwDeEiLLfdeSVBv1egOH916hg==}\n \n   '@types/prop-types@15.7.13':\n     resolution: {integrity: sha512-hCZTSvwbzWGvhqxp/RqVqwU999pBf2vp7hzIjiYOsl8wqOmUxkQ6ddw1cV3l8811+kdUFus/q4d1Y3E3SyEifA==}\n@@ -4793,7 +4793,7 @@ snapshots:\n \n   '@types/json5@0.0.29': {}\n \n-  '@types/node@22.7.9':\n+  '@types/node@22.8.0':\n     dependencies:\n       undici-types: 6.19.8\n ",
    "output": "chore(deps): update dependency @types/node to v22.8.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex bf6a145..fa32775 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -70,7 +70,7 @@ importers:\n         version: 4.1.0\n       drizzle-orm:\n         specifier: ^0.35.3\n-        version: 0.35.3(@libsql/client-wasm@0.14.0)(@types/react@18.3.12)(pg@8.13.1)(postgres@3.4.4)(react@18.3.1)\n+        version: 0.35.3(@libsql/client-wasm@0.14.0)(@types/react@18.3.12)(pg@8.13.1)(postgres@3.4.5)(react@18.3.1)\n       export-to-csv:\n         specifier: ^1.4.0\n         version: 1.4.0\n@@ -91,7 +91,7 @@ importers:\n         version: 2.0.4(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.1(@babel/core@7.25.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n       postgres:\n         specifier: ^3.4.4\n-        version: 3.4.4\n+        version: 3.4.5\n       react:\n         specifier: ^18.3.1\n         version: 18.3.1\n@@ -3025,8 +3025,8 @@ packages:\n     resolution: {integrity: sha512-9ZhXKM/rw350N1ovuWHbGxnGh/SNJ4cnxHiM0rxE4VN41wsg8P8zWn9hv/buK00RP4WvlOyr/RBDiptyxVbkZQ==}\n     engines: {node: '>=0.10.0'}\n \n-  postgres@3.4.4:\n-    resolution: {integrity: sha512-IbyN+9KslkqcXa8AO9fxpk97PA4pzewvpi2B3Dwy9u4zpV32QicaEdgmF3eSQUzdRk7ttDHQejNgAEr4XoeH4A==}\n+  postgres@3.4.5:\n+    resolution: {integrity: sha512-cDWgoah1Gez9rN3H4165peY9qfpEo+SA61oQv65O3cRUE1pOEoJWwddwcqKE8XZYjbblOJlYDlLV4h67HrEVDg==}\n     engines: {node: '>=12'}\n \n   prelude-ls@1.2.1:\n@@ -5234,13 +5234,13 @@ snapshots:\n     transitivePeerDependencies:\n       - supports-color\n \n-  drizzle-orm@0.35.3(@libsql/client-wasm@0.14.0)(@types/react@18.3.12)(pg@8.13.1)(postgres@3.4.4)(react@18.3.1):\n+  drizzle-orm@0.35.3(@libsql/client-wasm@0.14.0)(@types/react@18.3.12)(pg@8.13.1)(postgres@3.4.5)(react@18.3.1):\n     dependencies:\n       '@libsql/client-wasm': 0.14.0\n     optionalDependencies:\n       '@types/react': 18.3.12\n       pg: 8.13.1\n-      postgres: 3.4.4\n+      postgres: 3.4.5\n       react: 18.3.1\n \n   eastasianwidth@0.2.0: {}\n@@ -6318,7 +6318,7 @@ snapshots:\n     dependencies:\n       xtend: 4.0.2\n \n-  postgres@3.4.4: {}\n+  postgres@3.4.5: {}\n \n   prelude-ls@1.2.1: {}\n ",
    "output": "fix(deps): update dependency postgres to v3.4.5"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/lib/parsers.ts b/src/lib/parsers.ts\nindex e3f8ffa..92e918e 100644\n--- a/src/lib/parsers.ts\n+++ b/src/lib/parsers.ts\n@@ -1,4 +1,4 @@\n-import type { FilterCondition } from \"@/types\"\n+import { type FilterCondition } from \"@/types\"\n import { type Table } from \"drizzle-orm\"\n import { createParser } from \"nuqs/server\"\n import { z } from \"zod\"\n@@ -16,7 +16,7 @@ interface SortOption<T extends Table> {\n  */\n export function parseAsSort<T extends Table>(table: T) {\n   return createParser<SortOption<T>>({\n-    parse(queryValue) {\n+    parse: (queryValue) => {\n       const [column, order] =\n         (queryValue.split(\".\") as [string, \"asc\" | \"desc\"]) ?? []\n       if (\n@@ -27,11 +27,9 @@ export function parseAsSort<T extends Table>(table: T) {\n       ) {\n         return null\n       }\n-      return { column: column as keyof T[\"_\"][\"columns\"], order }\n-    },\n-    serialize({ column, order }) {\n-      return `${String(column)}.${order}`\n+      return { column, order }\n     },\n+    serialize: ({ column, order }) => `${String(column)}.${order}`,\n   })\n }\n \n@@ -48,7 +46,7 @@ export const filterConditionSchema = z.object({\n  */\n export function parseAsFilters<T extends Table>(table: T) {\n   return createParser<FilterCondition<T>[]>({\n-    parse(queryValue) {\n+    parse: (queryValue) => {\n       try {\n         const parsedValue = JSON.parse(queryValue)\n         if (!Array.isArray(parsedValue)) {",
    "output": "feat: update parsers"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/components/data-table/data-table-filter-list.tsx b/src/components/data-table/data-table-filter-list.tsx\nindex 361ba56..417dd36 100644\n--- a/src/components/data-table/data-table-filter-list.tsx\n+++ b/src/components/data-table/data-table-filter-list.tsx\n@@ -355,7 +355,7 @@ export function DataTableFilterList<TData>({\n       case \"date\":\n         const dateValue = Array.isArray(filter.value)\n           ? filter.value.filter(Boolean)\n-          : [filter.value, filter.value]\n+          : [filter.value, filter.value].filter(Boolean)\n \n         const displayValue =\n           filter.operator === \"isBetween\" && dateValue.length === 2",
    "output": "fix: isBetween date filter"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 118be0f..bf6a145 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -88,7 +88,7 @@ importers:\n         version: 0.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       nuqs:\n         specifier: ^2.0.0\n-        version: 2.0.3(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.1(@babel/core@7.25.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n+        version: 2.0.4(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.1(@babel/core@7.25.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n       postgres:\n         specifier: ^3.4.4\n         version: 3.4.4\n@@ -2815,8 +2815,8 @@ packages:\n     resolution: {integrity: sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==}\n     engines: {node: '>=0.10.0'}\n \n-  nuqs@2.0.3:\n-    resolution: {integrity: sha512-Bj8c52o2s3OenTk0jIX7+hHSFh/x2adN6j5/RCi8hqHpBtwTvdAnWiZcV7XU5OI8TQ2Scj5BgYVphDjbreAuAA==}\n+  nuqs@2.0.4:\n+    resolution: {integrity: sha512-d0GQCOHW9o04slcTe9nfTgskCT/09K5pOMXu671Y8p7d/48KEKJLzZjklWXIt3pFjYaplErMZpXiLiYo0w8uQQ==}\n     peerDependencies:\n       '@remix-run/react': '>= 2'\n       next: '>= 14.2.0'\n@@ -6126,7 +6126,7 @@ snapshots:\n \n   normalize-range@0.1.2: {}\n \n-  nuqs@2.0.3(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.1(@babel/core@7.25.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1):\n+  nuqs@2.0.4(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.1(@babel/core@7.25.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1):\n     dependencies:\n       mitt: 3.0.1\n       react: 18.3.1",
    "output": "fix(deps): update dependency nuqs to v2.0.4"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex ef35565..118be0f 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -70,7 +70,7 @@ importers:\n         version: 4.1.0\n       drizzle-orm:\n         specifier: ^0.35.3\n-        version: 0.35.3(@libsql/client-wasm@0.14.0)(@types/react@18.3.12)(pg@8.13.0)(postgres@3.4.4)(react@18.3.1)\n+        version: 0.35.3(@libsql/client-wasm@0.14.0)(@types/react@18.3.12)(pg@8.13.1)(postgres@3.4.4)(react@18.3.1)\n       export-to-csv:\n         specifier: ^1.4.0\n         version: 1.4.0\n@@ -173,7 +173,7 @@ importers:\n         version: 3.17.5(tailwindcss@3.4.14)\n       pg:\n         specifier: ^8.13.0\n-        version: 8.13.0\n+        version: 8.13.1\n       postcss:\n         specifier: ^8.4.47\n         version: 8.4.47\n@@ -2933,8 +2933,8 @@ packages:\n     resolution: {integrity: sha512-qTAAlrEsl8s4OiEQY69wDvcMIdQN6wdz5ojQiOy6YRMuynxenON0O5oCpJI6lshc6scgAY8qvJ2On/p+CXY0GA==}\n     engines: {node: '>=4'}\n \n-  pg@8.13.0:\n-    resolution: {integrity: sha512-34wkUTh3SxTClfoHB3pQ7bIMvw9dpFU1audQQeZG837fmHfHpr14n/AELVDoOYVDW2h5RDWU78tFjkD+erSBsw==}\n+  pg@8.13.1:\n+    resolution: {integrity: sha512-OUir1A0rPNZlX//c7ksiu7crsGZTKSOXJPgtNiHGIlC9H0lO+NC6ZDYksSgBYY/thSWhnSRBv8w1lieNNGATNQ==}\n     engines: {node: '>= 8.0.0'}\n     peerDependencies:\n       pg-native: '>=3.0.1'\n@@ -5234,12 +5234,12 @@ snapshots:\n     transitivePeerDependencies:\n       - supports-color\n \n-  drizzle-orm@0.35.3(@libsql/client-wasm@0.14.0)(@types/react@18.3.12)(pg@8.13.0)(postgres@3.4.4)(react@18.3.1):\n+  drizzle-orm@0.35.3(@libsql/client-wasm@0.14.0)(@types/react@18.3.12)(pg@8.13.1)(postgres@3.4.4)(react@18.3.1):\n     dependencies:\n       '@libsql/client-wasm': 0.14.0\n     optionalDependencies:\n       '@types/react': 18.3.12\n-      pg: 8.13.0\n+      pg: 8.13.1\n       postgres: 3.4.4\n       react: 18.3.1\n \n@@ -6227,9 +6227,9 @@ snapshots:\n \n   pg-int8@1.0.1: {}\n \n-  pg-pool@3.7.0(pg@8.13.0):\n+  pg-pool@3.7.0(pg@8.13.1):\n     dependencies:\n-      pg: 8.13.0\n+      pg: 8.13.1\n \n   pg-protocol@1.7.0: {}\n \n@@ -6241,10 +6241,10 @@ snapshots:\n       postgres-date: 1.0.7\n       postgres-interval: 1.2.0\n \n-  pg@8.13.0:\n+  pg@8.13.1:\n     dependencies:\n       pg-connection-string: 2.7.0\n-      pg-pool: 3.7.0(pg@8.13.0)\n+      pg-pool: 3.7.0(pg@8.13.1)\n       pg-protocol: 1.7.0\n       pg-types: 2.2.0\n       pgpass: 1.0.5",
    "output": "chore(deps): update dependency pg to v8.13.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/.github/FUNDING.yml b/.github/FUNDING.yml\ndeleted file mode 100644\nindex e9fef41..0000000\n--- a/.github/FUNDING.yml\n+++ /dev/null\n@@ -1 +0,0 @@\n-github: [sadmann7]",
    "output": "chore: cleanup"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/.github/FUNDING.yml b/.github/FUNDING.yml\nindex 30a0d8f..e9fef41 100644\n--- a/.github/FUNDING.yml\n+++ b/.github/FUNDING.yml\n@@ -1,15 +1 @@\n-# These are supported funding model platforms\n-\n github: [sadmann7]\n-patreon: # Replace with a single Patreon username\n-open_collective: # Replace with a single Open Collective username\n-ko_fi: # Replace with a single Ko-fi username\n-tidelift: # Replace with a single Tidelift platform-name/package-name e.g., npm/babel\n-community_bridge: # Replace with a single Community Bridge project-name e.g., cloud-foundry\n-liberapay: # Replace with a single Liberapay username\n-issuehunt: # Replace with a single IssueHunt username\n-lfx_crowdfunding: # Replace with a single LFX Crowdfunding project-name e.g., cloud-foundry\n-polar: # Replace with a single Polar username\n-buy_me_a_coffee: # Replace with a single Buy Me a Coffee username\n-thanks_dev: # Replace with a single thanks.dev username\n-custom: # Replace with up to 4 custom sponsorship URLs e.g., ['link1', 'link2']",
    "output": "chore: update FUNDING.yml"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/.github/FUNDING.yml b/.github/FUNDING.yml\nnew file mode 100644\nindex 0000000..30a0d8f\n--- /dev/null\n+++ b/.github/FUNDING.yml\n@@ -0,0 +1,15 @@\n+# These are supported funding model platforms\n+\n+github: [sadmann7]\n+patreon: # Replace with a single Patreon username\n+open_collective: # Replace with a single Open Collective username\n+ko_fi: # Replace with a single Ko-fi username\n+tidelift: # Replace with a single Tidelift platform-name/package-name e.g., npm/babel\n+community_bridge: # Replace with a single Community Bridge project-name e.g., cloud-foundry\n+liberapay: # Replace with a single Liberapay username\n+issuehunt: # Replace with a single IssueHunt username\n+lfx_crowdfunding: # Replace with a single LFX Crowdfunding project-name e.g., cloud-foundry\n+polar: # Replace with a single Polar username\n+buy_me_a_coffee: # Replace with a single Buy Me a Coffee username\n+thanks_dev: # Replace with a single thanks.dev username\n+custom: # Replace with up to 4 custom sponsorship URLs e.g., ['link1', 'link2']",
    "output": "chore: add FUNDING.yml"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/components/data-table/data-table-filter-list.tsx b/src/components/data-table/data-table-filter-list.tsx\nindex cd1d8e3..361ba56 100644\n--- a/src/components/data-table/data-table-filter-list.tsx\n+++ b/src/components/data-table/data-table-filter-list.tsx\n@@ -511,7 +511,7 @@ export function DataTableFilterList<TData>({\n             </p>\n           </div>\n         )}\n-        <div className=\"flex max-h-40 flex-col gap-2 overflow-y-auto pr-1 py-0.5\">\n+        <div className=\"flex max-h-40 flex-col gap-2 overflow-y-auto py-0.5 pr-1\">\n           {filters.map((filter, index) => {\n             const filterId = `${id}-filter-${index}`\n             const joinOperatorListboxId = `${filterId}-join-operator-listbox`",
    "output": "chore: fix formatting"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/components/data-table/data-table-filter-list.tsx b/src/components/data-table/data-table-filter-list.tsx\nindex 97ee3b2..cd1d8e3 100644\n--- a/src/components/data-table/data-table-filter-list.tsx\n+++ b/src/components/data-table/data-table-filter-list.tsx\n@@ -511,7 +511,7 @@ export function DataTableFilterList<TData>({\n             </p>\n           </div>\n         )}\n-        <div className=\"flex max-h-40 flex-col gap-2 overflow-y-auto pr-1\">\n+        <div className=\"flex max-h-40 flex-col gap-2 overflow-y-auto pr-1 py-0.5\">\n           {filters.map((filter, index) => {\n             const filterId = `${id}-filter-${index}`\n             const joinOperatorListboxId = `${filterId}-join-operator-listbox`",
    "output": "fix: data table filter style overflow (#649)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex e53e05a..ef35565 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -88,7 +88,7 @@ importers:\n         version: 0.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       nuqs:\n         specifier: ^2.0.0\n-        version: 2.0.1(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.1(@babel/core@7.25.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n+        version: 2.0.3(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.1(@babel/core@7.25.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n       postgres:\n         specifier: ^3.4.4\n         version: 3.4.4\n@@ -2815,8 +2815,8 @@ packages:\n     resolution: {integrity: sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==}\n     engines: {node: '>=0.10.0'}\n \n-  nuqs@2.0.1:\n-    resolution: {integrity: sha512-y0TOlNFR6QwZmIYx8cxb9zwPPlrY8mrSM4rr44EiwpE5/Nq1+BuLttW5ElctINOq4gi/ezK5WMQ48rTKjqG1EQ==}\n+  nuqs@2.0.3:\n+    resolution: {integrity: sha512-Bj8c52o2s3OenTk0jIX7+hHSFh/x2adN6j5/RCi8hqHpBtwTvdAnWiZcV7XU5OI8TQ2Scj5BgYVphDjbreAuAA==}\n     peerDependencies:\n       '@remix-run/react': '>= 2'\n       next: '>= 14.2.0'\n@@ -6126,7 +6126,7 @@ snapshots:\n \n   normalize-range@0.1.2: {}\n \n-  nuqs@2.0.1(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.1(@babel/core@7.25.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1):\n+  nuqs@2.0.3(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.1(@babel/core@7.25.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1):\n     dependencies:\n       mitt: 3.0.1\n       react: 18.3.1",
    "output": "fix(deps): update dependency nuqs to v2.0.3"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/components/data-table/data-table-filter-list.tsx b/src/components/data-table/data-table-filter-list.tsx\nindex adc9582..4117a62 100644\n--- a/src/components/data-table/data-table-filter-list.tsx\n+++ b/src/components/data-table/data-table-filter-list.tsx\n@@ -211,7 +211,7 @@ export function DataTableFilterList<TData>({\n             </FacetedFilterTrigger>\n             <FacetedFilterContent\n               id={`${inputId}-listbox`}\n-              className=\"w-[12.5rem]\"\n+              className=\"w-[12.5rem] origin-[var(--radix-popover-content-transform-origin)]\"\n             >\n               <FacetedFilterInput\n                 placeholder={filterField?.label ?? \"Search options...\"}\n@@ -313,7 +313,7 @@ export function DataTableFilterList<TData>({\n             </FacetedFilterTrigger>\n             <FacetedFilterContent\n               id={`${inputId}-listbox`}\n-              className=\"w-[12.5rem]\"\n+              className=\"w-[12.5rem] origin-[var(--radix-popover-content-transform-origin)]\"\n             >\n               <FacetedFilterInput\n                 aria-label={`Search ${filterField?.label} options`}\n@@ -507,7 +507,7 @@ export function DataTableFilterList<TData>({\n         id={`${id}-filter-dialog`}\n         align=\"start\"\n         className={cn(\n-          \"flex w-[36rem] flex-col p-4\",\n+          \"flex w-[36rem] origin-[var(--radix-popover-content-transform-origin)] flex-col p-4\",\n           filters.length > 0 ? \"gap-3.5\" : \"gap-2\"\n         )}\n       >\n@@ -553,6 +553,7 @@ export function DataTableFilterList<TData>({\n                     </SelectTrigger>\n                     <SelectContent\n                       id={joinOperatorListboxId}\n+                      position=\"popper\"\n                       className=\"min-w-[var(--radix-select-trigger-width)] lowercase\"\n                     >\n                       {dataTableConfig.joinOperators.map((op) => (",
    "output": "feat: origin-aware popover"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/components/data-table/data-table-filter-list.tsx b/src/components/data-table/data-table-filter-list.tsx\nindex 0c7a0c5..adc9582 100644\n--- a/src/components/data-table/data-table-filter-list.tsx\n+++ b/src/components/data-table/data-table-filter-list.tsx\n@@ -82,15 +82,18 @@ export function DataTableFilterList<TData>({\n \n   function addFilter() {\n     const firstColumn = filterFields[0]\n-    if (firstColumn) {\n-      const newFilter: FilterCondition<TData> = {\n+\n+    if (!firstColumn) return\n+\n+    void setFilters([\n+      ...filters,\n+      {\n         id: firstColumn.id,\n         value: \"\",\n         type: firstColumn.type,\n         operator: getDefaultFilterOperator(firstColumn.type),\n-      }\n-      void setFilters([...filters, newFilter])\n-    }\n+      },\n+    ])\n   }\n \n   function updateFilter({\n@@ -143,8 +146,11 @@ export function DataTableFilterList<TData>({\n     if (filter.operator === \"isEmpty\" || filter.operator === \"isNotEmpty\") {\n       return (\n         <div\n-          aria-hidden=\"true\"\n-          className=\"pointer-events-none h-8 w-full rounded border border-dashed\"\n+          id={inputId}\n+          role=\"status\"\n+          aria-live=\"polite\"\n+          aria-label={`${filterField.label} filter is ${filter.operator === \"isEmpty\" ? \"empty\" : \"not empty\"}`}\n+          className=\"h-8 w-full rounded border border-dashed\"\n         />\n       )\n     }",
    "output": "feat: update empty fields"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/components/data-table/data-table-filter-list.tsx b/src/components/data-table/data-table-filter-list.tsx\nindex 4ecf9ef..0c7a0c5 100644\n--- a/src/components/data-table/data-table-filter-list.tsx\n+++ b/src/components/data-table/data-table-filter-list.tsx\n@@ -73,6 +73,7 @@ export function DataTableFilterList<TData>({\n   const [joinOperator, setJoinOperator] = useQueryState<JoinOperator>(\n     \"joinOperator\",\n     parseAsStringEnum([\"and\", \"or\"]).withDefault(\"and\").withOptions({\n+      clearOnDefault: true,\n       shallow,\n     })\n   )\n@@ -487,7 +488,10 @@ export function DataTableFilterList<TData>({\n           <Icons.listFilter className=\"mr-2 size-3.5\" aria-hidden=\"true\" />\n           Filters\n           {filters.length > 0 && (\n-            <Badge variant=\"secondary\" className=\"ml-2 rounded-sm\">\n+            <Badge\n+              variant=\"secondary\"\n+              className=\"ml-2 rounded-sm font-mono text-xs\"\n+            >\n               {filters.length}\n             </Badge>\n           )}",
    "output": "feat: update filter again"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 5af6363..e24816c 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -137,7 +137,7 @@ importers:\n         version: 8.56.12\n       '@types/node':\n         specifier: ^22.7.8\n-        version: 22.7.8\n+        version: 22.7.9\n       '@types/react':\n         specifier: ^18.3.11\n         version: 18.3.11\n@@ -1640,8 +1640,8 @@ packages:\n   '@types/json5@0.0.29':\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n \n-  '@types/node@22.7.8':\n-    resolution: {integrity: sha512-a922jJy31vqR5sk+kAdIENJjHblqcZ4RmERviFsER4WJcEONqxKcjNOlk0q7OUfrF5sddT+vng070cdfMlrPLg==}\n+  '@types/node@22.7.9':\n+    resolution: {integrity: sha512-jrTfRC7FM6nChvU7X2KqcrgquofrWLFDeYC1hKfwNWomVvrn7JIksqf344WN2X/y8xrgqBd2dJATZV4GbatBfg==}\n \n   '@types/prop-types@15.7.13':\n     resolution: {integrity: sha512-hCZTSvwbzWGvhqxp/RqVqwU999pBf2vp7hzIjiYOsl8wqOmUxkQ6ddw1cV3l8811+kdUFus/q4d1Y3E3SyEifA==}\n@@ -4793,7 +4793,7 @@ snapshots:\n \n   '@types/json5@0.0.29': {}\n \n-  '@types/node@22.7.8':\n+  '@types/node@22.7.9':\n     dependencies:\n       undici-types: 6.19.8\n ",
    "output": "chore(deps): update dependency @types/node to v22.7.9"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 8bf0612..4b5a25f 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -88,7 +88,7 @@ importers:\n         version: 0.3.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       nuqs:\n         specifier: ^2.0.0\n-        version: 2.0.0(@babel/core@7.25.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3)\n+        version: 2.0.1(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.0(@babel/core@7.25.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)\n       postgres:\n         specifier: ^3.4.4\n         version: 3.4.4\n@@ -2815,10 +2815,20 @@ packages:\n     resolution: {integrity: sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==}\n     engines: {node: '>=0.10.0'}\n \n-  nuqs@2.0.0:\n-    resolution: {integrity: sha512-atnb/zVSGF25ULMGe+udBWtnNKRzi/oqd8e+6xPYw/ScMMO63P62g+iCyTlE6j5qnrw44boIw4SNhPyenEYCHg==}\n+  nuqs@2.0.1:\n+    resolution: {integrity: sha512-y0TOlNFR6QwZmIYx8cxb9zwPPlrY8mrSM4rr44EiwpE5/Nq1+BuLttW5ElctINOq4gi/ezK5WMQ48rTKjqG1EQ==}\n     peerDependencies:\n+      '@remix-run/react': '>= 2'\n+      next: '>= 14.2.0'\n       react: '>= 18.2.0'\n+      react-router-dom: '>= 6'\n+    peerDependenciesMeta:\n+      '@remix-run/react':\n+        optional: true\n+      next:\n+        optional: true\n+      react-router-dom:\n+        optional: true\n \n   object-assign@4.1.1:\n     resolution: {integrity: sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==}\n@@ -6116,7 +6126,7 @@ snapshots:\n \n   normalize-range@0.1.2: {}\n \n-  nuqs@2.0.0(@babel/core@7.25.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3):\n+  nuqs@2.0.1(@remix-run/react@2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3))(next@15.0.0(@babel/core@7.25.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-router-dom@6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1):\n     dependencies:\n       mitt: 3.0.1\n       react: 18.3.1\n@@ -6124,15 +6134,6 @@ snapshots:\n       '@remix-run/react': 2.13.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.6.3)\n       next: 15.0.0(@babel/core@7.25.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       react-router-dom: 6.27.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n-    transitivePeerDependencies:\n-      - '@babel/core'\n-      - '@opentelemetry/api'\n-      - '@playwright/test'\n-      - babel-plugin-macros\n-      - babel-plugin-react-compiler\n-      - react-dom\n-      - sass\n-      - typescript\n \n   object-assign@4.1.1: {}\n ",
    "output": "fix(deps): update dependency nuqs to v2.0.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/app/page.tsx b/src/app/page.tsx\nindex e947dbc..9e95138 100644\n--- a/src/app/page.tsx\n+++ b/src/app/page.tsx\n@@ -20,7 +20,7 @@ export interface IndexPageProps {\n }\n \n export default async function IndexPage({ searchParams }: IndexPageProps) {\n-  const search = searchParamsSchema.parse(searchParams)\n+  const search = searchParamsSchema.parse(await searchParams)\n \n   const promises = Promise.all([\n     getTasks(search),",
    "output": "fix: deployment crash (#636)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex ee2087a..546dc0a 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -137,7 +137,7 @@ importers:\n         version: 8.56.12\n       '@types/node':\n         specifier: ^22.7.4\n-        version: 22.7.7\n+        version: 22.7.8\n       '@types/react':\n         specifier: ^18.3.11\n         version: 18.3.11\n@@ -1613,8 +1613,8 @@ packages:\n   '@types/json5@0.0.29':\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n \n-  '@types/node@22.7.7':\n-    resolution: {integrity: sha512-SRxCrrg9CL/y54aiMCG3edPKdprgMVGDXjA3gB8UmmBW5TcXzRUYAh8EWzTnSJFAd1rgImPELza+A3bJ+qxz8Q==}\n+  '@types/node@22.7.8':\n+    resolution: {integrity: sha512-a922jJy31vqR5sk+kAdIENJjHblqcZ4RmERviFsER4WJcEONqxKcjNOlk0q7OUfrF5sddT+vng070cdfMlrPLg==}\n \n   '@types/prop-types@15.7.13':\n     resolution: {integrity: sha512-hCZTSvwbzWGvhqxp/RqVqwU999pBf2vp7hzIjiYOsl8wqOmUxkQ6ddw1cV3l8811+kdUFus/q4d1Y3E3SyEifA==}\n@@ -4712,7 +4712,7 @@ snapshots:\n \n   '@types/json5@0.0.29': {}\n \n-  '@types/node@22.7.7':\n+  '@types/node@22.7.8':\n     dependencies:\n       undici-types: 6.19.8\n ",
    "output": "chore(deps): update dependency @types/node to v22.7.8"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex fd0eed1..a19d9bb 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -70,7 +70,7 @@ importers:\n         version: 4.1.0\n       drizzle-orm:\n         specifier: ^0.35.0\n-        version: 0.35.2(@types/react@18.3.11)(pg@8.13.0)(postgres@3.4.4)(react@18.3.1)\n+        version: 0.35.3(@libsql/client-wasm@0.14.0)(@types/react@18.3.11)(pg@8.13.0)(postgres@3.4.4)(react@18.3.1)\n       export-to-csv:\n         specifier: ^1.4.0\n         version: 1.4.0\n@@ -792,6 +792,14 @@ packages:\n   '@jridgewell/trace-mapping@0.3.25':\n     resolution: {integrity: sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==}\n \n+  '@libsql/client-wasm@0.14.0':\n+    resolution: {integrity: sha512-gB/jtz0xuwrqAHApBv9e9JSew2030Fhj2edyZ83InZ4yPj/Q2LTUlEhaspEYT0T0xsAGqPy38uGrmq/OGS+DdQ==}\n+    bundledDependencies:\n+      - '@libsql/libsql-wasm-experimental'\n+\n+  '@libsql/core@0.14.0':\n+    resolution: {integrity: sha512-nhbuXf7GP3PSZgdCY2Ecj8vz187ptHlZQ0VRc751oB2C1W8jQUXKKklvt7t1LJiUTQBVJuadF628eUk+3cRi4Q==}\n+\n   '@next/env@14.2.15':\n     resolution: {integrity: sha512-S1qaj25Wru2dUpcIZMjxeMVSwkt8BK4dmWHHiBuRstcIyOsMapqT4A4jSB6onvqeygkSSmOkyny9VVx8JIGamQ==}\n \n@@ -1876,13 +1884,14 @@ packages:\n     resolution: {integrity: sha512-cMq8omEKywjIy5KcqUo6LvEFxkl8/zYHsgYjFVXjmPWWtuW4blcz+YW9+oIhoaALgs2ebRjzXwsJgN9i6P49Dw==}\n     hasBin: true\n \n-  drizzle-orm@0.35.2:\n-    resolution: {integrity: sha512-bLQtRchl8QvRo2MyG6kcZC90UDzR7Ubir4YwOHV3cZPdJbF+4jU/Yt0QOczsoXe25wLRt6CtCWLXtSDQKft3yg==}\n+  drizzle-orm@0.35.3:\n+    resolution: {integrity: sha512-Uv6N+b36x4BaZlxc96e+ag7RnMapBLGhc4SSi2F7RDwqYJipWjaU/P68RUp1FbW9r+mxoDp8nMz2Eece8PJxfA==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=3'\n       '@electric-sql/pglite': '>=0.1.1'\n       '@libsql/client': '>=0.10.0'\n+      '@libsql/client-wasm': '>=0.10.0'\n       '@neondatabase/serverless': '>=0.1'\n       '@op-engineering/op-sqlite': '>=2'\n       '@opentelemetry/api': ^1.4.1\n@@ -2502,6 +2511,9 @@ packages:\n     resolution: {integrity: sha512-2yTgeWTWzMWkHu6Jp9NKgePDaYHbntiwvYuuJLbbN9vl7DC9DvXKOB2BC3ZZ92D3cvV/aflH0osDfwpHepQ53w==}\n     hasBin: true\n \n+  js-base64@3.7.7:\n+    resolution: {integrity: sha512-7rCnleh0z2CkXhH67J8K1Ytz0b2Y+yxTPL+/KOJoa20hfnVQ/3/T6W/KflYI4bRHRagNeXeU2bkNGI3v1oS/lw==}\n+\n   js-tokens@4.0.0:\n     resolution: {integrity: sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==}\n \n@@ -3835,6 +3847,15 @@ snapshots:\n       '@jridgewell/resolve-uri': 3.1.2\n       '@jridgewell/sourcemap-codec': 1.5.0\n \n+  '@libsql/client-wasm@0.14.0':\n+    dependencies:\n+      '@libsql/core': 0.14.0\n+      js-base64: 3.7.7\n+\n+  '@libsql/core@0.14.0':\n+    dependencies:\n+      js-base64: 3.7.7\n+\n   '@next/env@14.2.15': {}\n \n   '@next/eslint-plugin-next@14.2.15':\n@@ -4937,7 +4958,9 @@ snapshots:\n     transitivePeerDependencies:\n       - supports-color\n \n-  drizzle-orm@0.35.2(@types/react@18.3.11)(pg@8.13.0)(postgres@3.4.4)(react@18.3.1):\n+  drizzle-orm@0.35.3(@libsql/client-wasm@0.14.0)(@types/react@18.3.11)(pg@8.13.0)(postgres@3.4.4)(react@18.3.1):\n+    dependencies:\n+      '@libsql/client-wasm': 0.14.0\n     optionalDependencies:\n       '@types/react': 18.3.11\n       pg: 8.13.0\n@@ -5704,6 +5727,8 @@ snapshots:\n \n   jiti@1.21.6: {}\n \n+  js-base64@3.7.7: {}\n+\n   js-tokens@4.0.0: {}\n \n   js-yaml@4.1.0:",
    "output": "fix(deps): update dependency drizzle-orm to v0.35.3"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 37f3de2..909d24e 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -134,7 +134,7 @@ importers:\n         version: 8.56.12\n       '@types/node':\n         specifier: ^22.7.4\n-        version: 22.7.6\n+        version: 22.7.7\n       '@types/react':\n         specifier: ^18.3.11\n         version: 18.3.11\n@@ -1500,8 +1500,8 @@ packages:\n   '@types/json5@0.0.29':\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n \n-  '@types/node@22.7.6':\n-    resolution: {integrity: sha512-/d7Rnj0/ExXDMcioS78/kf1lMzYk4BZV8MZGTBKzTGZ6/406ukkbYlIsZmMPhcR5KlkunDHQLrtAVmSq7r+mSw==}\n+  '@types/node@22.7.7':\n+    resolution: {integrity: sha512-SRxCrrg9CL/y54aiMCG3edPKdprgMVGDXjA3gB8UmmBW5TcXzRUYAh8EWzTnSJFAd1rgImPELza+A3bJ+qxz8Q==}\n \n   '@types/prop-types@15.7.13':\n     resolution: {integrity: sha512-hCZTSvwbzWGvhqxp/RqVqwU999pBf2vp7hzIjiYOsl8wqOmUxkQ6ddw1cV3l8811+kdUFus/q4d1Y3E3SyEifA==}\n@@ -4491,7 +4491,7 @@ snapshots:\n \n   '@types/json5@0.0.29': {}\n \n-  '@types/node@22.7.6':\n+  '@types/node@22.7.7':\n     dependencies:\n       undici-types: 6.19.8\n ",
    "output": "chore(deps): update dependency @types/node to v22.7.7"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 619aba2..37f3de2 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -10,7 +10,7 @@ importers:\n     dependencies:\n       '@hookform/resolvers':\n         specifier: ^3.9.0\n-        version: 3.9.0(react-hook-form@7.53.0(react@18.3.1))\n+        version: 3.9.0(react-hook-form@7.53.1(react@18.3.1))\n       '@radix-ui/react-checkbox':\n         specifier: ^1.1.2\n         version: 1.1.2(@types/react-dom@18.3.1)(@types/react@18.3.11)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n@@ -100,7 +100,7 @@ importers:\n         version: 18.3.1(react@18.3.1)\n       react-hook-form:\n         specifier: ^7.53.0\n-        version: 7.53.0(react@18.3.1)\n+        version: 7.53.1(react@18.3.1)\n       server-only:\n         specifier: ^0.0.1\n         version: 0.0.1\n@@ -2955,8 +2955,8 @@ packages:\n     peerDependencies:\n       react: ^18.3.1\n \n-  react-hook-form@7.53.0:\n-    resolution: {integrity: sha512-M1n3HhqCww6S2hxLxciEXy2oISPnAzxY7gvwVPrtlczTM/1dDadXgUxDpHMrMTblDOcm/AXtXxHwZ3jpg1mqKQ==}\n+  react-hook-form@7.53.1:\n+    resolution: {integrity: sha512-6aiQeBda4zjcuaugWvim9WsGqisoUk+etmFEsSUMm451/Ic8L/UAb7sRtMj3V+Hdzm6mMjU1VhiSzYUZeBm0Vg==}\n     engines: {node: '>=18.0.0'}\n     peerDependencies:\n       react: ^16.8.0 || ^17 || ^18 || ^19\n@@ -3778,9 +3778,9 @@ snapshots:\n \n   '@floating-ui/utils@0.2.8': {}\n \n-  '@hookform/resolvers@3.9.0(react-hook-form@7.53.0(react@18.3.1))':\n+  '@hookform/resolvers@3.9.0(react-hook-form@7.53.1(react@18.3.1))':\n     dependencies:\n-      react-hook-form: 7.53.0(react@18.3.1)\n+      react-hook-form: 7.53.1(react@18.3.1)\n \n   '@humanwhocodes/config-array@0.13.0':\n     dependencies:\n@@ -6068,7 +6068,7 @@ snapshots:\n       react: 18.3.1\n       scheduler: 0.23.2\n \n-  react-hook-form@7.53.0(react@18.3.1):\n+  react-hook-form@7.53.1(react@18.3.1):\n     dependencies:\n       react: 18.3.1\n ",
    "output": "fix(deps): update dependency react-hook-form to v7.53.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 09809f5..619aba2 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -67,7 +67,7 @@ importers:\n         version: 4.1.0\n       drizzle-orm:\n         specifier: ^0.35.0\n-        version: 0.35.1(@types/react@18.3.11)(pg@8.13.0)(postgres@3.4.4)(react@18.3.1)\n+        version: 0.35.2(@types/react@18.3.11)(pg@8.13.0)(postgres@3.4.4)(react@18.3.1)\n       export-to-csv:\n         specifier: ^1.4.0\n         version: 1.4.0\n@@ -1873,8 +1873,8 @@ packages:\n     resolution: {integrity: sha512-cMq8omEKywjIy5KcqUo6LvEFxkl8/zYHsgYjFVXjmPWWtuW4blcz+YW9+oIhoaALgs2ebRjzXwsJgN9i6P49Dw==}\n     hasBin: true\n \n-  drizzle-orm@0.35.1:\n-    resolution: {integrity: sha512-HQxDdYuXlZFuvDPztlUIzrX8TqWa/Ej6uN6L0hkbuGL4slexOUMc3u4nXVU15RQ5QYbk+uLQnR6v1+OIrdCTXQ==}\n+  drizzle-orm@0.35.2:\n+    resolution: {integrity: sha512-bLQtRchl8QvRo2MyG6kcZC90UDzR7Ubir4YwOHV3cZPdJbF+4jU/Yt0QOczsoXe25wLRt6CtCWLXtSDQKft3yg==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=3'\n@@ -4934,7 +4934,7 @@ snapshots:\n     transitivePeerDependencies:\n       - supports-color\n \n-  drizzle-orm@0.35.1(@types/react@18.3.11)(pg@8.13.0)(postgres@3.4.4)(react@18.3.1):\n+  drizzle-orm@0.35.2(@types/react@18.3.11)(pg@8.13.0)(postgres@3.4.4)(react@18.3.1):\n     optionalDependencies:\n       '@types/react': 18.3.11\n       pg: 8.13.0",
    "output": "fix(deps): update dependency drizzle-orm to v0.35.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/app/page.tsx b/src/app/page.tsx\nindex c27815e..4638e4b 100644\n--- a/src/app/page.tsx\n+++ b/src/app/page.tsx\n@@ -1,7 +1,7 @@\n \"use memo\"\n \n import * as React from \"react\"\n-import  {type SearchParams } from \"@/types\"\n+import { type SearchParams } from \"@/types\"\n \n import { Skeleton } from \"@/components/ui/skeleton\"\n import { DataTableSkeleton } from \"@/components/data-table/data-table-skeleton\"",
    "output": "chore: sync"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 18c007f..ddc7392 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -132,7 +132,7 @@ devDependencies:\n     version: 8.56.12\n   '@types/node':\n     specifier: ^22.7.4\n-    version: 22.7.5\n+    version: 22.7.6\n   '@types/react':\n     specifier: ^18.3.11\n     version: 18.3.11\n@@ -2397,8 +2397,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@22.7.5:\n-    resolution: {integrity: sha512-jML7s2NAzMWc//QSJ1a3prpk78cOPchGvXJsC3C6R6PSMoooztvRVQEz89gmBTBY1SPMaqo5teB4uNHPdetShQ==}\n+  /@types/node@22.7.6:\n+    resolution: {integrity: sha512-/d7Rnj0/ExXDMcioS78/kf1lMzYk4BZV8MZGTBKzTGZ6/406ukkbYlIsZmMPhcR5KlkunDHQLrtAVmSq7r+mSw==}\n     dependencies:\n       undici-types: 6.19.8\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v22.7.6"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex a8c2f91..18c007f 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -64,7 +64,7 @@ dependencies:\n     version: 4.1.0\n   drizzle-orm:\n     specifier: ^0.35.0\n-    version: 0.35.0(@types/react@18.3.11)(pg@8.13.0)(postgres@3.4.4)(react@18.3.1)\n+    version: 0.35.1(@types/react@18.3.11)(pg@8.13.0)(postgres@3.4.4)(react@18.3.1)\n   export-to-csv:\n     specifier: ^1.4.0\n     version: 1.4.0\n@@ -3091,8 +3091,8 @@ packages:\n       - supports-color\n     dev: true\n \n-  /drizzle-orm@0.35.0(@types/react@18.3.11)(pg@8.13.0)(postgres@3.4.4)(react@18.3.1):\n-    resolution: {integrity: sha512-fyTKnQ6WZQqSUy6yM4Do2tJPBg1ALR0vJtO9xUTLLubD+0qS1PPuu8aVOeLZQo+g8RPJn+Vqoh30/3lSS8/a2w==}\n+  /drizzle-orm@0.35.1(@types/react@18.3.11)(pg@8.13.0)(postgres@3.4.4)(react@18.3.1):\n+    resolution: {integrity: sha512-HQxDdYuXlZFuvDPztlUIzrX8TqWa/Ej6uN6L0hkbuGL4slexOUMc3u4nXVU15RQ5QYbk+uLQnR6v1+OIrdCTXQ==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=3'",
    "output": "fix(deps): update dependency drizzle-orm to v0.35.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex d41af31..a8c2f91 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -153,7 +153,7 @@ devDependencies:\n     version: 7.4.2\n   drizzle-kit:\n     specifier: ^0.26.0\n-    version: 0.26.1\n+    version: 0.26.2\n   eslint:\n     specifier: ^8.57.0\n     version: 8.57.1\n@@ -3079,8 +3079,8 @@ packages:\n     engines: {node: '>=12'}\n     dev: true\n \n-  /drizzle-kit@0.26.1:\n-    resolution: {integrity: sha512-5/e1tzOPicPDooCm/uJIU9mWK3eD5dhW5EY61TQyVVo29xYxFLmZpXlBdOYlbfDHBsNhVzhb0XjWFmAAj7d7WA==}\n+  /drizzle-kit@0.26.2:\n+    resolution: {integrity: sha512-cMq8omEKywjIy5KcqUo6LvEFxkl8/zYHsgYjFVXjmPWWtuW4blcz+YW9+oIhoaALgs2ebRjzXwsJgN9i6P49Dw==}\n     hasBin: true\n     dependencies:\n       '@drizzle-team/brocli': 0.10.1",
    "output": "chore(deps): update dependency drizzle-kit to v0.26.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex b7675bc..e2e9541 100644\n--- a/package.json\n+++ b/package.json\n@@ -43,7 +43,7 @@\n     \"clsx\": \"^2.1.1\",\n     \"cmdk\": \"^1.0.0\",\n     \"date-fns\": \"^4.1.0\",\n-    \"drizzle-orm\": \"^0.34.0\",\n+    \"drizzle-orm\": \"^0.35.0\",\n     \"export-to-csv\": \"^1.4.0\",\n     \"geist\": \"^1.3.1\",\n     \"nanoid\": \"^5.0.7\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 1643cef..d41af31 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -63,8 +63,8 @@ dependencies:\n     specifier: ^4.1.0\n     version: 4.1.0\n   drizzle-orm:\n-    specifier: ^0.34.0\n-    version: 0.34.1(@types/react@18.3.11)(pg@8.13.0)(postgres@3.4.4)(react@18.3.1)\n+    specifier: ^0.35.0\n+    version: 0.35.0(@types/react@18.3.11)(pg@8.13.0)(postgres@3.4.4)(react@18.3.1)\n   export-to-csv:\n     specifier: ^1.4.0\n     version: 1.4.0\n@@ -3091,8 +3091,8 @@ packages:\n       - supports-color\n     dev: true\n \n-  /drizzle-orm@0.34.1(@types/react@18.3.11)(pg@8.13.0)(postgres@3.4.4)(react@18.3.1):\n-    resolution: {integrity: sha512-t+zCwyWWt8xTqtYV4doE/xYmT7hpv1L8pQ66zddEz+3VWyedBBtctjMAp22mAJPfyWurRQXUJ1nrTtqLq+DqNA==}\n+  /drizzle-orm@0.35.0(@types/react@18.3.11)(pg@8.13.0)(postgres@3.4.4)(react@18.3.1):\n+    resolution: {integrity: sha512-fyTKnQ6WZQqSUy6yM4Do2tJPBg1ALR0vJtO9xUTLLubD+0qS1PPuu8aVOeLZQo+g8RPJn+Vqoh30/3lSS8/a2w==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=3'",
    "output": "fix(deps): update dependency drizzle-orm to ^0.35.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex b7e0b6e..b7675bc 100644\n--- a/package.json\n+++ b/package.json\n@@ -74,7 +74,7 @@\n     \"@typescript-eslint/parser\": \"^8.8.0\",\n     \"autoprefixer\": \"^10.4.20\",\n     \"dotenv-cli\": \"^7.4.2\",\n-    \"drizzle-kit\": \"^0.25.0\",\n+    \"drizzle-kit\": \"^0.26.0\",\n     \"eslint\": \"^8.57.0\",\n     \"eslint-config-next\": \"^14.2.14\",\n     \"eslint-config-prettier\": \"^9.1.0\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex cff48cf..1643cef 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -152,8 +152,8 @@ devDependencies:\n     specifier: ^7.4.2\n     version: 7.4.2\n   drizzle-kit:\n-    specifier: ^0.25.0\n-    version: 0.25.0\n+    specifier: ^0.26.0\n+    version: 0.26.1\n   eslint:\n     specifier: ^8.57.0\n     version: 8.57.1\n@@ -3079,8 +3079,8 @@ packages:\n     engines: {node: '>=12'}\n     dev: true\n \n-  /drizzle-kit@0.25.0:\n-    resolution: {integrity: sha512-Rcf0nYCAKizwjWQCY+d3zytyuTbDb81NcaPor+8NebESlUz1+9W3uGl0+r9FhU4Qal5Zv9j/7neXCSCe7DHzjA==}\n+  /drizzle-kit@0.26.1:\n+    resolution: {integrity: sha512-5/e1tzOPicPDooCm/uJIU9mWK3eD5dhW5EY61TQyVVo29xYxFLmZpXlBdOYlbfDHBsNhVzhb0XjWFmAAj7d7WA==}\n     hasBin: true\n     dependencies:\n       '@drizzle-team/brocli': 0.10.1",
    "output": "chore(deps): update dependency drizzle-kit to ^0.26.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 048680a..cff48cf 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -109,7 +109,7 @@ dependencies:\n     version: 2.5.4\n   tailwindcss-animate:\n     specifier: ^1.0.7\n-    version: 1.0.7(tailwindcss@3.4.13)\n+    version: 1.0.7(tailwindcss@3.4.14)\n   vaul:\n     specifier: ^1.0.0\n     version: 1.1.0(@types/react-dom@18.3.1)(@types/react@18.3.11)(react-dom@18.3.1)(react@18.3.1)\n@@ -165,7 +165,7 @@ devDependencies:\n     version: 9.1.0(eslint@8.57.1)\n   eslint-plugin-tailwindcss:\n     specifier: ^3.17.4\n-    version: 3.17.5(tailwindcss@3.4.13)\n+    version: 3.17.5(tailwindcss@3.4.14)\n   pg:\n     specifier: ^8.13.0\n     version: 8.13.0\n@@ -183,7 +183,7 @@ devDependencies:\n     version: 6.0.1\n   tailwindcss:\n     specifier: ^3.4.13\n-    version: 3.4.13\n+    version: 3.4.14\n   tsx:\n     specifier: ^4.19.1\n     version: 4.19.1\n@@ -3656,7 +3656,7 @@ packages:\n       string.prototype.repeat: 1.0.0\n     dev: true\n \n-  /eslint-plugin-tailwindcss@3.17.5(tailwindcss@3.4.13):\n+  /eslint-plugin-tailwindcss@3.17.5(tailwindcss@3.4.14):\n     resolution: {integrity: sha512-8Mi7p7dm+mO1dHgRHHFdPu4RDTBk69Cn4P0B40vRQR+MrguUpwmKwhZy1kqYe3Km8/4nb+cyrCF+5SodOEmaow==}\n     engines: {node: '>=18.12.0'}\n     peerDependencies:\n@@ -3664,7 +3664,7 @@ packages:\n     dependencies:\n       fast-glob: 3.3.2\n       postcss: 8.4.47\n-      tailwindcss: 3.4.13\n+      tailwindcss: 3.4.14\n     dev: true\n \n   /eslint-scope@7.2.2:\n@@ -4835,7 +4835,7 @@ packages:\n     dependencies:\n       lilconfig: 3.1.2\n       postcss: 8.4.47\n-      yaml: 2.5.1\n+      yaml: 2.6.0\n \n   /postcss-nested@6.2.0(postcss@8.4.47):\n     resolution: {integrity: sha512-HQbt28KulC5AJzG+cZtj9kvKB93CFCdLvog1WFLf1D+xmMvPGlBstkpTEZfK5+AN9hfJocyBFCNiqyS48bpgzQ==}\n@@ -5459,16 +5459,16 @@ packages:\n     resolution: {integrity: sha512-0q8cfZHMu9nuYP/b5Shb7Y7Sh1B7Nnl5GqNr1U+n2p6+mybvRtayrQ+0042Z5byvTA8ihjlP8Odo8/VnHbZu4Q==}\n     dev: false\n \n-  /tailwindcss-animate@1.0.7(tailwindcss@3.4.13):\n+  /tailwindcss-animate@1.0.7(tailwindcss@3.4.14):\n     resolution: {integrity: sha512-bl6mpH3T7I3UFxuvDEXLxy/VuFxBk5bbzplh7tXI68mwMokNYd1t9qPBHlnyTwfa4JGC4zP516I1hYYtQ/vspA==}\n     peerDependencies:\n       tailwindcss: '>=3.0.0 || insiders'\n     dependencies:\n-      tailwindcss: 3.4.13\n+      tailwindcss: 3.4.14\n     dev: false\n \n-  /tailwindcss@3.4.13:\n-    resolution: {integrity: sha512-KqjHOJKogOUt5Bs752ykCeiwvi0fKVkr5oqsFNt/8px/tA8scFPIlkygsf6jXrfCqGHz7VflA6+yytWuM+XhFw==}\n+  /tailwindcss@3.4.14:\n+    resolution: {integrity: sha512-IcSvOcTRcUtQQ7ILQL5quRDg7Xs93PdJEk1ZLbhhvJc7uj/OAhYOnruEiwnGgBvUtaUAJ8/mhSw1o8L2jCiENA==}\n     engines: {node: '>=14.0.0'}\n     hasBin: true\n     dependencies:\n@@ -5789,8 +5789,8 @@ packages:\n   /yallist@3.1.1:\n     resolution: {integrity: sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==}\n \n-  /yaml@2.5.1:\n-    resolution: {integrity: sha512-bLQOjaX/ADgQ20isPJRvF0iRUHIxVhYvr53Of7wGcWlO2jvtUlH5m87DsmulFVxRpNLOnI4tB6p/oh8D7kpn9Q==}\n+  /yaml@2.6.0:\n+    resolution: {integrity: sha512-a6ae//JvKDEra2kdi1qzCyrJW/WZCgFi8ydDV+eXExl95t+5R+ijnqHJbz9tmMh8FUjx3iv2fCQ4dclAQlO2UQ==}\n     engines: {node: '>= 14'}\n     hasBin: true\n ",
    "output": "chore(deps): update dependency tailwindcss to v3.4.14"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex c6dbb45..ca5d15b 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -106,7 +106,7 @@ dependencies:\n     version: 1.5.0(react-dom@18.3.1)(react@18.3.1)\n   tailwind-merge:\n     specifier: ^2.5.3\n-    version: 2.5.3\n+    version: 2.5.4\n   tailwindcss-animate:\n     specifier: ^1.0.7\n     version: 1.0.7(tailwindcss@3.4.13)\n@@ -5455,8 +5455,8 @@ packages:\n     resolution: {integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==}\n     engines: {node: '>= 0.4'}\n \n-  /tailwind-merge@2.5.3:\n-    resolution: {integrity: sha512-d9ZolCAIzom1nf/5p4LdD5zvjmgSxY0BGgdSvmXIoMYAiPdAW/dSpP7joCDYFY7r/HkEa2qmPtkgsu0xjQeQtw==}\n+  /tailwind-merge@2.5.4:\n+    resolution: {integrity: sha512-0q8cfZHMu9nuYP/b5Shb7Y7Sh1B7Nnl5GqNr1U+n2p6+mybvRtayrQ+0042Z5byvTA8ihjlP8Odo8/VnHbZu4Q==}\n     dev: false\n \n   /tailwindcss-animate@1.0.7(tailwindcss@3.4.13):",
    "output": "fix(deps): update dependency tailwind-merge to v2.5.4"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex b42b571..c6dbb45 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -112,7 +112,7 @@ dependencies:\n     version: 1.0.7(tailwindcss@3.4.13)\n   vaul:\n     specifier: ^1.0.0\n-    version: 1.0.0(@types/react-dom@18.3.1)(@types/react@18.3.11)(react-dom@18.3.1)(react@18.3.1)\n+    version: 1.1.0(@types/react-dom@18.3.1)(@types/react@18.3.11)(react-dom@18.3.1)(react@18.3.1)\n   zod:\n     specifier: ^3.23.8\n     version: 3.23.8\n@@ -5687,8 +5687,8 @@ packages:\n   /util-deprecate@1.0.2:\n     resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}\n \n-  /vaul@1.0.0(@types/react-dom@18.3.1)(@types/react@18.3.11)(react-dom@18.3.1)(react@18.3.1):\n-    resolution: {integrity: sha512-TegfMkwy86RSvSiIVREG6OqgRL7agqRsKYyWYacyVUAdpcIi34QoCOED476Mbf8J5d06e1hygSdvJhehlxEBhQ==}\n+  /vaul@1.1.0(@types/react-dom@18.3.1)(@types/react@18.3.11)(react-dom@18.3.1)(react@18.3.1):\n+    resolution: {integrity: sha512-YhO/bikcauk48hzhMhvIvT+U87cuCbNbKk9fF4Ou5UkI9t2KkBMernmdP37pCzF15hrv55fcny1YhexK8h6GVQ==}\n     peerDependencies:\n       react: ^16.8 || ^17.0 || ^18.0\n       react-dom: ^16.8 || ^17.0 || ^18.0",
    "output": "fix(deps): update dependency vaul to v1.1.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 8451e4f..8d8d5d2 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -165,7 +165,7 @@ devDependencies:\n     version: 9.1.0(eslint@8.57.1)\n   eslint-plugin-tailwindcss:\n     specifier: ^3.17.4\n-    version: 3.17.4(tailwindcss@3.4.13)\n+    version: 3.17.5(tailwindcss@3.4.13)\n   pg:\n     specifier: ^8.13.0\n     version: 8.13.0\n@@ -3656,8 +3656,8 @@ packages:\n       string.prototype.repeat: 1.0.0\n     dev: true\n \n-  /eslint-plugin-tailwindcss@3.17.4(tailwindcss@3.4.13):\n-    resolution: {integrity: sha512-gJAEHmCq2XFfUP/+vwEfEJ9igrPeZFg+skeMtsxquSQdxba9XRk5bn0Bp9jxG1VV9/wwPKi1g3ZjItu6MIjhNg==}\n+  /eslint-plugin-tailwindcss@3.17.5(tailwindcss@3.4.13):\n+    resolution: {integrity: sha512-8Mi7p7dm+mO1dHgRHHFdPu4RDTBk69Cn4P0B40vRQR+MrguUpwmKwhZy1kqYe3Km8/4nb+cyrCF+5SodOEmaow==}\n     engines: {node: '>=18.12.0'}\n     peerDependencies:\n       tailwindcss: ^3.4.0",
    "output": "chore(deps): update dependency eslint-plugin-tailwindcss to v3.17.5"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex c4c755d..dc3eff9 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -82,7 +82,7 @@ dependencies:\n     version: 0.3.0(react-dom@18.3.1)(react@18.3.1)\n   nuqs:\n     specifier: ^1.19.3\n-    version: 1.19.3(next@14.2.14)\n+    version: 1.20.0(next@14.2.14)\n   postgres:\n     specifier: ^3.4.4\n     version: 3.4.4\n@@ -4566,8 +4566,8 @@ packages:\n     engines: {node: '>=0.10.0'}\n     dev: true\n \n-  /nuqs@1.19.3(next@14.2.14):\n-    resolution: {integrity: sha512-PpHjONraQDmuJzVQvZvCBNNOij5X0w2pGd8O22lSpRSqKIB6oEmwH+w2M3kGk/Gwf3R6XyvXBb2DSkUHYfrtrQ==}\n+  /nuqs@1.20.0(next@14.2.14):\n+    resolution: {integrity: sha512-nGVfv7eWMNxAzOJ9n8ARTo6ObqeEr1ETYZ+dIMCg/VfGUoZoPrqyTOndIvQIgUzK3pIC41mTXg10JJxh9ziEhw==}\n     peerDependencies:\n       next: '>=13.4 <14.0.2 || ^14.0.3'\n     dependencies:",
    "output": "fix(deps): update dependency nuqs to v1.20.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 8ceaafe..c4c755d 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -132,7 +132,7 @@ devDependencies:\n     version: 8.56.12\n   '@types/node':\n     specifier: ^22.7.4\n-    version: 22.7.4\n+    version: 22.7.5\n   '@types/react':\n     specifier: ^18.3.11\n     version: 18.3.11\n@@ -2397,8 +2397,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@22.7.4:\n-    resolution: {integrity: sha512-y+NPi1rFzDs1NdQHHToqeiX2TIS79SWEAw9GYhkkx8bD0ChpfqC+n2j5OXOCpzfojBEBt6DnEnnG9MY0zk1XLg==}\n+  /@types/node@22.7.5:\n+    resolution: {integrity: sha512-jML7s2NAzMWc//QSJ1a3prpk78cOPchGvXJsC3C6R6PSMoooztvRVQEz89gmBTBY1SPMaqo5teB4uNHPdetShQ==}\n     dependencies:\n       undici-types: 6.19.8\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v22.7.5"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex c8e4102..b7e0b6e 100644\n--- a/package.json\n+++ b/package.json\n@@ -43,7 +43,7 @@\n     \"clsx\": \"^2.1.1\",\n     \"cmdk\": \"^1.0.0\",\n     \"date-fns\": \"^4.1.0\",\n-    \"drizzle-orm\": \"^0.33.0\",\n+    \"drizzle-orm\": \"^0.34.0\",\n     \"export-to-csv\": \"^1.4.0\",\n     \"geist\": \"^1.3.1\",\n     \"nanoid\": \"^5.0.7\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 8cffdca..8ceaafe 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -63,8 +63,8 @@ dependencies:\n     specifier: ^4.1.0\n     version: 4.1.0\n   drizzle-orm:\n-    specifier: ^0.33.0\n-    version: 0.33.0(@types/react@18.3.11)(pg@8.13.0)(postgres@3.4.4)(react@18.3.1)\n+    specifier: ^0.34.0\n+    version: 0.34.1(@types/react@18.3.11)(pg@8.13.0)(postgres@3.4.4)(react@18.3.1)\n   export-to-csv:\n     specifier: ^1.4.0\n     version: 1.4.0\n@@ -3087,13 +3087,13 @@ packages:\n       - supports-color\n     dev: true\n \n-  /drizzle-orm@0.33.0(@types/react@18.3.11)(pg@8.13.0)(postgres@3.4.4)(react@18.3.1):\n-    resolution: {integrity: sha512-SHy72R2Rdkz0LEq0PSG/IdvnT3nGiWuRk+2tXZQ90GVq/XQhpCzu/EFT3V2rox+w8MlkBQxifF8pCStNYnERfA==}\n+  /drizzle-orm@0.34.1(@types/react@18.3.11)(pg@8.13.0)(postgres@3.4.4)(react@18.3.1):\n+    resolution: {integrity: sha512-t+zCwyWWt8xTqtYV4doE/xYmT7hpv1L8pQ66zddEz+3VWyedBBtctjMAp22mAJPfyWurRQXUJ1nrTtqLq+DqNA==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=3'\n       '@electric-sql/pglite': '>=0.1.1'\n-      '@libsql/client': '*'\n+      '@libsql/client': '>=0.10.0'\n       '@neondatabase/serverless': '>=0.1'\n       '@op-engineering/op-sqlite': '>=2'\n       '@opentelemetry/api': ^1.4.1",
    "output": "fix(deps): update dependency drizzle-orm to ^0.34.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex a372657..c8e4102 100644\n--- a/package.json\n+++ b/package.json\n@@ -74,7 +74,7 @@\n     \"@typescript-eslint/parser\": \"^8.8.0\",\n     \"autoprefixer\": \"^10.4.20\",\n     \"dotenv-cli\": \"^7.4.2\",\n-    \"drizzle-kit\": \"^0.24.2\",\n+    \"drizzle-kit\": \"^0.25.0\",\n     \"eslint\": \"^8.57.0\",\n     \"eslint-config-next\": \"^14.2.14\",\n     \"eslint-config-prettier\": \"^9.1.0\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 7f096a8..1dce81f 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -152,8 +152,8 @@ devDependencies:\n     specifier: ^7.4.2\n     version: 7.4.2\n   drizzle-kit:\n-    specifier: ^0.24.2\n-    version: 0.24.2\n+    specifier: ^0.25.0\n+    version: 0.25.0\n   eslint:\n     specifier: ^8.57.0\n     version: 8.57.1\n@@ -366,6 +366,7 @@ packages:\n \n   /@esbuild-kit/core-utils@3.3.2:\n     resolution: {integrity: sha512-sPRAnw9CdSsRmEtnsl2WXWdyquogVpB3yZ3dgwJfe8zrOzTsV7cJvmwrKVa+0ma5BoiGJ+BoqkMvawbayKUsqQ==}\n+    deprecated: 'Merged into tsx: https://tsx.is'\n     dependencies:\n       esbuild: 0.18.20\n       source-map-support: 0.5.21\n@@ -373,6 +374,7 @@ packages:\n \n   /@esbuild-kit/esm-loader@2.6.5:\n     resolution: {integrity: sha512-FxEMIkJKnodyA1OaCUoEvbYRkoZlLZ4d/eXFu9Fh8CbBBgP5EmZxrfTRyN0qpXZ4vOvqnE5YdRdcrmUUXuU+dA==}\n+    deprecated: 'Merged into tsx: https://tsx.is'\n     dependencies:\n       '@esbuild-kit/core-utils': 3.3.2\n       get-tsconfig: 4.8.1\n@@ -3073,8 +3075,8 @@ packages:\n     engines: {node: '>=12'}\n     dev: true\n \n-  /drizzle-kit@0.24.2:\n-    resolution: {integrity: sha512-nXOaTSFiuIaTMhS8WJC2d4EBeIcN9OSt2A2cyFbQYBAZbi7lRsVGJNqDpEwPqYfJz38yxbY/UtbvBBahBfnExQ==}\n+  /drizzle-kit@0.25.0:\n+    resolution: {integrity: sha512-Rcf0nYCAKizwjWQCY+d3zytyuTbDb81NcaPor+8NebESlUz1+9W3uGl0+r9FhU4Qal5Zv9j/7neXCSCe7DHzjA==}\n     hasBin: true\n     dependencies:\n       '@drizzle-team/brocli': 0.10.1",
    "output": "chore(deps): update dependency drizzle-kit to ^0.25.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/hooks/use-data-table.ts b/src/hooks/use-data-table.ts\nindex fd9005a..8d51ad0 100644\n--- a/src/hooks/use-data-table.ts\n+++ b/src/hooks/use-data-table.ts\n@@ -99,11 +99,8 @@ interface UseDataTableProps<TData>\n   throttleMs?: number\n \n   /**\n-   * Maximum time (ms) to wait before applying the filter after the user stops typing.\n-   * This helps to reduce the number of filter updates and improve performance,\n-   * especially when dealing with large datasets. A lower value results in more frequent updates,\n-   * while a higher value can lead to a delay in applying the filter.\n-   * @default 500\n+   * Debounce time (ms) for filter updates to enhance performance during rapid input.\n+   * @default 300\n    */\n   debounceMs?: number\n \n@@ -148,18 +145,12 @@ export function useDataTable<TData>({\n   scroll = false,\n   shallow = true,\n   throttleMs = 50,\n-  debounceMs = 500,\n+  debounceMs = 300,\n   clearOnDefault = false,\n   startTransition,\n   initialState,\n   ...props\n }: UseDataTableProps<TData>) {\n-  const [rowSelection, setRowSelection] = React.useState<RowSelectionState>(\n-    initialState?.rowSelection ?? {}\n-  )\n-  const [columnVisibility, setColumnVisibility] =\n-    React.useState<VisibilityState>(initialState?.columnVisibility ?? {})\n-\n   const queryStateOptions = React.useMemo<\n     Omit<UseQueryStateOptions<string>, \"parse\">\n   >(() => {\n@@ -182,6 +173,12 @@ export function useDataTable<TData>({\n     startTransition,\n   ])\n \n+  const [rowSelection, setRowSelection] = React.useState<RowSelectionState>(\n+    initialState?.rowSelection ?? {}\n+  )\n+  const [columnVisibility, setColumnVisibility] =\n+    React.useState<VisibilityState>(initialState?.columnVisibility ?? {})\n+\n   const [page, setPage] = useQueryState(\n     \"page\",\n     parseAsInteger.withOptions(queryStateOptions).withDefault(1)\n@@ -229,8 +226,6 @@ export function useDataTable<TData>({\n     debounceMs\n   )\n \n-  console.log({ filterValues })\n-\n   // Paginate\n   const pagination: PaginationState = {\n     pageIndex: page - 1, // zero-based index -> one-based index\n@@ -348,9 +343,7 @@ export function useDataTable<TData>({\n     onRowSelectionChange: setRowSelection,\n     onPaginationChange,\n     onSortingChange,\n-    onColumnFiltersChange: enableAdvancedFilter\n-      ? undefined\n-      : onColumnFiltersChange,\n+    onColumnFiltersChange,\n     onColumnVisibilityChange: setColumnVisibility,\n     getCoreRowModel: getCoreRowModel(),\n     getFilteredRowModel: enableAdvancedFilter",
    "output": "feat: update filters"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex ac441a4..ba3e81e 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -109,7 +109,7 @@ dependencies:\n     version: 1.5.0(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)\n   tailwind-merge:\n     specifier: ^2.3.0\n-    version: 2.5.2\n+    version: 2.5.3\n   tailwindcss-animate:\n     specifier: ^1.0.7\n     version: 1.0.7(tailwindcss@3.4.13)\n@@ -6005,8 +6005,8 @@ packages:\n     resolution: {integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==}\n     engines: {node: '>= 0.4'}\n \n-  /tailwind-merge@2.5.2:\n-    resolution: {integrity: sha512-kjEBm+pvD+6eAwzJL2Bi+02/9LFLal1Gs61+QB7HvTfQQ0aXwC5LGT8PEt1gS0CWKktKe6ysPTAy3cBC5MeiIg==}\n+  /tailwind-merge@2.5.3:\n+    resolution: {integrity: sha512-d9ZolCAIzom1nf/5p4LdD5zvjmgSxY0BGgdSvmXIoMYAiPdAW/dSpP7joCDYFY7r/HkEa2qmPtkgsu0xjQeQtw==}\n     dev: false\n \n   /tailwindcss-animate@1.0.7(tailwindcss@3.4.13):",
    "output": "fix(deps): update dependency tailwind-merge to v2.5.3"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 622d46e..be58953 100644\n--- a/package.json\n+++ b/package.json\n@@ -50,6 +50,7 @@\n     \"nanoid\": \"^5.0.7\",\n     \"next\": \"15.0.0-rc.0\",\n     \"next-themes\": \"^0.3.0\",\n+    \"nuqs\": \"^1.19.3\",\n     \"postgres\": \"^3.4.4\",\n     \"react\": \"19.0.0-rc-fb9a90fa48-20240614\",\n     \"react-day-picker\": \"^8.10.1\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 52b2e1b..ac441a4 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -83,6 +83,9 @@ dependencies:\n   next-themes:\n     specifier: ^0.3.0\n     version: 0.3.0(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)\n+  nuqs:\n+    specifier: ^1.19.3\n+    version: 1.19.3(next@15.0.0-rc.0)\n   postgres:\n     specifier: ^3.4.4\n     version: 3.4.4\n@@ -4951,6 +4954,10 @@ packages:\n     resolution: {integrity: sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==}\n     engines: {node: '>=16 || 14 >=14.17'}\n \n+  /mitt@3.0.1:\n+    resolution: {integrity: sha512-vKivATfr97l2/QBCYAkXYDbrIWPM2IIKEl7YPhjCvKlG3kE2gm+uBo6nEXK3M5/Ffh/FLpKExzOQ3JJoJGFKBw==}\n+    dev: false\n+\n   /ms@2.1.2:\n     resolution: {integrity: sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==}\n     dev: true\n@@ -5049,6 +5056,15 @@ packages:\n     engines: {node: '>=0.10.0'}\n     dev: true\n \n+  /nuqs@1.19.3(next@15.0.0-rc.0):\n+    resolution: {integrity: sha512-PpHjONraQDmuJzVQvZvCBNNOij5X0w2pGd8O22lSpRSqKIB6oEmwH+w2M3kGk/Gwf3R6XyvXBb2DSkUHYfrtrQ==}\n+    peerDependencies:\n+      next: '>=13.4 <14.0.2 || ^14.0.3'\n+    dependencies:\n+      mitt: 3.0.1\n+      next: 15.0.0-rc.0(@babel/core@7.24.8)(babel-plugin-react-compiler@0.0.0-experimental-e68eda9-20240829)(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)\n+    dev: false\n+\n   /object-assign@4.1.1:\n     resolution: {integrity: sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==}\n     engines: {node: '>=0.10.0'}",
    "output": "chore: add nuqs"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/.eslintrc.cjs b/.eslintrc.cjs\nindex 5a6b0a5..7fbe09c 100644\n--- a/.eslintrc.cjs\n+++ b/.eslintrc.cjs\n@@ -29,6 +29,8 @@ const config = {\n       \"warn\",\n       {\n         argsIgnorePattern: \"^_\",\n+        varsIgnorePattern: \"^_\",\n+        ignoreRestSiblings: true,\n       },\n     ],\n     \"@typescript-eslint/require-await\": \"off\",\ndiff --git a/src/hooks/use-data-table.ts b/src/hooks/use-data-table.ts\nindex 1efc34e..7d91689 100644\n--- a/src/hooks/use-data-table.ts\n+++ b/src/hooks/use-data-table.ts\n@@ -86,9 +86,8 @@ interface UseDataTableProps<TData>\n \n   /**\n    * A callback function that is called before updating the URL.\n-   * Can be use to retrieve the loading state of the route transition.\n+   * Can be use to retrieve the pending state of the route transition.\n    * @see https://react.dev/reference/react/useTransition\n-   *\n    */\n   startTransition?: React.TransitionStartFunction\n ",
    "output": "chore: update hooks"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 3e281a2..f6badab 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -132,7 +132,7 @@ devDependencies:\n     version: 8.56.12\n   '@types/node':\n     specifier: ^20.14.2\n-    version: 20.16.8\n+    version: 20.16.10\n   '@types/react':\n     specifier: npm:types-react@rc\n     version: /types-react@19.0.0-rc.1\n@@ -2725,8 +2725,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.16.8:\n-    resolution: {integrity: sha512-sbo5JmfbZNkyDv+2HCccr9Y9ZkKJBMTru7UdAsCojMGjKNjdaOV73bqEW242QrHEZL8R4LbHMrW+FHB5lZ5/bw==}\n+  /@types/node@20.16.10:\n+    resolution: {integrity: sha512-vQUKgWTjEIRFCvK6CyriPH3MZYiYlNy0fKiEYHWbcoWLEgs4opurGGKlebrTLqdSMIbXImH6XExNiIyNUv3WpA==}\n     dependencies:\n       undici-types: 6.19.8\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.16.10"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex ee205ec..3e281a2 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -120,7 +120,7 @@ dependencies:\n devDependencies:\n   '@faker-js/faker':\n     specifier: ^9.0.0\n-    version: 9.0.2\n+    version: 9.0.3\n   '@ianvs/prettier-plugin-sort-imports':\n     specifier: ^4.2.1\n     version: 4.3.1(prettier@3.3.3)\n@@ -1178,8 +1178,8 @@ packages:\n     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n     dev: true\n \n-  /@faker-js/faker@9.0.2:\n-    resolution: {integrity: sha512-nI/FP30ZGXb+UaR7yXawVTH40NVKXPIx0tA3GKjkKLjorqBoMAeq4iSEacl8mJmpVhOCDa0vYHwYDmOOcFMrYw==}\n+  /@faker-js/faker@9.0.3:\n+    resolution: {integrity: sha512-lWrrK4QNlFSU+13PL9jMbMKLJYXDFu3tQfayBsMXX7KL/GiQeqfB1CzHkqD5UHBUtPAuPo6XwGbMFNdVMZObRA==}\n     engines: {node: '>=18.0.0', npm: '>=9.0.0'}\n     dev: true\n ",
    "output": "chore(deps): update dependency @faker-js/faker to v9.0.3"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 40a36a4..622d46e 100644\n--- a/package.json\n+++ b/package.json\n@@ -59,7 +59,7 @@\n     \"sonner\": \"^1.4.41\",\n     \"tailwind-merge\": \"^2.3.0\",\n     \"tailwindcss-animate\": \"^1.0.7\",\n-    \"vaul\": \"^0.9.1\",\n+    \"vaul\": \"^1.0.0\",\n     \"zod\": \"^3.23.8\"\n   },\n   \"devDependencies\": {\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex a83f1ae..ee205ec 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -111,8 +111,8 @@ dependencies:\n     specifier: ^1.0.7\n     version: 1.0.7(tailwindcss@3.4.13)\n   vaul:\n-    specifier: ^0.9.1\n-    version: 0.9.7(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1)\n+    specifier: ^1.0.0\n+    version: 1.0.0(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1)\n   zod:\n     specifier: ^3.23.8\n     version: 3.23.8\n@@ -6229,8 +6229,8 @@ packages:\n   /util-deprecate@1.0.2:\n     resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}\n \n-  /vaul@0.9.7(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1):\n-    resolution: {integrity: sha512-7Fv00cv95ZeZWNuo873AyPbFFyAq63gf7SCbA5/+pZtXs8mcsYYzPTTunsS0lDV59mtGKl68idZd3CofczksgQ==}\n+  /vaul@1.0.0(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1):\n+    resolution: {integrity: sha512-TegfMkwy86RSvSiIVREG6OqgRL7agqRsKYyWYacyVUAdpcIi34QoCOED476Mbf8J5d06e1hygSdvJhehlxEBhQ==}\n     peerDependencies:\n       react: ^16.8 || ^17.0 || ^18.0\n       react-dom: ^16.8 || ^17.0 || ^18.0",
    "output": "fix(deps): update dependency vaul to v1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 80a1eea..a83f1ae 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -112,7 +112,7 @@ dependencies:\n     version: 1.0.7(tailwindcss@3.4.13)\n   vaul:\n     specifier: ^0.9.1\n-    version: 0.9.6(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1)\n+    version: 0.9.7(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1)\n   zod:\n     specifier: ^3.23.8\n     version: 3.23.8\n@@ -6229,8 +6229,8 @@ packages:\n   /util-deprecate@1.0.2:\n     resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}\n \n-  /vaul@0.9.6(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1):\n-    resolution: {integrity: sha512-Ykk5FSu4ibeD6qfKQH/CkBRdSGWkxi35KMNei0z59kTPAlgzpE/Qf1gTx2sxih8Q05KBO/aFhcF/UkBW5iI1Ww==}\n+  /vaul@0.9.7(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1):\n+    resolution: {integrity: sha512-7Fv00cv95ZeZWNuo873AyPbFFyAq63gf7SCbA5/+pZtXs8mcsYYzPTTunsS0lDV59mtGKl68idZd3CofczksgQ==}\n     peerDependencies:\n       react: ^16.8 || ^17.0 || ^18.0\n       react-dom: ^16.8 || ^17.0 || ^18.0",
    "output": "fix(deps): update dependency vaul to v0.9.7"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex d94ba23..80a1eea 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -132,7 +132,7 @@ devDependencies:\n     version: 8.56.12\n   '@types/node':\n     specifier: ^20.14.2\n-    version: 20.16.7\n+    version: 20.16.8\n   '@types/react':\n     specifier: npm:types-react@rc\n     version: /types-react@19.0.0-rc.1\n@@ -2725,8 +2725,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.16.7:\n-    resolution: {integrity: sha512-QkDQjAY3gkvJNcZOWwzy3BN34RweT0OQ9zJyvLCU0kSK22dO2QYh/NHGfbEAYylPYzRB1/iXcojS79wOg5gFSw==}\n+  /@types/node@20.16.8:\n+    resolution: {integrity: sha512-sbo5JmfbZNkyDv+2HCccr9Y9ZkKJBMTru7UdAsCojMGjKNjdaOV73bqEW242QrHEZL8R4LbHMrW+FHB5lZ5/bw==}\n     dependencies:\n       undici-types: 6.19.8\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.16.8"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 0371380..d94ba23 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -132,7 +132,7 @@ devDependencies:\n     version: 8.56.12\n   '@types/node':\n     specifier: ^20.14.2\n-    version: 20.16.6\n+    version: 20.16.7\n   '@types/react':\n     specifier: npm:types-react@rc\n     version: /types-react@19.0.0-rc.1\n@@ -2725,8 +2725,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.16.6:\n-    resolution: {integrity: sha512-T7PpxM/6yeDE+AdlVysT62BX6/bECZOmQAgiFg5NoBd5MQheZ3tzal7f1wvzfiEcmrcJNRi2zRr2nY2zF+0uqw==}\n+  /@types/node@20.16.7:\n+    resolution: {integrity: sha512-QkDQjAY3gkvJNcZOWwzy3BN34RweT0OQ9zJyvLCU0kSK22dO2QYh/NHGfbEAYylPYzRB1/iXcojS79wOg5gFSw==}\n     dependencies:\n       undici-types: 6.19.8\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.16.7"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 9b1e43e..0371380 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -180,7 +180,7 @@ devDependencies:\n     version: 3.3.3\n   prettier-plugin-tailwindcss:\n     specifier: ^0.6.1\n-    version: 0.6.6(@ianvs/prettier-plugin-sort-imports@4.3.1)(prettier@3.3.3)\n+    version: 0.6.8(@ianvs/prettier-plugin-sort-imports@4.3.1)(prettier@3.3.3)\n   rimraf:\n     specifier: ^6.0.0\n     version: 6.0.1\n@@ -5365,8 +5365,8 @@ packages:\n     engines: {node: '>= 0.8.0'}\n     dev: true\n \n-  /prettier-plugin-tailwindcss@0.6.6(@ianvs/prettier-plugin-sort-imports@4.3.1)(prettier@3.3.3):\n-    resolution: {integrity: sha512-OPva5S7WAsPLEsOuOWXATi13QrCKACCiIonFgIR6V4lYv4QLp++UXVhZSzRbZxXGimkQtQT86CC6fQqTOybGng==}\n+  /prettier-plugin-tailwindcss@0.6.8(@ianvs/prettier-plugin-sort-imports@4.3.1)(prettier@3.3.3):\n+    resolution: {integrity: sha512-dGu3kdm7SXPkiW4nzeWKCl3uoImdd5CTZEJGxyypEPL37Wj0HT2pLqjrvSei1nTeuQfO4PUfjeW5cTUNRLZ4sA==}\n     engines: {node: '>=14.21.3'}\n     peerDependencies:\n       '@ianvs/prettier-plugin-sort-imports': '*'",
    "output": "chore(deps): update dependency prettier-plugin-tailwindcss to v0.6.8"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex fe06cab..9b1e43e 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -112,7 +112,7 @@ dependencies:\n     version: 1.0.7(tailwindcss@3.4.13)\n   vaul:\n     specifier: ^0.9.1\n-    version: 0.9.4(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1)\n+    version: 0.9.6(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1)\n   zod:\n     specifier: ^3.23.8\n     version: 3.23.8\n@@ -6229,8 +6229,8 @@ packages:\n   /util-deprecate@1.0.2:\n     resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}\n \n-  /vaul@0.9.4(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1):\n-    resolution: {integrity: sha512-pcyIy1nEk6798ReNQpbVH/T/dYnoJ3bwyq7jmSp134s+bSvpWoSWQthm3/jfsQRvHNYIEK4ZKbkHUJ3YfLfw1w==}\n+  /vaul@0.9.6(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1):\n+    resolution: {integrity: sha512-Ykk5FSu4ibeD6qfKQH/CkBRdSGWkxi35KMNei0z59kTPAlgzpE/Qf1gTx2sxih8Q05KBO/aFhcF/UkBW5iI1Ww==}\n     peerDependencies:\n       react: ^16.8 || ^17.0 || ^18.0\n       react-dom: ^16.8 || ^17.0 || ^18.0",
    "output": "fix(deps): update dependency vaul to v0.9.6"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 84b62fe..fe06cab 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -132,7 +132,7 @@ devDependencies:\n     version: 8.56.12\n   '@types/node':\n     specifier: ^20.14.2\n-    version: 20.16.5\n+    version: 20.16.6\n   '@types/react':\n     specifier: npm:types-react@rc\n     version: /types-react@19.0.0-rc.1\n@@ -2725,8 +2725,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.16.5:\n-    resolution: {integrity: sha512-VwYCweNo3ERajwy0IUlqqcyZ8/A7Zwa9ZP3MnENWcB11AejO+tLy3pu850goUW2FC/IJMdZUfKpX/yxL1gymCA==}\n+  /@types/node@20.16.6:\n+    resolution: {integrity: sha512-T7PpxM/6yeDE+AdlVysT62BX6/bECZOmQAgiFg5NoBd5MQheZ3tzal7f1wvzfiEcmrcJNRi2zRr2nY2zF+0uqw==}\n     dependencies:\n       undici-types: 6.19.8\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.16.6"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 40c9832..84b62fe 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -120,7 +120,7 @@ dependencies:\n devDependencies:\n   '@faker-js/faker':\n     specifier: ^9.0.0\n-    version: 9.0.1\n+    version: 9.0.2\n   '@ianvs/prettier-plugin-sort-imports':\n     specifier: ^4.2.1\n     version: 4.3.1(prettier@3.3.3)\n@@ -1178,8 +1178,8 @@ packages:\n     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n     dev: true\n \n-  /@faker-js/faker@9.0.1:\n-    resolution: {integrity: sha512-4mDeYIgM3By7X6t5E6eYwLAa+2h4DeZDF7thhzIg6XB76jeEvMwadYAMCFJL/R4AnEBcAUO9+gL0vhy3s+qvZA==}\n+  /@faker-js/faker@9.0.2:\n+    resolution: {integrity: sha512-nI/FP30ZGXb+UaR7yXawVTH40NVKXPIx0tA3GKjkKLjorqBoMAeq4iSEacl8mJmpVhOCDa0vYHwYDmOOcFMrYw==}\n     engines: {node: '>=18.0.0', npm: '>=9.0.0'}\n     dev: true\n ",
    "output": "chore(deps): update dependency @faker-js/faker to v9.0.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 6ce06c6..40c9832 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -109,7 +109,7 @@ dependencies:\n     version: 2.5.2\n   tailwindcss-animate:\n     specifier: ^1.0.7\n-    version: 1.0.7(tailwindcss@3.4.12)\n+    version: 1.0.7(tailwindcss@3.4.13)\n   vaul:\n     specifier: ^0.9.1\n     version: 0.9.4(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1)\n@@ -168,7 +168,7 @@ devDependencies:\n     version: 0.0.0-experimental-f8a5409-20240829(eslint@8.57.1)\n   eslint-plugin-tailwindcss:\n     specifier: ^3.17.0\n-    version: 3.17.4(tailwindcss@3.4.12)\n+    version: 3.17.4(tailwindcss@3.4.13)\n   pg:\n     specifier: ^8.11.5\n     version: 8.13.0\n@@ -186,7 +186,7 @@ devDependencies:\n     version: 6.0.1\n   tailwindcss:\n     specifier: ^3.4.3\n-    version: 3.4.12\n+    version: 3.4.13\n   tsx:\n     specifier: ^4.11.0\n     version: 4.19.1\n@@ -4073,7 +4073,7 @@ packages:\n       string.prototype.repeat: 1.0.0\n     dev: true\n \n-  /eslint-plugin-tailwindcss@3.17.4(tailwindcss@3.4.12):\n+  /eslint-plugin-tailwindcss@3.17.4(tailwindcss@3.4.13):\n     resolution: {integrity: sha512-gJAEHmCq2XFfUP/+vwEfEJ9igrPeZFg+skeMtsxquSQdxba9XRk5bn0Bp9jxG1VV9/wwPKi1g3ZjItu6MIjhNg==}\n     engines: {node: '>=18.12.0'}\n     peerDependencies:\n@@ -4081,7 +4081,7 @@ packages:\n     dependencies:\n       fast-glob: 3.3.2\n       postcss: 8.4.47\n-      tailwindcss: 3.4.12\n+      tailwindcss: 3.4.13\n     dev: true\n \n   /eslint-scope@7.2.2:\n@@ -5980,16 +5980,16 @@ packages:\n     resolution: {integrity: sha512-kjEBm+pvD+6eAwzJL2Bi+02/9LFLal1Gs61+QB7HvTfQQ0aXwC5LGT8PEt1gS0CWKktKe6ysPTAy3cBC5MeiIg==}\n     dev: false\n \n-  /tailwindcss-animate@1.0.7(tailwindcss@3.4.12):\n+  /tailwindcss-animate@1.0.7(tailwindcss@3.4.13):\n     resolution: {integrity: sha512-bl6mpH3T7I3UFxuvDEXLxy/VuFxBk5bbzplh7tXI68mwMokNYd1t9qPBHlnyTwfa4JGC4zP516I1hYYtQ/vspA==}\n     peerDependencies:\n       tailwindcss: '>=3.0.0 || insiders'\n     dependencies:\n-      tailwindcss: 3.4.12\n+      tailwindcss: 3.4.13\n     dev: false\n \n-  /tailwindcss@3.4.12:\n-    resolution: {integrity: sha512-Htf/gHj2+soPb9UayUNci/Ja3d8pTmu9ONTfh4QY8r3MATTZOzmv6UYWF7ZwikEIC8okpfqmGqrmDehua8mF8w==}\n+  /tailwindcss@3.4.13:\n+    resolution: {integrity: sha512-KqjHOJKogOUt5Bs752ykCeiwvi0fKVkr5oqsFNt/8px/tA8scFPIlkygsf6jXrfCqGHz7VflA6+yytWuM+XhFw==}\n     engines: {node: '>=14.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tailwindcss to v3.4.13"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 944d306..6ce06c6 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -159,7 +159,7 @@ devDependencies:\n     version: 8.57.1\n   eslint-config-next:\n     specifier: ^14.2.3\n-    version: 14.2.12(eslint@8.57.1)(typescript@5.6.2)\n+    version: 14.2.13(eslint@8.57.1)(typescript@5.6.2)\n   eslint-config-prettier:\n     specifier: ^9.1.0\n     version: 9.1.0(eslint@8.57.1)\n@@ -1490,8 +1490,8 @@ packages:\n     resolution: {integrity: sha512-6W0ndQvHR9sXcqcKeR/inD2UTRCs9+VkSK3lfaGmEuZs7EjwwXMO2BPYjz9oBrtfPL3xuTjtXsHKSsalYQ5l1Q==}\n     dev: false\n \n-  /@next/eslint-plugin-next@14.2.12:\n-    resolution: {integrity: sha512-cPrKbXtK8NTThOOFNxRGGTw+5s02Ek8z8ri/hZqeKs6uP8LOTGqFyBy6hpCXt7TvLzzriWiiwRyD4h0XYmPEEg==}\n+  /@next/eslint-plugin-next@14.2.13:\n+    resolution: {integrity: sha512-z8Mk0VljxhIzsSiZUSdt3wp+t2lKd+jk5a9Jsvh3zDGkItgDMfjv/ZbET6HsxEl/fSihVoHGsXV6VLyDH0lfTQ==}\n     dependencies:\n       glob: 10.3.10\n     dev: true\n@@ -3853,8 +3853,8 @@ packages:\n     engines: {node: '>=10'}\n     dev: true\n \n-  /eslint-config-next@14.2.12(eslint@8.57.1)(typescript@5.6.2):\n-    resolution: {integrity: sha512-fzUIlF6Ng1cUFFd013wn9H3YhKe3vV/cZBC0Ec9S64q/wGoTq0HlASA7WgiOwDAISSbzkLprInLiIMu6U8bqEw==}\n+  /eslint-config-next@14.2.13(eslint@8.57.1)(typescript@5.6.2):\n+    resolution: {integrity: sha512-aro1EKAoyYchnO/3Tlo91hnNBO7QO7qnv/79MAFC+4Jq8TdUVKQlht5d2F+YjrePjdpOvfL+mV9JPfyYNwkk1g==}\n     peerDependencies:\n       eslint: ^7.23.0 || ^8.0.0\n       typescript: '>=3.3.1'\n@@ -3862,7 +3862,7 @@ packages:\n       typescript:\n         optional: true\n     dependencies:\n-      '@next/eslint-plugin-next': 14.2.12\n+      '@next/eslint-plugin-next': 14.2.13\n       '@rushstack/eslint-patch': 1.10.4\n       '@typescript-eslint/eslint-plugin': 7.18.0(@typescript-eslint/parser@7.18.0)(eslint@8.57.1)(typescript@5.6.2)\n       '@typescript-eslint/parser': 7.18.0(eslint@8.57.1)(typescript@5.6.2)",
    "output": "chore(deps): update dependency eslint-config-next to v14.2.13"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 5e3ee38..944d306 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -112,7 +112,7 @@ dependencies:\n     version: 1.0.7(tailwindcss@3.4.12)\n   vaul:\n     specifier: ^0.9.1\n-    version: 0.9.3(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1)\n+    version: 0.9.4(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1)\n   zod:\n     specifier: ^3.23.8\n     version: 3.23.8\n@@ -6229,8 +6229,8 @@ packages:\n   /util-deprecate@1.0.2:\n     resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}\n \n-  /vaul@0.9.3(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1):\n-    resolution: {integrity: sha512-VNWuzw37fw6DWptl9PMUc9PH5NJpGqpetcxDMRiH/GzH2inJAEMwo/uZqaONlGseeOG8xDtrrp3nYoiZhyabpw==}\n+  /vaul@0.9.4(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1):\n+    resolution: {integrity: sha512-pcyIy1nEk6798ReNQpbVH/T/dYnoJ3bwyq7jmSp134s+bSvpWoSWQthm3/jfsQRvHNYIEK4ZKbkHUJ3YfLfw1w==}\n     peerDependencies:\n       react: ^16.8 || ^17.0 || ^18.0\n       react-dom: ^16.8 || ^17.0 || ^18.0",
    "output": "fix(deps): update dependency vaul to v0.9.4"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 7749543..424dee3 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -109,7 +109,7 @@ dependencies:\n     version: 2.5.2\n   tailwindcss-animate:\n     specifier: ^1.0.7\n-    version: 1.0.7(tailwindcss@3.4.11)\n+    version: 1.0.7(tailwindcss@3.4.12)\n   vaul:\n     specifier: ^0.9.1\n     version: 0.9.3(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1)\n@@ -168,7 +168,7 @@ devDependencies:\n     version: 0.0.0-experimental-f8a5409-20240829(eslint@8.57.1)\n   eslint-plugin-tailwindcss:\n     specifier: ^3.17.0\n-    version: 3.17.4(tailwindcss@3.4.11)\n+    version: 3.17.4(tailwindcss@3.4.12)\n   pg:\n     specifier: ^8.11.5\n     version: 8.12.0\n@@ -186,7 +186,7 @@ devDependencies:\n     version: 6.0.1\n   tailwindcss:\n     specifier: ^3.4.3\n-    version: 3.4.11\n+    version: 3.4.12\n   tsx:\n     specifier: ^4.11.0\n     version: 4.19.1\n@@ -4209,7 +4209,7 @@ packages:\n       string.prototype.repeat: 1.0.0\n     dev: true\n \n-  /eslint-plugin-tailwindcss@3.17.4(tailwindcss@3.4.11):\n+  /eslint-plugin-tailwindcss@3.17.4(tailwindcss@3.4.12):\n     resolution: {integrity: sha512-gJAEHmCq2XFfUP/+vwEfEJ9igrPeZFg+skeMtsxquSQdxba9XRk5bn0Bp9jxG1VV9/wwPKi1g3ZjItu6MIjhNg==}\n     engines: {node: '>=18.12.0'}\n     peerDependencies:\n@@ -4217,7 +4217,7 @@ packages:\n     dependencies:\n       fast-glob: 3.3.2\n       postcss: 8.4.47\n-      tailwindcss: 3.4.11\n+      tailwindcss: 3.4.12\n     dev: true\n \n   /eslint-scope@7.2.2:\n@@ -6123,16 +6123,16 @@ packages:\n     resolution: {integrity: sha512-kjEBm+pvD+6eAwzJL2Bi+02/9LFLal1Gs61+QB7HvTfQQ0aXwC5LGT8PEt1gS0CWKktKe6ysPTAy3cBC5MeiIg==}\n     dev: false\n \n-  /tailwindcss-animate@1.0.7(tailwindcss@3.4.11):\n+  /tailwindcss-animate@1.0.7(tailwindcss@3.4.12):\n     resolution: {integrity: sha512-bl6mpH3T7I3UFxuvDEXLxy/VuFxBk5bbzplh7tXI68mwMokNYd1t9qPBHlnyTwfa4JGC4zP516I1hYYtQ/vspA==}\n     peerDependencies:\n       tailwindcss: '>=3.0.0 || insiders'\n     dependencies:\n-      tailwindcss: 3.4.11\n+      tailwindcss: 3.4.12\n     dev: false\n \n-  /tailwindcss@3.4.11:\n-    resolution: {integrity: sha512-qhEuBcLemjSJk5ajccN9xJFtM/h0AVCPaA6C92jNP+M2J8kX+eMJHI7R2HFKUvvAsMpcfLILMCFYSeDwpMmlUg==}\n+  /tailwindcss@3.4.12:\n+    resolution: {integrity: sha512-Htf/gHj2+soPb9UayUNci/Ja3d8pTmu9ONTfh4QY8r3MATTZOzmv6UYWF7ZwikEIC8okpfqmGqrmDehua8mF8w==}\n     engines: {node: '>=14.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tailwindcss to v3.4.12"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 4a14a47..7749543 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -64,7 +64,7 @@ dependencies:\n     version: 1.0.0(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1)\n   date-fns:\n     specifier: ^4.0.0\n-    version: 4.0.0\n+    version: 4.1.0\n   drizzle-orm:\n     specifier: ^0.33.0\n     version: 0.33.0(pg@8.12.0)(postgres@3.4.4)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react@19.0.0-rc.1)\n@@ -91,7 +91,7 @@ dependencies:\n     version: 19.0.0-rc-fb9a90fa48-20240614\n   react-day-picker:\n     specifier: ^8.10.1\n-    version: 8.10.1(date-fns@4.0.0)(react@19.0.0-rc-fb9a90fa48-20240614)\n+    version: 8.10.1(date-fns@4.1.0)(react@19.0.0-rc-fb9a90fa48-20240614)\n   react-dom:\n     specifier: 19.0.0-rc-fb9a90fa48-20240614\n     version: 19.0.0-rc-fb9a90fa48-20240614(react@19.0.0-rc-fb9a90fa48-20240614)\n@@ -3474,8 +3474,8 @@ packages:\n       is-data-view: 1.0.1\n     dev: true\n \n-  /date-fns@4.0.0:\n-    resolution: {integrity: sha512-6K33+I8fQ5otvHgLIvKK1xmMbLAh0pduyrx7dwMXKiGYeoWhmk6M3Zoak9n7bXHMJQlHq1yqmdGy1QxKddJjUA==}\n+  /date-fns@4.1.0:\n+    resolution: {integrity: sha512-Ukq0owbQXxa/U3EGtsdVBkR1w7KOQ5gIBqdH2hkvknzZPYvBxb/aa6E8L7tmjFtkwZBu3UXBbjIgPo/Ez4xaNg==}\n     dev: false\n \n   /debug@3.2.7:\n@@ -5599,13 +5599,13 @@ packages:\n   /queue-microtask@1.2.3:\n     resolution: {integrity: sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==}\n \n-  /react-day-picker@8.10.1(date-fns@4.0.0)(react@19.0.0-rc-fb9a90fa48-20240614):\n+  /react-day-picker@8.10.1(date-fns@4.1.0)(react@19.0.0-rc-fb9a90fa48-20240614):\n     resolution: {integrity: sha512-TMx7fNbhLk15eqcMt+7Z7S2KF7mfTId/XJDjKE8f+IUcFn0l08/kI4FiYTL/0yuOLmEcbR4Fwe3GJf/NiiMnPA==}\n     peerDependencies:\n       date-fns: ^2.28.0 || ^3.0.0\n       react: ^16.8.0 || ^17.0.0 || ^18.0.0\n     dependencies:\n-      date-fns: 4.0.0\n+      date-fns: 4.1.0\n       react: 19.0.0-rc-fb9a90fa48-20240614\n     dev: false\n ",
    "output": "fix(deps): update dependency date-fns to v4.1.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex a8c9bdf..40a36a4 100644\n--- a/package.json\n+++ b/package.json\n@@ -43,7 +43,7 @@\n     \"class-variance-authority\": \"^0.7.0\",\n     \"clsx\": \"^2.1.1\",\n     \"cmdk\": \"^1.0.0\",\n-    \"date-fns\": \"^3.6.0\",\n+    \"date-fns\": \"^4.0.0\",\n     \"drizzle-orm\": \"^0.33.0\",\n     \"export-to-csv\": \"^1.3.0\",\n     \"geist\": \"^1.3.0\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 8e82a18..a340fb9 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -63,8 +63,8 @@ dependencies:\n     specifier: ^1.0.0\n     version: 1.0.0(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1)\n   date-fns:\n-    specifier: ^3.6.0\n-    version: 3.6.0\n+    specifier: ^4.0.0\n+    version: 4.0.0\n   drizzle-orm:\n     specifier: ^0.33.0\n     version: 0.33.0(pg@8.12.0)(postgres@3.4.4)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react@19.0.0-rc.1)\n@@ -91,7 +91,7 @@ dependencies:\n     version: 19.0.0-rc-fb9a90fa48-20240614\n   react-day-picker:\n     specifier: ^8.10.1\n-    version: 8.10.1(date-fns@3.6.0)(react@19.0.0-rc-fb9a90fa48-20240614)\n+    version: 8.10.1(date-fns@4.0.0)(react@19.0.0-rc-fb9a90fa48-20240614)\n   react-dom:\n     specifier: 19.0.0-rc-fb9a90fa48-20240614\n     version: 19.0.0-rc-fb9a90fa48-20240614(react@19.0.0-rc-fb9a90fa48-20240614)\n@@ -3469,8 +3469,8 @@ packages:\n       is-data-view: 1.0.1\n     dev: true\n \n-  /date-fns@3.6.0:\n-    resolution: {integrity: sha512-fRHTG8g/Gif+kSh50gaGEdToemgfj74aRX3swtiouboip5JDLAyDE9F11nHMIcvOaXeOC6D7SpNhi7uFyB7Uww==}\n+  /date-fns@4.0.0:\n+    resolution: {integrity: sha512-6K33+I8fQ5otvHgLIvKK1xmMbLAh0pduyrx7dwMXKiGYeoWhmk6M3Zoak9n7bXHMJQlHq1yqmdGy1QxKddJjUA==}\n     dev: false\n \n   /debug@3.2.7:\n@@ -5606,13 +5606,13 @@ packages:\n   /queue-microtask@1.2.3:\n     resolution: {integrity: sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==}\n \n-  /react-day-picker@8.10.1(date-fns@3.6.0)(react@19.0.0-rc-fb9a90fa48-20240614):\n+  /react-day-picker@8.10.1(date-fns@4.0.0)(react@19.0.0-rc-fb9a90fa48-20240614):\n     resolution: {integrity: sha512-TMx7fNbhLk15eqcMt+7Z7S2KF7mfTId/XJDjKE8f+IUcFn0l08/kI4FiYTL/0yuOLmEcbR4Fwe3GJf/NiiMnPA==}\n     peerDependencies:\n       date-fns: ^2.28.0 || ^3.0.0\n       react: ^16.8.0 || ^17.0.0 || ^18.0.0\n     dependencies:\n-      date-fns: 3.6.0\n+      date-fns: 4.0.0\n       react: 19.0.0-rc-fb9a90fa48-20240614\n     dev: false\n ",
    "output": "fix(deps): update dependency date-fns to v4"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 35143ce..8e82a18 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -120,7 +120,7 @@ dependencies:\n devDependencies:\n   '@faker-js/faker':\n     specifier: ^9.0.0\n-    version: 9.0.0\n+    version: 9.0.1\n   '@ianvs/prettier-plugin-sort-imports':\n     specifier: ^4.2.1\n     version: 4.3.1(prettier@3.3.3)\n@@ -1173,8 +1173,8 @@ packages:\n     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n     dev: true\n \n-  /@faker-js/faker@9.0.0:\n-    resolution: {integrity: sha512-dTDHJSmz6c1OJ6HO7jiUiIb4sB20Dlkb3pxYsKm0qTXm2Bmj97rlXIhlvaFsW2rvCi+OLlwKLVSS6ZxFUVZvjQ==}\n+  /@faker-js/faker@9.0.1:\n+    resolution: {integrity: sha512-4mDeYIgM3By7X6t5E6eYwLAa+2h4DeZDF7thhzIg6XB76jeEvMwadYAMCFJL/R4AnEBcAUO9+gL0vhy3s+qvZA==}\n     engines: {node: '>=18.0.0', npm: '>=9.0.0'}\n     dev: true\n ",
    "output": "chore(deps): update dependency @faker-js/faker to v9.0.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 0c49e90..bad3e0b 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -112,7 +112,7 @@ dependencies:\n     version: 1.0.7(tailwindcss@3.4.11)\n   vaul:\n     specifier: ^0.9.1\n-    version: 0.9.2(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1)\n+    version: 0.9.3(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1)\n   zod:\n     specifier: ^3.23.8\n     version: 3.23.8\n@@ -6379,8 +6379,8 @@ packages:\n   /util-deprecate@1.0.2:\n     resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}\n \n-  /vaul@0.9.2(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1):\n-    resolution: {integrity: sha512-m2A7UgAU/JMWiwUhmARK8LMvEfXiudA4trJxfZF5AtH2uBTgN855msZ2yjPnUDfa7i5glocMYLSfML8wriBtBA==}\n+  /vaul@0.9.3(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1):\n+    resolution: {integrity: sha512-VNWuzw37fw6DWptl9PMUc9PH5NJpGqpetcxDMRiH/GzH2inJAEMwo/uZqaONlGseeOG8xDtrrp3nYoiZhyabpw==}\n     peerDependencies:\n       react: ^16.8 || ^17.0 || ^18.0\n       react-dom: ^16.8 || ^17.0 || ^18.0",
    "output": "fix(deps): update dependency vaul to v0.9.3"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 6eabc96..7c83174 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -189,7 +189,7 @@ devDependencies:\n     version: 3.4.11\n   tsx:\n     specifier: ^4.11.0\n-    version: 4.19.0\n+    version: 4.19.1\n   typescript:\n     specifier: ^5.4.5\n     version: 5.6.2\n@@ -4468,12 +4468,6 @@ packages:\n       get-intrinsic: 1.2.4\n     dev: true\n \n-  /get-tsconfig@4.7.6:\n-    resolution: {integrity: sha512-ZAqrLlu18NbDdRaHq+AKXzAmqIUPswPWKUchfytdAjiRFnCe5ojG2bstg6mRiZabkKfCoL/e98pbBELIV/YCeA==}\n-    dependencies:\n-      resolve-pkg-maps: 1.0.0\n-    dev: true\n-\n   /get-tsconfig@4.8.0:\n     resolution: {integrity: sha512-Pgba6TExTZ0FJAn1qkJAjIeKoDJ3CsI2ChuLohJnZl/tTU8MVrq3b+2t5UOPfRa4RMsorClBjJALkJUMjG1PAw==}\n     dependencies:\n@@ -6234,13 +6228,13 @@ packages:\n     dev: false\n     optional: true\n \n-  /tsx@4.19.0:\n-    resolution: {integrity: sha512-bV30kM7bsLZKZIOCHeMNVMJ32/LuJzLVajkQI/qf92J2Qr08ueLQvW00PUZGiuLPP760UINwupgUj8qrSCPUKg==}\n+  /tsx@4.19.1:\n+    resolution: {integrity: sha512-0flMz1lh74BR4wOvBjuh9olbnwqCPc35OOlfyzHba0Dc+QNUeWX/Gq2YTbnwcWPO3BMd8fkzRVrHcsR+a7z7rA==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:\n       esbuild: 0.23.1\n-      get-tsconfig: 4.7.6\n+      get-tsconfig: 4.8.0\n     optionalDependencies:\n       fsevents: 2.3.3\n     dev: true",
    "output": "chore(deps): update dependency tsx to v4.19.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 6d2e606..a8c9bdf 100644\n--- a/package.json\n+++ b/package.json\n@@ -63,7 +63,7 @@\n     \"zod\": \"^3.23.8\"\n   },\n   \"devDependencies\": {\n-    \"@faker-js/faker\": \"^8.4.1\",\n+    \"@faker-js/faker\": \"^9.0.0\",\n     \"@ianvs/prettier-plugin-sort-imports\": \"^4.2.1\",\n     \"@total-typescript/ts-reset\": \"^0.6.0\",\n     \"@types/eslint\": \"^8.56.10\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 58fa5a5..4bf8623 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -119,8 +119,8 @@ dependencies:\n \n devDependencies:\n   '@faker-js/faker':\n-    specifier: ^8.4.1\n-    version: 8.4.1\n+    specifier: ^9.0.0\n+    version: 9.0.0\n   '@ianvs/prettier-plugin-sort-imports':\n     specifier: ^4.2.1\n     version: 4.3.1(prettier@3.3.3)\n@@ -1173,9 +1173,9 @@ packages:\n     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n     dev: true\n \n-  /@faker-js/faker@8.4.1:\n-    resolution: {integrity: sha512-XQ3cU+Q8Uqmrbf2e0cIC/QN43sTBSC8KF12u29Mb47tWrt2hAgBXSgpZMj4Ao8Uk0iJcU99QsOCaIL8934obCg==}\n-    engines: {node: ^14.17.0 || ^16.13.0 || >=18.0.0, npm: '>=6.14.13'}\n+  /@faker-js/faker@9.0.0:\n+    resolution: {integrity: sha512-dTDHJSmz6c1OJ6HO7jiUiIb4sB20Dlkb3pxYsKm0qTXm2Bmj97rlXIhlvaFsW2rvCi+OLlwKLVSS6ZxFUVZvjQ==}\n+    engines: {node: '>=18.0.0', npm: '>=9.0.0'}\n     dev: true\n \n   /@floating-ui/core@1.6.4:",
    "output": "chore(deps): update dependency @faker-js/faker to v9"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 6260c8c..58fa5a5 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -112,7 +112,7 @@ dependencies:\n     version: 1.0.7(tailwindcss@3.4.10)\n   vaul:\n     specifier: ^0.9.1\n-    version: 0.9.1(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1)\n+    version: 0.9.2(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1)\n   zod:\n     specifier: ^3.23.8\n     version: 3.23.8\n@@ -6367,8 +6367,8 @@ packages:\n   /util-deprecate@1.0.2:\n     resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}\n \n-  /vaul@0.9.1(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1):\n-    resolution: {integrity: sha512-fAhd7i4RNMinx+WEm6pF3nOl78DFkAazcN04ElLPFF9BMCNGbY/kou8UMhIcicm0rJCNePJP0Yyza60gGOD0Jw==}\n+  /vaul@0.9.2(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1):\n+    resolution: {integrity: sha512-m2A7UgAU/JMWiwUhmARK8LMvEfXiudA4trJxfZF5AtH2uBTgN855msZ2yjPnUDfa7i5glocMYLSfML8wriBtBA==}\n     peerDependencies:\n       react: ^16.8 || ^17.0 || ^18.0\n       react-dom: ^16.8 || ^17.0 || ^18.0",
    "output": "fix(deps): update dependency vaul to v0.9.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 3096de9..8b48e6a 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -132,7 +132,7 @@ devDependencies:\n     version: 8.56.12\n   '@types/node':\n     specifier: ^20.14.2\n-    version: 20.16.4\n+    version: 20.16.5\n   '@types/react':\n     specifier: npm:types-react@rc\n     version: /types-react@19.0.0-rc.1\n@@ -2716,8 +2716,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.16.4:\n-    resolution: {integrity: sha512-ioyQ1zK9aGEomJ45zz8S8IdzElyxhvP1RVWnPrXDf6wFaUb+kk1tEcVVJkF7RPGM0VWI7cp5U57oCPIn5iN1qg==}\n+  /@types/node@20.16.5:\n+    resolution: {integrity: sha512-VwYCweNo3ERajwy0IUlqqcyZ8/A7Zwa9ZP3MnENWcB11AejO+tLy3pu850goUW2FC/IJMdZUfKpX/yxL1gymCA==}\n     dependencies:\n       undici-types: 6.19.8\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.16.5"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 032e5a6..3dc2689 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -132,7 +132,7 @@ devDependencies:\n     version: 8.56.12\n   '@types/node':\n     specifier: ^20.14.2\n-    version: 20.16.3\n+    version: 20.16.4\n   '@types/react':\n     specifier: npm:types-react@rc\n     version: /types-react@19.0.0-rc.1\n@@ -2716,8 +2716,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.16.3:\n-    resolution: {integrity: sha512-/wdGiWRkMOm53gAsSyFMXFZHbVg7C6CbkrzHNpaHoYfsUWPg7m6ZRKtvQjgvQ9i8WT540a3ydRlRQbxjY30XxQ==}\n+  /@types/node@20.16.4:\n+    resolution: {integrity: sha512-ioyQ1zK9aGEomJ45zz8S8IdzElyxhvP1RVWnPrXDf6wFaUb+kk1tEcVVJkF7RPGM0VWI7cp5U57oCPIn5iN1qg==}\n     dependencies:\n       undici-types: 6.19.8\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.16.4"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/README.md b/README.md\nindex 5962213..2f41414 100644\n--- a/README.md\n+++ b/README.md\n@@ -73,9 +73,9 @@ This is a shadcn table with server-side sorting, filtering, and pagination. It i\n    Also install the required shadcn components and other required packages with the following commands:\n \n    ```bash\n-   pnpm dlx shadcn-ui@latest init\n+   pnpm dlx shadcn@latest init\n \n-   pnpm dlx shadcn-ui@latest add badge button calendar checkbox command dialog dropdown-menu form input label popover select separator skeleton sonner table toggle-group tooltip\n+   pnpm dlx shadcn@latest add badge button calendar checkbox command dialog dropdown-menu form input label popover select separator skeleton sonner table toggle-group tooltip\n \n    pnpm add drizzle-orm postgres @tanstack/react-table zod @t3-oss/env-nextjs\n    pnpm add -D drizzle-kit dotenv-cli pg tsx\ndiff --git a/package.json b/package.json\nindex 6ee6c06..6d2e606 100644\n--- a/package.json\n+++ b/package.json\n@@ -14,7 +14,7 @@\n     \"format:write\": \"prettier --write \\\"**/*.{ts,tsx,mdx}\\\" --cache\",\n     \"format:check\": \"prettier --check \\\"**/*.{ts,tsx,mdx}\\\" --cache\",\n     \"check\": \"pnpm lint && pnpm typecheck && pnpm format:check\",\n-    \"shadcn:add\": \"pnpm dlx shadcn-ui@latest add\",\n+    \"shadcn:add\": \"pnpm dlx shadcn@latest add\",\n     \"db:generate\": \"dotenv drizzle-kit generate\",\n     \"db:introspect\": \"dotenv drizzle-kit introspect\",\n     \"db:push\": \"dotenv drizzle-kit push\",",
    "output": "docs: update shadcn CLI script (#562)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 2ccfd58..032e5a6 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -126,7 +126,7 @@ devDependencies:\n     version: 4.3.1(prettier@3.3.3)\n   '@total-typescript/ts-reset':\n     specifier: ^0.6.0\n-    version: 0.6.0\n+    version: 0.6.1\n   '@types/eslint':\n     specifier: ^8.56.10\n     version: 8.56.12\n@@ -2676,8 +2676,8 @@ packages:\n     engines: {node: '>=12'}\n     dev: false\n \n-  /@total-typescript/ts-reset@0.6.0:\n-    resolution: {integrity: sha512-HWZnkM+5z3INAUZMohVXvX8/vm9sjmfmV2NRAswvv5WsU2m+OZsHAVZ0fl8xf2QH9kyPkinghVW6g3DOQ2xt5Q==}\n+  /@total-typescript/ts-reset@0.6.1:\n+    resolution: {integrity: sha512-cka47fVSo6lfQDIATYqb/vO1nvFfbPw7uWLayIXIhGETj0wcOOlrlkobOMDNQOFr9QOafegUPq13V2+6vtD7yg==}\n     dev: true\n \n   /@types/eslint@8.56.12:",
    "output": "chore(deps): update dependency @total-typescript/ts-reset to v0.6.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex b7fc0b7..6cc72b1 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -132,7 +132,7 @@ devDependencies:\n     version: 8.56.12\n   '@types/node':\n     specifier: ^20.14.2\n-    version: 20.16.2\n+    version: 20.16.3\n   '@types/react':\n     specifier: npm:types-react@rc\n     version: /types-react@19.0.0-rc.1\n@@ -2716,8 +2716,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.16.2:\n-    resolution: {integrity: sha512-91s/n4qUPV/wg8eE9KHYW1kouTfDk2FPGjXbBMfRWP/2vg1rCXNQL1OCabwGs0XSdukuK+MwCDXE30QpSeMUhQ==}\n+  /@types/node@20.16.3:\n+    resolution: {integrity: sha512-/wdGiWRkMOm53gAsSyFMXFZHbVg7C6CbkrzHNpaHoYfsUWPg7m6ZRKtvQjgvQ9i8WT540a3ydRlRQbxjY30XxQ==}\n     dependencies:\n       undici-types: 6.19.8\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.16.3"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 54152e4..b7fc0b7 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -70,7 +70,7 @@ dependencies:\n     version: 0.33.0(pg@8.12.0)(postgres@3.4.4)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react@19.0.0-rc.1)\n   export-to-csv:\n     specifier: ^1.3.0\n-    version: 1.3.0\n+    version: 1.4.0\n   geist:\n     specifier: ^1.3.0\n     version: 1.3.1(next@15.0.0-rc.0)\n@@ -4231,8 +4231,8 @@ packages:\n     engines: {node: '>=0.10.0'}\n     dev: true\n \n-  /export-to-csv@1.3.0:\n-    resolution: {integrity: sha512-msPjbfozZdYzDghAEKmCVH5veMeKHNacplE6noXvGiA8AeV1qa/SOxp6JXDjF9R8Kf6v3ypI6jskiY19dkhZeA==}\n+  /export-to-csv@1.4.0:\n+    resolution: {integrity: sha512-6CX17Cu+rC2Fi2CyZ4CkgVG3hLl6BFsdAxfXiZkmDFIDY4mRx2y2spdeH6dqPHI9rP+AsHEfGeKz84Uuw7+Pmg==}\n     engines: {node: ^v12.20.0 || >=v14.13.0}\n     dev: false\n ",
    "output": "fix(deps): update dependency export-to-csv to v1.4.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 36eaca6..7dbe4a2 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -132,7 +132,7 @@ devDependencies:\n     version: 8.56.12\n   '@types/node':\n     specifier: ^20.14.2\n-    version: 20.16.1\n+    version: 20.16.2\n   '@types/react':\n     specifier: npm:types-react@rc\n     version: /types-react@19.0.0-rc.1\n@@ -2716,10 +2716,10 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.16.1:\n-    resolution: {integrity: sha512-zJDo7wEadFtSyNz5QITDfRcrhqDvQI1xQNQ0VoizPjM/dVAODqqIUWbJPkvsxmTI0MYRGRikcdjMPhOssnPejQ==}\n+  /@types/node@20.16.2:\n+    resolution: {integrity: sha512-91s/n4qUPV/wg8eE9KHYW1kouTfDk2FPGjXbBMfRWP/2vg1rCXNQL1OCabwGs0XSdukuK+MwCDXE30QpSeMUhQ==}\n     dependencies:\n-      undici-types: 6.19.6\n+      undici-types: 6.19.8\n     dev: true\n \n   /@types/prop-types@15.7.12:\n@@ -6222,8 +6222,8 @@ packages:\n       which-boxed-primitive: 1.0.2\n     dev: true\n \n-  /undici-types@6.19.6:\n-    resolution: {integrity: sha512-e/vggGopEfTKSvj4ihnOLTsqhrKRN3LeO6qSN/GxohhuRv8qH9bNQ4B8W7e/vFL+0XTnmHPB4/kegunZGA4Org==}\n+  /undici-types@6.19.8:\n+    resolution: {integrity: sha512-ve2KP6f/JnbPBFyobGHuerC9g1FYGn/F8n1LWTwNxCEzd6IfqTwUQcNXgEtmmQ6DlRrC1hrSrBnCZPokRrDHjw==}\n     dev: true\n \n   /update-browserslist-db@1.1.0(browserslist@4.23.3):",
    "output": "chore(deps): update dependency @types/node to v20.16.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 2e91da2..b61f14f 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -189,7 +189,7 @@ devDependencies:\n     version: 3.4.10\n   tsx:\n     specifier: ^4.11.0\n-    version: 4.18.0\n+    version: 4.19.0\n   typescript:\n     specifier: ^5.4.5\n     version: 5.5.4\n@@ -6141,8 +6141,8 @@ packages:\n     dev: false\n     optional: true\n \n-  /tsx@4.18.0:\n-    resolution: {integrity: sha512-a1jaKBSVQkd6yEc1/NI7G6yHFfefIcuf3QJST7ZEyn4oQnxLYrZR5uZAM8UrwUa3Ge8suiZHcNS1gNrEvmobqg==}\n+  /tsx@4.19.0:\n+    resolution: {integrity: sha512-bV30kM7bsLZKZIOCHeMNVMJ32/LuJzLVajkQI/qf92J2Qr08ueLQvW00PUZGiuLPP760UINwupgUj8qrSCPUKg==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tsx to v4.19.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 0eece30..2e91da2 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -153,7 +153,7 @@ devDependencies:\n     version: 7.4.2\n   drizzle-kit:\n     specifier: ^0.24.0\n-    version: 0.24.1\n+    version: 0.24.2\n   eslint:\n     specifier: ^8.57.0\n     version: 8.57.0\n@@ -3531,8 +3531,8 @@ packages:\n     engines: {node: '>=12'}\n     dev: true\n \n-  /drizzle-kit@0.24.1:\n-    resolution: {integrity: sha512-y47ZuFpy3ZEz5v2P4Q4m7CZpC9infdmFAVP8klfl92hyBBvgWlyFnriDkycK2HXqB1PrYWNTck2p5TfFY5+EWw==}\n+  /drizzle-kit@0.24.2:\n+    resolution: {integrity: sha512-nXOaTSFiuIaTMhS8WJC2d4EBeIcN9OSt2A2cyFbQYBAZbi7lRsVGJNqDpEwPqYfJz38yxbY/UtbvBBahBfnExQ==}\n     hasBin: true\n     dependencies:\n       '@drizzle-team/brocli': 0.10.1",
    "output": "chore(deps): update dependency drizzle-kit to v0.24.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 7a988db..0eece30 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -129,7 +129,7 @@ devDependencies:\n     version: 0.6.0\n   '@types/eslint':\n     specifier: ^8.56.10\n-    version: 8.56.11\n+    version: 8.56.12\n   '@types/node':\n     specifier: ^20.14.2\n     version: 20.16.1\n@@ -2675,8 +2675,8 @@ packages:\n     resolution: {integrity: sha512-HWZnkM+5z3INAUZMohVXvX8/vm9sjmfmV2NRAswvv5WsU2m+OZsHAVZ0fl8xf2QH9kyPkinghVW6g3DOQ2xt5Q==}\n     dev: true\n \n-  /@types/eslint@8.56.11:\n-    resolution: {integrity: sha512-sVBpJMf7UPo/wGecYOpk2aQya2VUGeHhe38WG7/mN5FufNSubf5VT9Uh9Uyp8/eLJpu1/tuhJ/qTo4mhSB4V4Q==}\n+  /@types/eslint@8.56.12:\n+    resolution: {integrity: sha512-03ruubjWyOHlmljCVoxSuNDdmfZDzsrrz0P2LeJsOXr+ZwFQ+0yQIwNCwt/GYhV7Z31fgtXJTAEs+FYlEL851g==}\n     dependencies:\n       '@types/estree': 1.0.5\n       '@types/json-schema': 7.0.15",
    "output": "chore(deps): update dependency @types/eslint to v8.56.12"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex e5732e5..7a988db 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -46,7 +46,7 @@ dependencies:\n     version: 1.1.2(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1)\n   '@t3-oss/env-nextjs':\n     specifier: ^0.11.0\n-    version: 0.11.0(typescript@5.5.4)(zod@3.23.8)\n+    version: 0.11.1(typescript@5.5.4)(zod@3.23.8)\n   '@tanstack/react-table':\n     specifier: ^8.17.3\n     version: 8.20.5(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)\n@@ -2627,8 +2627,8 @@ packages:\n       tslib: 2.6.3\n     dev: false\n \n-  /@t3-oss/env-core@0.11.0(typescript@5.5.4)(zod@3.23.8):\n-    resolution: {integrity: sha512-PSalC5bG0a7XbyoLydiQdAnx3gICX6IQNctvh+TyLrdFxsxgocdj9Ui7sd061UlBzi+z4aIGjnem1kZx9QtUgQ==}\n+  /@t3-oss/env-core@0.11.1(typescript@5.5.4)(zod@3.23.8):\n+    resolution: {integrity: sha512-MaxOwEoG1ntCFoKJsS7nqwgcxLW1SJw238AJwfJeaz3P/8GtkxXZsPPolsz1AdYvUTbe3XvqZ/VCdfjt+3zmKw==}\n     peerDependencies:\n       typescript: '>=5.0.0'\n       zod: ^3.0.0\n@@ -2640,8 +2640,8 @@ packages:\n       zod: 3.23.8\n     dev: false\n \n-  /@t3-oss/env-nextjs@0.11.0(typescript@5.5.4)(zod@3.23.8):\n-    resolution: {integrity: sha512-gcRrY2CzSMSrxDf5+fKCUfzbBK125IxOcJHcoMVdjcTmYxEgIZFZ5qPPtngOY3UmTeXSqRZOGuNiosqWTFTkMw==}\n+  /@t3-oss/env-nextjs@0.11.1(typescript@5.5.4)(zod@3.23.8):\n+    resolution: {integrity: sha512-rx2XL9+v6wtOqLNJbD5eD8OezKlQD1BtC0WvvtHwBgK66jnF5+wGqtgkKK4Ygie1LVmoDClths2T4tdFmRvGrQ==}\n     peerDependencies:\n       typescript: '>=5.0.0'\n       zod: ^3.0.0\n@@ -2649,7 +2649,7 @@ packages:\n       typescript:\n         optional: true\n     dependencies:\n-      '@t3-oss/env-core': 0.11.0(typescript@5.5.4)(zod@3.23.8)\n+      '@t3-oss/env-core': 0.11.1(typescript@5.5.4)(zod@3.23.8)\n       typescript: 5.5.4\n       zod: 3.23.8\n     dev: false",
    "output": "fix(deps): update dependency @t3-oss/env-nextjs to v0.11.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex b856792..e5732e5 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -49,7 +49,7 @@ dependencies:\n     version: 0.11.0(typescript@5.5.4)(zod@3.23.8)\n   '@tanstack/react-table':\n     specifier: ^8.17.3\n-    version: 8.20.1(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)\n+    version: 8.20.5(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)\n   babel-plugin-react-compiler:\n     specifier: 0.0.0-experimental-696af53-20240625\n     version: 0.0.0-experimental-696af53-20240625\n@@ -2654,20 +2654,20 @@ packages:\n       zod: 3.23.8\n     dev: false\n \n-  /@tanstack/react-table@8.20.1(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614):\n-    resolution: {integrity: sha512-PJK+07qbengObe5l7c8vCdtefXm8cyR4i078acWrHbdm8JKw1ES7YpmOtVt9ALUVEEFAHscdVpGRhRgikgFMbQ==}\n+  /@tanstack/react-table@8.20.5(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614):\n+    resolution: {integrity: sha512-WEHopKw3znbUZ61s9i0+i9g8drmDo6asTWbrQh8Us63DAk/M0FkmIqERew6P71HI75ksZ2Pxyuf4vvKh9rAkiA==}\n     engines: {node: '>=12'}\n     peerDependencies:\n       react: '>=16.8'\n       react-dom: '>=16.8'\n     dependencies:\n-      '@tanstack/table-core': 8.20.1\n+      '@tanstack/table-core': 8.20.5\n       react: 19.0.0-rc-fb9a90fa48-20240614\n       react-dom: 19.0.0-rc-fb9a90fa48-20240614(react@19.0.0-rc-fb9a90fa48-20240614)\n     dev: false\n \n-  /@tanstack/table-core@8.20.1:\n-    resolution: {integrity: sha512-5Ly5TIRHnWH7vSDell9B/OVyV380qqIJVg7H7R7jU4fPEmOD4smqAX7VRflpYI09srWR8aj5OLD2Ccs1pI5mTg==}\n+  /@tanstack/table-core@8.20.5:\n+    resolution: {integrity: sha512-P9dF7XbibHph2PFRz8gfBKEXEY/HJPOhym8CHmjF8y3q5mWpKx9xtZapXQUWCgkqvsK0R46Azuz+VaxD4Xl+Tg==}\n     engines: {node: '>=12'}\n     dev: false\n ",
    "output": "fix(deps): update dependency @tanstack/react-table to v8.20.5"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 8a361fa..6b72fc0 100644\n--- a/package.json\n+++ b/package.json\n@@ -65,7 +65,7 @@\n   \"devDependencies\": {\n     \"@faker-js/faker\": \"^8.4.1\",\n     \"@ianvs/prettier-plugin-sort-imports\": \"^4.2.1\",\n-    \"@total-typescript/ts-reset\": \"^0.5.1\",\n+    \"@total-typescript/ts-reset\": \"^0.6.0\",\n     \"@types/eslint\": \"^8.56.10\",\n     \"@types/node\": \"^20.14.2\",\n     \"@types/react\": \"npm:types-react@rc\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 7ab3d58..8f46c16 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -125,8 +125,8 @@ devDependencies:\n     specifier: ^4.2.1\n     version: 4.3.1(prettier@3.3.3)\n   '@total-typescript/ts-reset':\n-    specifier: ^0.5.1\n-    version: 0.5.1\n+    specifier: ^0.6.0\n+    version: 0.6.0\n   '@types/eslint':\n     specifier: ^8.56.10\n     version: 8.56.11\n@@ -2671,8 +2671,8 @@ packages:\n     engines: {node: '>=12'}\n     dev: false\n \n-  /@total-typescript/ts-reset@0.5.1:\n-    resolution: {integrity: sha512-AqlrT8YA1o7Ff5wPfMOL0pvL+1X+sw60NN6CcOCqs658emD6RfiXhF7Gu9QcfKBH7ELY2nInLhKSCWVoNL70MQ==}\n+  /@total-typescript/ts-reset@0.6.0:\n+    resolution: {integrity: sha512-HWZnkM+5z3INAUZMohVXvX8/vm9sjmfmV2NRAswvv5WsU2m+OZsHAVZ0fl8xf2QH9kyPkinghVW6g3DOQ2xt5Q==}\n     dev: true\n \n   /@types/eslint@8.56.11:",
    "output": "chore(deps): update dependency @total-typescript/ts-reset to ^0.6.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex ade5de5..7ab3d58 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -7,7 +7,7 @@ settings:\n dependencies:\n   '@hookform/resolvers':\n     specifier: ^3.4.2\n-    version: 3.9.0(react-hook-form@7.52.2)\n+    version: 3.9.0(react-hook-form@7.53.0)\n   '@radix-ui/react-checkbox':\n     specifier: ^1.0.4\n     version: 1.1.1(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1)\n@@ -97,7 +97,7 @@ dependencies:\n     version: 19.0.0-rc-fb9a90fa48-20240614(react@19.0.0-rc-fb9a90fa48-20240614)\n   react-hook-form:\n     specifier: ^7.51.5\n-    version: 7.52.2(react@19.0.0-rc-fb9a90fa48-20240614)\n+    version: 7.53.0(react@19.0.0-rc-fb9a90fa48-20240614)\n   server-only:\n     specifier: ^0.0.1\n     version: 0.0.1\n@@ -497,7 +497,7 @@ packages:\n     resolution: {integrity: sha512-bV21/9LQmcQeCPEg3BDFtvwL6cwiTMksYNWQQ4KOxCZikEGalWtenoZ0wCiukJINlGCIi2KXx01g4FoH/LxpzQ==}\n     requiresBuild: true\n     dependencies:\n-      tslib: 2.6.3\n+      tslib: 2.7.0\n     dev: false\n     optional: true\n \n@@ -1206,12 +1206,12 @@ packages:\n     resolution: {integrity: sha512-dWO2pw8hhi+WrXq1YJy2yCuWoL20PddgGaqTgVe4cOS9Q6qklXCiA1tJEqX6BEwRNSCP84/afac9hd4MS+zEUA==}\n     dev: false\n \n-  /@hookform/resolvers@3.9.0(react-hook-form@7.52.2):\n+  /@hookform/resolvers@3.9.0(react-hook-form@7.53.0):\n     resolution: {integrity: sha512-bU0Gr4EepJ/EQsH/IwEzYLsT/PEj5C0ynLQ4m+GSHS+xKH4TfSelhluTgOaoc4kA5s7eCsQbM4wvZLzELmWzUg==}\n     peerDependencies:\n       react-hook-form: ^7.0.0\n     dependencies:\n-      react-hook-form: 7.52.2(react@19.0.0-rc-fb9a90fa48-20240614)\n+      react-hook-form: 7.53.0(react@19.0.0-rc-fb9a90fa48-20240614)\n     dev: false\n \n   /@humanwhocodes/config-array@0.11.14:\n@@ -5532,8 +5532,8 @@ packages:\n       scheduler: 0.25.0-rc-fb9a90fa48-20240614\n     dev: false\n \n-  /react-hook-form@7.52.2(react@19.0.0-rc-fb9a90fa48-20240614):\n-    resolution: {integrity: sha512-pqfPEbERnxxiNMPd0bzmt1tuaPcVccywFDpyk2uV5xCIBphHV5T8SVnX9/o3kplPE1zzKt77+YIoq+EMwJp56A==}\n+  /react-hook-form@7.53.0(react@19.0.0-rc-fb9a90fa48-20240614):\n+    resolution: {integrity: sha512-M1n3HhqCww6S2hxLxciEXy2oISPnAzxY7gvwVPrtlczTM/1dDadXgUxDpHMrMTblDOcm/AXtXxHwZ3jpg1mqKQ==}\n     engines: {node: '>=18.0.0'}\n     peerDependencies:\n       react: ^16.8.0 || ^17 || ^18 || ^19\n@@ -6135,6 +6135,12 @@ packages:\n     resolution: {integrity: sha512-xNvxJEOUiWPGhUuUdQgAJPKOOJfGnIyKySOc09XkKsgdUV/3E2zvwZYdejjmRgPCgcym1juLH3226yA7sEFJKQ==}\n     dev: false\n \n+  /tslib@2.7.0:\n+    resolution: {integrity: sha512-gLXCKdN1/j47AiHiOkJN69hJmcbGTHI0ImLmbYLHykhgeN0jVGola9yVjFgzCUklsZQMW55o+dW7IXv3RCXDzA==}\n+    requiresBuild: true\n+    dev: false\n+    optional: true\n+\n   /tsx@4.17.0:\n     resolution: {integrity: sha512-eN4mnDA5UMKDt4YZixo9tBioibaMBpoxBkD+rIPAjVmYERSG0/dWEY1CEFuV89CgASlKL499q8AhmkMnnjtOJg==}\n     engines: {node: '>=18.0.0'}",
    "output": "fix(deps): update dependency react-hook-form to v7.53.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex aadcad8..ade5de5 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -153,7 +153,7 @@ devDependencies:\n     version: 7.4.2\n   drizzle-kit:\n     specifier: ^0.24.0\n-    version: 0.24.0\n+    version: 0.24.1\n   eslint:\n     specifier: ^8.57.0\n     version: 8.57.0\n@@ -489,8 +489,8 @@ packages:\n       '@babel/helper-validator-identifier': 7.24.7\n       to-fast-properties: 2.0.0\n \n-  /@drizzle-team/brocli@0.8.2:\n-    resolution: {integrity: sha512-zTrFENsqGvOkBOuHDC1pXCkDXNd2UhP4lI3gYGhQ1R1SPeAAfqzPsV1dcpMy4uNU6kB5VpU5NGhvwxVNETR02A==}\n+  /@drizzle-team/brocli@0.10.1:\n+    resolution: {integrity: sha512-AHy0vjc+n/4w/8Mif+w86qpppHuF3AyXbcWW+R/W7GNA3F5/p2nuhlkCJaTXSLZheB4l1rtHzOfr9A7NwoR/Zg==}\n     dev: true\n \n   /@emnapi/runtime@1.2.0:\n@@ -3531,11 +3531,11 @@ packages:\n     engines: {node: '>=12'}\n     dev: true\n \n-  /drizzle-kit@0.24.0:\n-    resolution: {integrity: sha512-rUl5Rf5HLOVkAwHEVEi8xgulIRWzoys0q77RHGCxv5e9v8AI3JGFg7Ug5K1kn513RwNZbuNJMUKOXo0j8kPRgg==}\n+  /drizzle-kit@0.24.1:\n+    resolution: {integrity: sha512-y47ZuFpy3ZEz5v2P4Q4m7CZpC9infdmFAVP8klfl92hyBBvgWlyFnriDkycK2HXqB1PrYWNTck2p5TfFY5+EWw==}\n     hasBin: true\n     dependencies:\n-      '@drizzle-team/brocli': 0.8.2\n+      '@drizzle-team/brocli': 0.10.1\n       '@esbuild-kit/esm-loader': 2.6.5\n       esbuild: 0.19.12\n       esbuild-register: 3.6.0(esbuild@0.19.12)",
    "output": "chore(deps): update dependency drizzle-kit to v0.24.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 078c2c2..e5f85e6 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -132,7 +132,7 @@ devDependencies:\n     version: 8.56.11\n   '@types/node':\n     specifier: ^20.14.2\n-    version: 20.16.0\n+    version: 20.16.1\n   '@types/react':\n     specifier: npm:types-react@rc\n     version: /types-react@19.0.0-rc.1\n@@ -2711,8 +2711,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.16.0:\n-    resolution: {integrity: sha512-vDxceJcoZhIVh67S568bm1UGZO0DX0hpplJZxzeXMKwIPLn190ec5RRxQ69BKhX44SUGIxxgMdDY557lGLKprQ==}\n+  /@types/node@20.16.1:\n+    resolution: {integrity: sha512-zJDo7wEadFtSyNz5QITDfRcrhqDvQI1xQNQ0VoizPjM/dVAODqqIUWbJPkvsxmTI0MYRGRikcdjMPhOssnPejQ==}\n     dependencies:\n       undici-types: 6.19.6\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.16.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 92de048..078c2c2 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -132,7 +132,7 @@ devDependencies:\n     version: 8.56.11\n   '@types/node':\n     specifier: ^20.14.2\n-    version: 20.15.0\n+    version: 20.16.0\n   '@types/react':\n     specifier: npm:types-react@rc\n     version: /types-react@19.0.0-rc.1\n@@ -2711,10 +2711,10 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.15.0:\n-    resolution: {integrity: sha512-eQf4OkH6gA9v1W0iEpht/neozCsZKMTK+C4cU6/fv7wtJCCL8LEQ4hie2Ln8ZP/0YYM2xGj7//f8xyqItkJ6QA==}\n+  /@types/node@20.16.0:\n+    resolution: {integrity: sha512-vDxceJcoZhIVh67S568bm1UGZO0DX0hpplJZxzeXMKwIPLn190ec5RRxQ69BKhX44SUGIxxgMdDY557lGLKprQ==}\n     dependencies:\n-      undici-types: 6.13.0\n+      undici-types: 6.19.6\n     dev: true\n \n   /@types/prop-types@15.7.12:\n@@ -6252,8 +6252,8 @@ packages:\n       which-boxed-primitive: 1.0.2\n     dev: true\n \n-  /undici-types@6.13.0:\n-    resolution: {integrity: sha512-xtFJHudx8S2DSoujjMd1WeWvn7KKWFRESZTMeL1RptAYERu29D6jphMjjY+vn96jvN3kVPDNxU/E13VTaXj6jg==}\n+  /undici-types@6.19.6:\n+    resolution: {integrity: sha512-e/vggGopEfTKSvj4ihnOLTsqhrKRN3LeO6qSN/GxohhuRv8qH9bNQ4B8W7e/vFL+0XTnmHPB4/kegunZGA4Org==}\n     dev: true\n \n   /update-browserslist-db@1.1.0(browserslist@4.23.3):",
    "output": "chore(deps): update dependency @types/node to v20.16.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/hooks/use-data-table.ts b/src/hooks/use-data-table.ts\nindex fcbf355..1efc34e 100644\n--- a/src/hooks/use-data-table.ts\n+++ b/src/hooks/use-data-table.ts\n@@ -92,7 +92,7 @@ interface UseDataTableProps<TData>\n    */\n   startTransition?: React.TransitionStartFunction\n \n-  // Extend to make the sorting id type-safe\n+  // Extend to make the sorting id typesafe\n   initialState?: Omit<Partial<TableState>, \"sorting\"> & {\n     sorting?: {\n       id: Extract<keyof TData, string>",
    "output": "feat: update"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex e72d108..1cb9656 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -109,7 +109,7 @@ dependencies:\n     version: 2.5.2\n   tailwindcss-animate:\n     specifier: ^1.0.7\n-    version: 1.0.7(tailwindcss@3.4.9)\n+    version: 1.0.7(tailwindcss@3.4.10)\n   vaul:\n     specifier: ^0.9.1\n     version: 0.9.1(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1)\n@@ -168,7 +168,7 @@ devDependencies:\n     version: 0.0.0-experimental-9ed098e-20240725(eslint@8.57.0)\n   eslint-plugin-tailwindcss:\n     specifier: ^3.17.0\n-    version: 3.17.4(tailwindcss@3.4.9)\n+    version: 3.17.4(tailwindcss@3.4.10)\n   pg:\n     specifier: ^8.11.5\n     version: 8.12.0\n@@ -186,7 +186,7 @@ devDependencies:\n     version: 6.0.1\n   tailwindcss:\n     specifier: ^3.4.3\n-    version: 3.4.9\n+    version: 3.4.10\n   tsx:\n     specifier: ^4.11.0\n     version: 4.17.0\n@@ -4160,7 +4160,7 @@ packages:\n       string.prototype.matchall: 4.0.11\n     dev: true\n \n-  /eslint-plugin-tailwindcss@3.17.4(tailwindcss@3.4.9):\n+  /eslint-plugin-tailwindcss@3.17.4(tailwindcss@3.4.10):\n     resolution: {integrity: sha512-gJAEHmCq2XFfUP/+vwEfEJ9igrPeZFg+skeMtsxquSQdxba9XRk5bn0Bp9jxG1VV9/wwPKi1g3ZjItu6MIjhNg==}\n     engines: {node: '>=18.12.0'}\n     peerDependencies:\n@@ -4168,7 +4168,7 @@ packages:\n     dependencies:\n       fast-glob: 3.3.2\n       postcss: 8.4.41\n-      tailwindcss: 3.4.9\n+      tailwindcss: 3.4.10\n     dev: true\n \n   /eslint-scope@7.2.2:\n@@ -5406,10 +5406,10 @@ packages:\n       postcss: ^8.2.14\n     dependencies:\n       postcss: 8.4.41\n-      postcss-selector-parser: 6.1.1\n+      postcss-selector-parser: 6.1.2\n \n-  /postcss-selector-parser@6.1.1:\n-    resolution: {integrity: sha512-b4dlw/9V8A71rLIDsSwVmak9z2DuBUB7CA1/wSdelNEzqsjoSPeADTWNO09lpH49Diy3/JIZ2bSPB1dI3LJCHg==}\n+  /postcss-selector-parser@6.1.2:\n+    resolution: {integrity: sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==}\n     engines: {node: '>=4'}\n     dependencies:\n       cssesc: 3.0.0\n@@ -6071,16 +6071,16 @@ packages:\n     resolution: {integrity: sha512-kjEBm+pvD+6eAwzJL2Bi+02/9LFLal1Gs61+QB7HvTfQQ0aXwC5LGT8PEt1gS0CWKktKe6ysPTAy3cBC5MeiIg==}\n     dev: false\n \n-  /tailwindcss-animate@1.0.7(tailwindcss@3.4.9):\n+  /tailwindcss-animate@1.0.7(tailwindcss@3.4.10):\n     resolution: {integrity: sha512-bl6mpH3T7I3UFxuvDEXLxy/VuFxBk5bbzplh7tXI68mwMokNYd1t9qPBHlnyTwfa4JGC4zP516I1hYYtQ/vspA==}\n     peerDependencies:\n       tailwindcss: '>=3.0.0 || insiders'\n     dependencies:\n-      tailwindcss: 3.4.9\n+      tailwindcss: 3.4.10\n     dev: false\n \n-  /tailwindcss@3.4.9:\n-    resolution: {integrity: sha512-1SEOvRr6sSdV5IDf9iC+NU4dhwdqzF4zKKq3sAbasUWHEM6lsMhX+eNN5gkPx1BvLFEnZQEUFbXnGj8Qlp83Pg==}\n+  /tailwindcss@3.4.10:\n+    resolution: {integrity: sha512-KWZkVPm7yJRhdu4SRSl9d4AK2wM3a50UsvgHZO7xY77NQr2V+fIrEuoDGQcbvswWvFGbS2f6e+jC/6WJm1Dl0w==}\n     engines: {node: '>=14.0.0'}\n     hasBin: true\n     dependencies:\n@@ -6103,7 +6103,7 @@ packages:\n       postcss-js: 4.0.1(postcss@8.4.41)\n       postcss-load-config: 4.0.2(postcss@8.4.41)\n       postcss-nested: 6.2.0(postcss@8.4.41)\n-      postcss-selector-parser: 6.1.1\n+      postcss-selector-parser: 6.1.2\n       resolve: 1.22.8\n       sucrase: 3.35.0\n     transitivePeerDependencies:",
    "output": "chore(deps): update dependency tailwindcss to v3.4.10"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 49da72d..e72d108 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -106,7 +106,7 @@ dependencies:\n     version: 1.5.0(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)\n   tailwind-merge:\n     specifier: ^2.3.0\n-    version: 2.5.1\n+    version: 2.5.2\n   tailwindcss-animate:\n     specifier: ^1.0.7\n     version: 1.0.7(tailwindcss@3.4.9)\n@@ -6067,8 +6067,8 @@ packages:\n     resolution: {integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==}\n     engines: {node: '>= 0.4'}\n \n-  /tailwind-merge@2.5.1:\n-    resolution: {integrity: sha512-1zKDdExKvNltulO+J0x/Rqv40xQn78FHsEQVn3rxt8e4HdebRIT6o6zGeLYlGuxd3Efue9Y69qsp8vKwEhuEeg==}\n+  /tailwind-merge@2.5.2:\n+    resolution: {integrity: sha512-kjEBm+pvD+6eAwzJL2Bi+02/9LFLal1Gs61+QB7HvTfQQ0aXwC5LGT8PEt1gS0CWKktKe6ysPTAy3cBC5MeiIg==}\n     dev: false\n \n   /tailwindcss-animate@1.0.7(tailwindcss@3.4.9):",
    "output": "fix(deps): update dependency tailwind-merge to v2.5.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 7ed4848..49da72d 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -106,7 +106,7 @@ dependencies:\n     version: 1.5.0(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)\n   tailwind-merge:\n     specifier: ^2.3.0\n-    version: 2.5.0\n+    version: 2.5.1\n   tailwindcss-animate:\n     specifier: ^1.0.7\n     version: 1.0.7(tailwindcss@3.4.9)\n@@ -6067,8 +6067,8 @@ packages:\n     resolution: {integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==}\n     engines: {node: '>= 0.4'}\n \n-  /tailwind-merge@2.5.0:\n-    resolution: {integrity: sha512-a6Q/isR5XAo9IR7Hjh80BQDkn8PG9ONJpSO/U3vGzdKyKG125lPHNXdiPfeQ5X0EOG0qKlS/0qnxdBYkLlD6tA==}\n+  /tailwind-merge@2.5.1:\n+    resolution: {integrity: sha512-1zKDdExKvNltulO+J0x/Rqv40xQn78FHsEQVn3rxt8e4HdebRIT6o6zGeLYlGuxd3Efue9Y69qsp8vKwEhuEeg==}\n     dev: false\n \n   /tailwindcss-animate@1.0.7(tailwindcss@3.4.9):",
    "output": "fix(deps): update dependency tailwind-merge to v2.5.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 5e268a0..7ed4848 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -106,7 +106,7 @@ dependencies:\n     version: 1.5.0(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)\n   tailwind-merge:\n     specifier: ^2.3.0\n-    version: 2.4.0\n+    version: 2.5.0\n   tailwindcss-animate:\n     specifier: ^1.0.7\n     version: 1.0.7(tailwindcss@3.4.9)\n@@ -6067,8 +6067,8 @@ packages:\n     resolution: {integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==}\n     engines: {node: '>= 0.4'}\n \n-  /tailwind-merge@2.4.0:\n-    resolution: {integrity: sha512-49AwoOQNKdqKPd9CViyH5wJoSKsCDjUlzL8DxuGp3P1FsGY36NJDAa18jLZcaHAUUuTj+JB8IAo8zWgBNvBF7A==}\n+  /tailwind-merge@2.5.0:\n+    resolution: {integrity: sha512-a6Q/isR5XAo9IR7Hjh80BQDkn8PG9ONJpSO/U3vGzdKyKG125lPHNXdiPfeQ5X0EOG0qKlS/0qnxdBYkLlD6tA==}\n     dev: false\n \n   /tailwindcss-animate@1.0.7(tailwindcss@3.4.9):",
    "output": "fix(deps): update dependency tailwind-merge to v2.5.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 4e9296a..5e268a0 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -132,7 +132,7 @@ devDependencies:\n     version: 8.56.11\n   '@types/node':\n     specifier: ^20.14.2\n-    version: 20.14.14\n+    version: 20.14.15\n   '@types/react':\n     specifier: npm:types-react@rc\n     version: /types-react@19.0.0-rc.1\n@@ -2719,8 +2719,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.14.14:\n-    resolution: {integrity: sha512-d64f00982fS9YoOgJkAMolK7MN8Iq3TDdVjchbYHdEmjth/DHowx82GnoA+tVUAN+7vxfYUgAzi+JXbKNd2SDQ==}\n+  /@types/node@20.14.15:\n+    resolution: {integrity: sha512-Fz1xDMCF/B00/tYSVMlmK7hVeLh7jE5f3B7X1/hmV0MJBwE27KlS7EvD/Yp+z1lm8mVhwV5w+n8jOZG8AfTlKw==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.14.15"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex e7b47af..4e9296a 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -180,7 +180,7 @@ devDependencies:\n     version: 3.3.3\n   prettier-plugin-tailwindcss:\n     specifier: ^0.6.1\n-    version: 0.6.5(@ianvs/prettier-plugin-sort-imports@4.3.1)(prettier@3.3.3)\n+    version: 0.6.6(@ianvs/prettier-plugin-sort-imports@4.3.1)(prettier@3.3.3)\n   rimraf:\n     specifier: ^6.0.0\n     version: 6.0.1\n@@ -5463,8 +5463,8 @@ packages:\n     engines: {node: '>= 0.8.0'}\n     dev: true\n \n-  /prettier-plugin-tailwindcss@0.6.5(@ianvs/prettier-plugin-sort-imports@4.3.1)(prettier@3.3.3):\n-    resolution: {integrity: sha512-axfeOArc/RiGHjOIy9HytehlC0ZLeMaqY09mm8YCkMzznKiDkwFzOpBvtuhuv3xG5qB73+Mj7OCe2j/L1ryfuQ==}\n+  /prettier-plugin-tailwindcss@0.6.6(@ianvs/prettier-plugin-sort-imports@4.3.1)(prettier@3.3.3):\n+    resolution: {integrity: sha512-OPva5S7WAsPLEsOuOWXATi13QrCKACCiIonFgIR6V4lYv4QLp++UXVhZSzRbZxXGimkQtQT86CC6fQqTOybGng==}\n     engines: {node: '>=14.21.3'}\n     peerDependencies:\n       '@ianvs/prettier-plugin-sort-imports': '*'\n@@ -5478,6 +5478,7 @@ packages:\n       prettier-plugin-import-sort: '*'\n       prettier-plugin-jsdoc: '*'\n       prettier-plugin-marko: '*'\n+      prettier-plugin-multiline-arrays: '*'\n       prettier-plugin-organize-attributes: '*'\n       prettier-plugin-organize-imports: '*'\n       prettier-plugin-sort-imports: '*'\n@@ -5504,6 +5505,8 @@ packages:\n         optional: true\n       prettier-plugin-marko:\n         optional: true\n+      prettier-plugin-multiline-arrays:\n+        optional: true\n       prettier-plugin-organize-attributes:\n         optional: true\n       prettier-plugin-organize-imports:",
    "output": "chore(deps): update dependency prettier-plugin-tailwindcss to v0.6.6"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex d4ba56b..8a361fa 100644\n--- a/package.json\n+++ b/package.json\n@@ -44,7 +44,7 @@\n     \"clsx\": \"^2.1.1\",\n     \"cmdk\": \"^1.0.0\",\n     \"date-fns\": \"^3.6.0\",\n-    \"drizzle-orm\": \"^0.32.0\",\n+    \"drizzle-orm\": \"^0.33.0\",\n     \"export-to-csv\": \"^1.3.0\",\n     \"geist\": \"^1.3.0\",\n     \"nanoid\": \"^5.0.7\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 6b2c87e..e7b47af 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -66,8 +66,8 @@ dependencies:\n     specifier: ^3.6.0\n     version: 3.6.0\n   drizzle-orm:\n-    specifier: ^0.32.0\n-    version: 0.32.2(pg@8.12.0)(postgres@3.4.4)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react@19.0.0-rc.1)\n+    specifier: ^0.33.0\n+    version: 0.33.0(pg@8.12.0)(postgres@3.4.4)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react@19.0.0-rc.1)\n   export-to-csv:\n     specifier: ^1.3.0\n     version: 1.3.0\n@@ -3560,8 +3560,8 @@ packages:\n       - supports-color\n     dev: true\n \n-  /drizzle-orm@0.32.2(pg@8.12.0)(postgres@3.4.4)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react@19.0.0-rc.1):\n-    resolution: {integrity: sha512-3fXKzPzrgZIcnWCSLiERKN5Opf9Iagrag75snfFlKeKSYB1nlgPBshzW3Zn6dQymkyiib+xc4nIz0t8U+Xdpuw==}\n+  /drizzle-orm@0.33.0(pg@8.12.0)(postgres@3.4.4)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react@19.0.0-rc.1):\n+    resolution: {integrity: sha512-SHy72R2Rdkz0LEq0PSG/IdvnT3nGiWuRk+2tXZQ90GVq/XQhpCzu/EFT3V2rox+w8MlkBQxifF8pCStNYnERfA==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=3'",
    "output": "fix(deps): update dependency drizzle-orm to ^0.33.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex feb8395..d4ba56b 100644\n--- a/package.json\n+++ b/package.json\n@@ -74,7 +74,7 @@\n     \"@typescript-eslint/parser\": \"^7.11.0\",\n     \"autoprefixer\": \"^10.4.19\",\n     \"dotenv-cli\": \"^7.4.2\",\n-    \"drizzle-kit\": \"^0.23.0\",\n+    \"drizzle-kit\": \"^0.24.0\",\n     \"eslint\": \"^8.57.0\",\n     \"eslint-config-next\": \"^14.2.3\",\n     \"eslint-config-prettier\": \"^9.1.0\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex b07bb71..6b2c87e 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -152,8 +152,8 @@ devDependencies:\n     specifier: ^7.4.2\n     version: 7.4.2\n   drizzle-kit:\n-    specifier: ^0.23.0\n-    version: 0.23.2\n+    specifier: ^0.24.0\n+    version: 0.24.0\n   eslint:\n     specifier: ^8.57.0\n     version: 8.57.0\n@@ -3548,8 +3548,8 @@ packages:\n     engines: {node: '>=12'}\n     dev: true\n \n-  /drizzle-kit@0.23.2:\n-    resolution: {integrity: sha512-NWkQ7GD2OTbQ7HzcjsaCOf3n0tlFPSEAF38fvDpwDj8jRbGWGFtN2cD8I8wp4lU+5Os/oyP2xycTKGLHdPipUw==}\n+  /drizzle-kit@0.24.0:\n+    resolution: {integrity: sha512-rUl5Rf5HLOVkAwHEVEi8xgulIRWzoys0q77RHGCxv5e9v8AI3JGFg7Ug5K1kn513RwNZbuNJMUKOXo0j8kPRgg==}\n     hasBin: true\n     dependencies:\n       '@drizzle-team/brocli': 0.8.2",
    "output": "chore(deps): update dependency drizzle-kit to ^0.24.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 7a3efcb..b07bb71 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -109,7 +109,7 @@ dependencies:\n     version: 2.4.0\n   tailwindcss-animate:\n     specifier: ^1.0.7\n-    version: 1.0.7(tailwindcss@3.4.8)\n+    version: 1.0.7(tailwindcss@3.4.9)\n   vaul:\n     specifier: ^0.9.1\n     version: 0.9.1(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1)\n@@ -168,7 +168,7 @@ devDependencies:\n     version: 0.0.0-experimental-9ed098e-20240725(eslint@8.57.0)\n   eslint-plugin-tailwindcss:\n     specifier: ^3.17.0\n-    version: 3.17.4(tailwindcss@3.4.8)\n+    version: 3.17.4(tailwindcss@3.4.9)\n   pg:\n     specifier: ^8.11.5\n     version: 8.12.0\n@@ -186,7 +186,7 @@ devDependencies:\n     version: 6.0.1\n   tailwindcss:\n     specifier: ^3.4.3\n-    version: 3.4.8\n+    version: 3.4.9\n   tsx:\n     specifier: ^4.11.0\n     version: 4.17.0\n@@ -4160,7 +4160,7 @@ packages:\n       string.prototype.matchall: 4.0.11\n     dev: true\n \n-  /eslint-plugin-tailwindcss@3.17.4(tailwindcss@3.4.8):\n+  /eslint-plugin-tailwindcss@3.17.4(tailwindcss@3.4.9):\n     resolution: {integrity: sha512-gJAEHmCq2XFfUP/+vwEfEJ9igrPeZFg+skeMtsxquSQdxba9XRk5bn0Bp9jxG1VV9/wwPKi1g3ZjItu6MIjhNg==}\n     engines: {node: '>=18.12.0'}\n     peerDependencies:\n@@ -4168,7 +4168,7 @@ packages:\n     dependencies:\n       fast-glob: 3.3.2\n       postcss: 8.4.41\n-      tailwindcss: 3.4.8\n+      tailwindcss: 3.4.9\n     dev: true\n \n   /eslint-scope@7.2.2:\n@@ -4342,6 +4342,14 @@ packages:\n     dependencies:\n       cross-spawn: 7.0.3\n       signal-exit: 4.1.0\n+    dev: true\n+\n+  /foreground-child@3.3.0:\n+    resolution: {integrity: sha512-Ld2g8rrAyMYFXBhEqMz8ZAHBi4J4uS1i/CxGMDnjyFWddMXLVcDp051DZfu+t7+ab7Wv6SMqpWmyFIj5UbfFvg==}\n+    engines: {node: '>=14'}\n+    dependencies:\n+      cross-spawn: 7.0.3\n+      signal-exit: 4.1.0\n \n   /fraction.js@4.3.7:\n     resolution: {integrity: sha512-ZsDfxO51wGAXREY55a7la9LScWpwv9RxIrYABrlvOFBlH/ShPnrtsXeuUIfXKKOVicNxQ+o8JTbJvjS4M89yew==}\n@@ -4446,7 +4454,7 @@ packages:\n     resolution: {integrity: sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==}\n     hasBin: true\n     dependencies:\n-      foreground-child: 3.2.1\n+      foreground-child: 3.3.0\n       jackspeak: 3.4.3\n       minimatch: 9.0.5\n       minipass: 7.1.2\n@@ -6060,16 +6068,16 @@ packages:\n     resolution: {integrity: sha512-49AwoOQNKdqKPd9CViyH5wJoSKsCDjUlzL8DxuGp3P1FsGY36NJDAa18jLZcaHAUUuTj+JB8IAo8zWgBNvBF7A==}\n     dev: false\n \n-  /tailwindcss-animate@1.0.7(tailwindcss@3.4.8):\n+  /tailwindcss-animate@1.0.7(tailwindcss@3.4.9):\n     resolution: {integrity: sha512-bl6mpH3T7I3UFxuvDEXLxy/VuFxBk5bbzplh7tXI68mwMokNYd1t9qPBHlnyTwfa4JGC4zP516I1hYYtQ/vspA==}\n     peerDependencies:\n       tailwindcss: '>=3.0.0 || insiders'\n     dependencies:\n-      tailwindcss: 3.4.8\n+      tailwindcss: 3.4.9\n     dev: false\n \n-  /tailwindcss@3.4.8:\n-    resolution: {integrity: sha512-GkP17r9GQkxgZ9FKHJQEnjJuKBcbFhMFzKu5slmN6NjlCuFnYJMQ8N4AZ6VrUyiRXlDtPKHkesuQ/MS913Nvdg==}\n+  /tailwindcss@3.4.9:\n+    resolution: {integrity: sha512-1SEOvRr6sSdV5IDf9iC+NU4dhwdqzF4zKKq3sAbasUWHEM6lsMhX+eNN5gkPx1BvLFEnZQEUFbXnGj8Qlp83Pg==}\n     engines: {node: '>=14.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tailwindcss to v3.4.9"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 73e2a20..9ebc8f4 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -109,7 +109,7 @@ dependencies:\n     version: 2.4.0\n   tailwindcss-animate:\n     specifier: ^1.0.7\n-    version: 1.0.7(tailwindcss@3.4.7)\n+    version: 1.0.7(tailwindcss@3.4.8)\n   vaul:\n     specifier: ^0.9.1\n     version: 0.9.1(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1)\n@@ -168,7 +168,7 @@ devDependencies:\n     version: 0.0.0-experimental-9ed098e-20240725(eslint@8.57.0)\n   eslint-plugin-tailwindcss:\n     specifier: ^3.17.0\n-    version: 3.17.4(tailwindcss@3.4.7)\n+    version: 3.17.4(tailwindcss@3.4.8)\n   pg:\n     specifier: ^8.11.5\n     version: 8.12.0\n@@ -186,7 +186,7 @@ devDependencies:\n     version: 6.0.1\n   tailwindcss:\n     specifier: ^3.4.3\n-    version: 3.4.7\n+    version: 3.4.8\n   tsx:\n     specifier: ^4.11.0\n     version: 4.16.5\n@@ -4150,7 +4150,7 @@ packages:\n       string.prototype.matchall: 4.0.11\n     dev: true\n \n-  /eslint-plugin-tailwindcss@3.17.4(tailwindcss@3.4.7):\n+  /eslint-plugin-tailwindcss@3.17.4(tailwindcss@3.4.8):\n     resolution: {integrity: sha512-gJAEHmCq2XFfUP/+vwEfEJ9igrPeZFg+skeMtsxquSQdxba9XRk5bn0Bp9jxG1VV9/wwPKi1g3ZjItu6MIjhNg==}\n     engines: {node: '>=18.12.0'}\n     peerDependencies:\n@@ -4158,7 +4158,7 @@ packages:\n     dependencies:\n       fast-glob: 3.3.2\n       postcss: 8.4.41\n-      tailwindcss: 3.4.7\n+      tailwindcss: 3.4.8\n     dev: true\n \n   /eslint-scope@7.2.2:\n@@ -6050,16 +6050,16 @@ packages:\n     resolution: {integrity: sha512-49AwoOQNKdqKPd9CViyH5wJoSKsCDjUlzL8DxuGp3P1FsGY36NJDAa18jLZcaHAUUuTj+JB8IAo8zWgBNvBF7A==}\n     dev: false\n \n-  /tailwindcss-animate@1.0.7(tailwindcss@3.4.7):\n+  /tailwindcss-animate@1.0.7(tailwindcss@3.4.8):\n     resolution: {integrity: sha512-bl6mpH3T7I3UFxuvDEXLxy/VuFxBk5bbzplh7tXI68mwMokNYd1t9qPBHlnyTwfa4JGC4zP516I1hYYtQ/vspA==}\n     peerDependencies:\n       tailwindcss: '>=3.0.0 || insiders'\n     dependencies:\n-      tailwindcss: 3.4.7\n+      tailwindcss: 3.4.8\n     dev: false\n \n-  /tailwindcss@3.4.7:\n-    resolution: {integrity: sha512-rxWZbe87YJb4OcSopb7up2Ba4U82BoiSGUdoDr3Ydrg9ckxFS/YWsvhN323GMcddgU65QRy7JndC7ahhInhvlQ==}\n+  /tailwindcss@3.4.8:\n+    resolution: {integrity: sha512-GkP17r9GQkxgZ9FKHJQEnjJuKBcbFhMFzKu5slmN6NjlCuFnYJMQ8N4AZ6VrUyiRXlDtPKHkesuQ/MS913Nvdg==}\n     engines: {node: '>=14.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tailwindcss to v3.4.8"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex ba43a9f..9791914 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -67,7 +67,7 @@ dependencies:\n     version: 3.6.0\n   drizzle-orm:\n     specifier: ^0.32.0\n-    version: 0.32.1(pg@8.12.0)(postgres@3.4.4)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react@19.0.0-rc.1)\n+    version: 0.32.2(pg@8.12.0)(postgres@3.4.4)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react@19.0.0-rc.1)\n   export-to-csv:\n     specifier: ^1.3.0\n     version: 1.3.0\n@@ -3551,8 +3551,8 @@ packages:\n       - supports-color\n     dev: true\n \n-  /drizzle-orm@0.32.1(pg@8.12.0)(postgres@3.4.4)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react@19.0.0-rc.1):\n-    resolution: {integrity: sha512-Wq1J+lL8PzwR5K3a1FfoWsbs8powjr3pGA4+5+2ueN1VTLDNFYEolUyUWFtqy8DVRvYbL2n7sXZkgVmK9dQkng==}\n+  /drizzle-orm@0.32.2(pg@8.12.0)(postgres@3.4.4)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react@19.0.0-rc.1):\n+    resolution: {integrity: sha512-3fXKzPzrgZIcnWCSLiERKN5Opf9Iagrag75snfFlKeKSYB1nlgPBshzW3Zn6dQymkyiib+xc4nIz0t8U+Xdpuw==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=3'",
    "output": "fix(deps): update dependency drizzle-orm to v0.32.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex c6d0677..ba43a9f 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -153,7 +153,7 @@ devDependencies:\n     version: 7.4.2\n   drizzle-kit:\n     specifier: ^0.23.0\n-    version: 0.23.1\n+    version: 0.23.2\n   eslint:\n     specifier: ^8.57.0\n     version: 8.57.0\n@@ -3539,8 +3539,8 @@ packages:\n     engines: {node: '>=12'}\n     dev: true\n \n-  /drizzle-kit@0.23.1:\n-    resolution: {integrity: sha512-posGQhj8/K4S4CPhk7BO9+IcpNdIh96t0DvcAr/NvMKhPhe5D0MELzmpq9R2MpmSP3fd+Z3upwidtetrw7xnjg==}\n+  /drizzle-kit@0.23.2:\n+    resolution: {integrity: sha512-NWkQ7GD2OTbQ7HzcjsaCOf3n0tlFPSEAF38fvDpwDj8jRbGWGFtN2cD8I8wp4lU+5Os/oyP2xycTKGLHdPipUw==}\n     hasBin: true\n     dependencies:\n       '@drizzle-team/brocli': 0.8.2",
    "output": "chore(deps): update dependency drizzle-kit to v0.23.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 7b7947f..c6d0677 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -49,7 +49,7 @@ dependencies:\n     version: 0.11.0(typescript@5.5.4)(zod@3.23.8)\n   '@tanstack/react-table':\n     specifier: ^8.17.3\n-    version: 8.19.3(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)\n+    version: 8.20.1(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)\n   babel-plugin-react-compiler:\n     specifier: 0.0.0-experimental-696af53-20240625\n     version: 0.0.0-experimental-696af53-20240625\n@@ -2653,20 +2653,20 @@ packages:\n       zod: 3.23.8\n     dev: false\n \n-  /@tanstack/react-table@8.19.3(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614):\n-    resolution: {integrity: sha512-MtgPZc4y+cCRtU16y1vh1myuyZ2OdkWgMEBzyjYsoMWMicKZGZvcDnub3Zwb6XF2pj9iRMvm1SO1n57lS0vXLw==}\n+  /@tanstack/react-table@8.20.1(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614):\n+    resolution: {integrity: sha512-PJK+07qbengObe5l7c8vCdtefXm8cyR4i078acWrHbdm8JKw1ES7YpmOtVt9ALUVEEFAHscdVpGRhRgikgFMbQ==}\n     engines: {node: '>=12'}\n     peerDependencies:\n       react: '>=16.8'\n       react-dom: '>=16.8'\n     dependencies:\n-      '@tanstack/table-core': 8.19.3\n+      '@tanstack/table-core': 8.20.1\n       react: 19.0.0-rc-fb9a90fa48-20240614\n       react-dom: 19.0.0-rc-fb9a90fa48-20240614(react@19.0.0-rc-fb9a90fa48-20240614)\n     dev: false\n \n-  /@tanstack/table-core@8.19.3:\n-    resolution: {integrity: sha512-IqREj9ADoml9zCAouIG/5kCGoyIxPFdqdyoxis9FisXFi5vT+iYfEfLosq4xkU/iDbMcEuAj+X8dWRLvKYDNoQ==}\n+  /@tanstack/table-core@8.20.1:\n+    resolution: {integrity: sha512-5Ly5TIRHnWH7vSDell9B/OVyV380qqIJVg7H7R7jU4fPEmOD4smqAX7VRflpYI09srWR8aj5OLD2Ccs1pI5mTg==}\n     engines: {node: '>=12'}\n     dev: false\n ",
    "output": "fix(deps): update dependency @tanstack/react-table to v8.20.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/app/_components/tasks-table.tsx b/src/app/_components/tasks-table.tsx\nindex 5ba2376..901fd4d 100644\n--- a/src/app/_components/tasks-table.tsx\n+++ b/src/app/_components/tasks-table.tsx\n@@ -76,9 +76,8 @@ export function TasksTable({ tasksPromise }: TasksTableProps) {\n     /* optional props */\n     filterFields,\n     enableAdvancedFilter: featureFlags.includes(\"advancedFilter\"),\n-    defaultPerPage: 10,\n-    defaultSort: \"createdAt.desc\",\n-    state: {\n+    initialState: {\n+      sorting: [{ id: \"createdAt\", desc: true }],\n       columnPinning: { right: [\"actions\"] },\n     },\n     // For remembering the previous row selection on page change\ndiff --git a/src/hooks/use-data-table.ts b/src/hooks/use-data-table.ts\nindex 5bdae63..fae534d 100644\n--- a/src/hooks/use-data-table.ts\n+++ b/src/hooks/use-data-table.ts\n@@ -15,6 +15,7 @@ import {\n   type PaginationState,\n   type SortingState,\n   type TableOptions,\n+  type TableState,\n   type VisibilityState,\n } from \"@tanstack/react-table\"\n import { z } from \"zod\"\n@@ -70,21 +71,12 @@ interface UseDataTableProps<TData>\n    */\n   enableAdvancedFilter?: boolean\n \n-  /**\n-   * The default number of rows per page.\n-   * @default 10\n-   * @type number | undefined\n-   * @example 20\n-   */\n-  defaultPerPage?: number\n-\n-  /**\n-   * The default sort order.\n-   * @default undefined\n-   * @type `${Extract<keyof TData, string | number>}.${\"asc\" | \"desc\"}` | undefined\n-   * @example \"createdAt.desc\"\n-   */\n-  defaultSort?: `${Extract<keyof TData, string | number>}.${\"asc\" | \"desc\"}`\n+  initialState?: Omit<Partial<TableState>, \"sorting\"> & {\n+    sorting?: {\n+      id: Extract<keyof TData, string>\n+      desc: boolean\n+    }[]\n+  }\n }\n \n const searchParamsSchema = z.object({\n@@ -97,8 +89,6 @@ export function useDataTable<TData>({\n   pageCount = -1,\n   filterFields = [],\n   enableAdvancedFilter = false,\n-  defaultPerPage = 10,\n-  defaultSort,\n   ...props\n }: UseDataTableProps<TData>) {\n   const router = useRouter()\n@@ -108,8 +98,11 @@ export function useDataTable<TData>({\n   // Search params\n   const search = searchParamsSchema.parse(Object.fromEntries(searchParams))\n   const page = search.page\n-  const perPage = search.per_page ?? defaultPerPage\n-  const sort = search.sort ?? defaultSort\n+  const perPage =\n+    search.per_page ?? props.initialState?.pagination?.pageSize ?? 10\n+  const sort =\n+    search.sort ??\n+    `${props.initialState?.sorting?.[0]?.id}.${props.initialState?.sorting?.[0]?.desc ? \"desc\" : \"asc\"}`\n   const [column, order] = sort?.split(\".\") ?? []\n \n   // Memoize computation of searchableColumns and filterableColumns\n@@ -291,6 +284,7 @@ export function useDataTable<TData>({\n   ])\n \n   const table = useReactTable({\n+    ...props,\n     pageCount,\n     state: {\n       pagination,\n@@ -314,7 +308,6 @@ export function useDataTable<TData>({\n     manualPagination: true,\n     manualSorting: true,\n     manualFiltering: true,\n-    ...props,\n   })\n \n   return { table }",
    "output": "feat: use initialState"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/app/_components/tasks-table.tsx b/src/app/_components/tasks-table.tsx\nindex 7146413..3bbaad3 100644\n--- a/src/app/_components/tasks-table.tsx\n+++ b/src/app/_components/tasks-table.tsx\n@@ -78,7 +78,7 @@ export function TasksTable({ tasksPromise }: TasksTableProps) {\n     enableAdvancedFilter: featureFlags.includes(\"advancedFilter\"),\n     state: {\n       sorting: [{ id: \"createdAt\", desc: true }],\n-      pagination: { pageIndex: 0, pageSize: 20 },\n+      pagination: { pageIndex: 0, pageSize: 10 },\n       columnPinning: { right: [\"actions\"] },\n     },\n     // For remembering the previous row selection on page change",
    "output": "chore: reduce pagesize"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/app/_components/tasks-table.tsx b/src/app/_components/tasks-table.tsx\nindex c1fc419..3bbaad3 100644\n--- a/src/app/_components/tasks-table.tsx\n+++ b/src/app/_components/tasks-table.tsx\n@@ -81,7 +81,7 @@ export function TasksTable({ tasksPromise }: TasksTableProps) {\n       pagination: { pageIndex: 0, pageSize: 10 },\n       columnPinning: { right: [\"actions\"] },\n     },\n-    // For remembering the row selection state when paginating\n+    // For remembering the previous row selection on page change\n     getRowId: (originalRow, index) => `${originalRow.id}-${index}`,\n     /* */\n   })\ndiff --git a/src/hooks/use-data-table.ts b/src/hooks/use-data-table.ts\nindex fd0fb4f..bb6a4f3 100644\n--- a/src/hooks/use-data-table.ts\n+++ b/src/hooks/use-data-table.ts\n@@ -175,8 +175,8 @@ export function useDataTable<TData>({\n   // Handle server-side pagination\n   const [{ pageIndex, pageSize }, setPagination] =\n     React.useState<PaginationState>({\n-      pageIndex: page - 1,\n-      pageSize: state?.pagination?.pageSize ?? per_page ?? 10,\n+      pageIndex: page - 1 ?? state?.pagination?.pageIndex ?? 0,\n+      pageSize: per_page ?? state?.pagination?.pageSize ?? 10,\n     })\n \n   const pagination = React.useMemo(\n@@ -188,14 +188,12 @@ export function useDataTable<TData>({\n   )\n \n   // Handle server-side sorting\n-  const [sorting, setSorting] = React.useState<SortingState>(\n-    state?.sorting ?? [\n-      {\n-        id: column ?? \"\",\n-        desc: order === \"desc\",\n-      },\n-    ]\n-  )\n+  const [sorting, setSorting] = React.useState<SortingState>([\n+    {\n+      id: column ?? state?.sorting?.[0]?.id ?? \"\",\n+      desc: order === \"desc\" ?? state?.sorting?.[0]?.desc ?? false,\n+    },\n+  ])\n \n   React.useEffect(() => {\n     router.push(",
    "output": "feat: presist state"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/app/_components/tasks-table.tsx b/src/app/_components/tasks-table.tsx\nindex f6f59c1..c1fc419 100644\n--- a/src/app/_components/tasks-table.tsx\n+++ b/src/app/_components/tasks-table.tsx\n@@ -81,13 +81,11 @@ export function TasksTable({ tasksPromise }: TasksTableProps) {\n       pagination: { pageIndex: 0, pageSize: 10 },\n       columnPinning: { right: [\"actions\"] },\n     },\n-    // For remebering the row selection\n+    // For remembering the row selection state when paginating\n     getRowId: (originalRow, index) => `${originalRow.id}-${index}`,\n     /* */\n   })\n \n-  console.log({ data })\n-\n   return (\n     <DataTable\n       table={table}\ndiff --git a/src/hooks/use-data-table.ts b/src/hooks/use-data-table.ts\nindex 6ae6acb..fd0fb4f 100644\n--- a/src/hooks/use-data-table.ts\n+++ b/src/hooks/use-data-table.ts\n@@ -72,11 +72,18 @@ interface UseDataTableProps<TData>\n    */\n   enableAdvancedFilter?: boolean\n \n+  /**\n+   * The `state` option can be used to optionally _control_ part or all of the table state. The state you pass here will merge with and overwrite the internal automatically-managed state to produce the final state for the table. You can also listen to state changes via the `onStateChange` option.\n+   * > Note: Any state passed in here will override both the internal state and any other `initialState` you provide.\n+   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#state)\n+   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n+   */\n   state?: Omit<Partial<TableState>, \"sorting\"> & {\n     sorting?: {\n       id: Extract<keyof TData, string>\n       desc: boolean\n     }[]\n+    pagination?: { pageSize: number }\n   }\n }\n \n@@ -167,12 +174,10 @@ export function useDataTable<TData>({\n \n   // Handle server-side pagination\n   const [{ pageIndex, pageSize }, setPagination] =\n-    React.useState<PaginationState>(\n-      state?.pagination ?? {\n-        pageIndex: page - 1,\n-        pageSize: per_page ?? 10,\n-      }\n-    )\n+    React.useState<PaginationState>({\n+      pageIndex: page - 1,\n+      pageSize: state?.pagination?.pageSize ?? per_page ?? 10,\n+    })\n \n   const pagination = React.useMemo(\n     () => ({",
    "output": "feat: better use-data-table hook"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 60cd92a..7b7947f 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -7,7 +7,7 @@ settings:\n dependencies:\n   '@hookform/resolvers':\n     specifier: ^3.4.2\n-    version: 3.9.0(react-hook-form@7.52.1)\n+    version: 3.9.0(react-hook-form@7.52.2)\n   '@radix-ui/react-checkbox':\n     specifier: ^1.0.4\n     version: 1.1.1(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1)\n@@ -97,7 +97,7 @@ dependencies:\n     version: 19.0.0-rc-fb9a90fa48-20240614(react@19.0.0-rc-fb9a90fa48-20240614)\n   react-hook-form:\n     specifier: ^7.51.5\n-    version: 7.52.1(react@19.0.0-rc-fb9a90fa48-20240614)\n+    version: 7.52.2(react@19.0.0-rc-fb9a90fa48-20240614)\n   server-only:\n     specifier: ^0.0.1\n     version: 0.0.1\n@@ -1197,12 +1197,12 @@ packages:\n     resolution: {integrity: sha512-dWO2pw8hhi+WrXq1YJy2yCuWoL20PddgGaqTgVe4cOS9Q6qklXCiA1tJEqX6BEwRNSCP84/afac9hd4MS+zEUA==}\n     dev: false\n \n-  /@hookform/resolvers@3.9.0(react-hook-form@7.52.1):\n+  /@hookform/resolvers@3.9.0(react-hook-form@7.52.2):\n     resolution: {integrity: sha512-bU0Gr4EepJ/EQsH/IwEzYLsT/PEj5C0ynLQ4m+GSHS+xKH4TfSelhluTgOaoc4kA5s7eCsQbM4wvZLzELmWzUg==}\n     peerDependencies:\n       react-hook-form: ^7.0.0\n     dependencies:\n-      react-hook-form: 7.52.1(react@19.0.0-rc-fb9a90fa48-20240614)\n+      react-hook-form: 7.52.2(react@19.0.0-rc-fb9a90fa48-20240614)\n     dev: false\n \n   /@humanwhocodes/config-array@0.11.14:\n@@ -5552,9 +5552,9 @@ packages:\n       scheduler: 0.25.0-rc-fb9a90fa48-20240614\n     dev: false\n \n-  /react-hook-form@7.52.1(react@19.0.0-rc-fb9a90fa48-20240614):\n-    resolution: {integrity: sha512-uNKIhaoICJ5KQALYZ4TOaOLElyM+xipord+Ha3crEFhTntdLvWZqVY49Wqd/0GiVCA/f9NjemLeiNPjG7Hpurg==}\n-    engines: {node: '>=12.22.0'}\n+  /react-hook-form@7.52.2(react@19.0.0-rc-fb9a90fa48-20240614):\n+    resolution: {integrity: sha512-pqfPEbERnxxiNMPd0bzmt1tuaPcVccywFDpyk2uV5xCIBphHV5T8SVnX9/o3kplPE1zzKt77+YIoq+EMwJp56A==}\n+    engines: {node: '>=18.0.0'}\n     peerDependencies:\n       react: ^16.8.0 || ^17 || ^18 || ^19\n     dependencies:",
    "output": "fix(deps): update dependency react-hook-form to v7.52.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 75594cb..a3fc2b1 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -132,7 +132,7 @@ devDependencies:\n     version: 8.56.11\n   '@types/node':\n     specifier: ^20.14.2\n-    version: 20.14.13\n+    version: 20.14.14\n   '@types/react':\n     specifier: npm:types-react@rc\n     version: /types-react@19.0.0-rc.1\n@@ -2710,8 +2710,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.14.13:\n-    resolution: {integrity: sha512-+bHoGiZb8UiQ0+WEtmph2IWQCjIqg8MDZMAV+ppRRhUZnquF5mQkP/9vpSwJClEiSM/C7fZZExPzfU0vJTyp8w==}\n+  /@types/node@20.14.14:\n+    resolution: {integrity: sha512-d64f00982fS9YoOgJkAMolK7MN8Iq3TDdVjchbYHdEmjth/DHowx82GnoA+tVUAN+7vxfYUgAzi+JXbKNd2SDQ==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.14.14"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex ce5471d..75594cb 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -189,7 +189,7 @@ devDependencies:\n     version: 3.4.7\n   tsx:\n     specifier: ^4.11.0\n-    version: 4.16.4\n+    version: 4.16.5\n   typescript:\n     specifier: ^5.4.5\n     version: 5.5.4\n@@ -6144,8 +6144,8 @@ packages:\n     resolution: {integrity: sha512-xNvxJEOUiWPGhUuUdQgAJPKOOJfGnIyKySOc09XkKsgdUV/3E2zvwZYdejjmRgPCgcym1juLH3226yA7sEFJKQ==}\n     dev: false\n \n-  /tsx@4.16.4:\n-    resolution: {integrity: sha512-E0EDobc7FtOxdNtG0ZQWztLa9PK/TqC5QvdV0heyIMJySwcJ8vyvziOznzO1MIM2IDfacLGBgfiCUmba6mvI7Q==}\n+  /tsx@4.16.5:\n+    resolution: {integrity: sha512-ArsiAQHEW2iGaqZ8fTA1nX0a+lN5mNTyuGRRO6OW3H/Yno1y9/t1f9YOI1Cfoqz63VAthn++ZYcbDP7jPflc+A==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tsx to v4.16.5"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex bc13c94..ce5471d 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -189,7 +189,7 @@ devDependencies:\n     version: 3.4.7\n   tsx:\n     specifier: ^4.11.0\n-    version: 4.16.3\n+    version: 4.16.4\n   typescript:\n     specifier: ^5.4.5\n     version: 5.5.4\n@@ -6144,8 +6144,8 @@ packages:\n     resolution: {integrity: sha512-xNvxJEOUiWPGhUuUdQgAJPKOOJfGnIyKySOc09XkKsgdUV/3E2zvwZYdejjmRgPCgcym1juLH3226yA7sEFJKQ==}\n     dev: false\n \n-  /tsx@4.16.3:\n-    resolution: {integrity: sha512-MP8AEUxVnboD2rCC6kDLxnpDBNWN9k3BSVU/0/nNxgm70bPBnfn+yCKcnOsIVPQwdkbKYoFOlKjjWZWJ2XCXUg==}\n+  /tsx@4.16.4:\n+    resolution: {integrity: sha512-E0EDobc7FtOxdNtG0ZQWztLa9PK/TqC5QvdV0heyIMJySwcJ8vyvziOznzO1MIM2IDfacLGBgfiCUmba6mvI7Q==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tsx to v4.16.4"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex a385908..bc13c94 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -189,7 +189,7 @@ devDependencies:\n     version: 3.4.7\n   tsx:\n     specifier: ^4.11.0\n-    version: 4.16.2\n+    version: 4.16.3\n   typescript:\n     specifier: ^5.4.5\n     version: 5.5.4\n@@ -3964,7 +3964,7 @@ packages:\n       eslint-module-utils: 2.8.1(@typescript-eslint/parser@7.2.0)(eslint-import-resolver-node@0.3.9)(eslint-import-resolver-typescript@3.6.1)(eslint@8.57.0)\n       eslint-plugin-import: 2.29.1(@typescript-eslint/parser@7.18.0)(eslint@8.57.0)\n       fast-glob: 3.3.2\n-      get-tsconfig: 4.7.5\n+      get-tsconfig: 4.7.6\n       is-core-module: 2.14.0\n       is-glob: 4.0.3\n     transitivePeerDependencies:\n@@ -4398,12 +4398,6 @@ packages:\n       get-intrinsic: 1.2.4\n     dev: true\n \n-  /get-tsconfig@4.7.5:\n-    resolution: {integrity: sha512-ZCuZCnlqNzjb4QprAzXKdpp/gh6KTxSJuw3IBsPnV/7fV4NxC9ckB+vPTt8w7fJA0TaSD7c55BR47JD6MEDyDw==}\n-    dependencies:\n-      resolve-pkg-maps: 1.0.0\n-    dev: true\n-\n   /get-tsconfig@4.7.6:\n     resolution: {integrity: sha512-ZAqrLlu18NbDdRaHq+AKXzAmqIUPswPWKUchfytdAjiRFnCe5ojG2bstg6mRiZabkKfCoL/e98pbBELIV/YCeA==}\n     dependencies:\n@@ -6150,13 +6144,13 @@ packages:\n     resolution: {integrity: sha512-xNvxJEOUiWPGhUuUdQgAJPKOOJfGnIyKySOc09XkKsgdUV/3E2zvwZYdejjmRgPCgcym1juLH3226yA7sEFJKQ==}\n     dev: false\n \n-  /tsx@4.16.2:\n-    resolution: {integrity: sha512-C1uWweJDgdtX2x600HjaFaucXTilT7tgUZHbOE4+ypskZ1OP8CRCSDkCxG6Vya9EwaFIVagWwpaVAn5wzypaqQ==}\n+  /tsx@4.16.3:\n+    resolution: {integrity: sha512-MP8AEUxVnboD2rCC6kDLxnpDBNWN9k3BSVU/0/nNxgm70bPBnfn+yCKcnOsIVPQwdkbKYoFOlKjjWZWJ2XCXUg==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:\n       esbuild: 0.21.5\n-      get-tsconfig: 4.7.5\n+      get-tsconfig: 4.7.6\n     optionalDependencies:\n       fsevents: 2.3.3\n     dev: true",
    "output": "chore(deps): update dependency tsx to v4.16.3"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 2dbba75..a385908 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -153,7 +153,7 @@ devDependencies:\n     version: 7.4.2\n   drizzle-kit:\n     specifier: ^0.23.0\n-    version: 0.23.0\n+    version: 0.23.1\n   eslint:\n     specifier: ^8.57.0\n     version: 8.57.0\n@@ -489,6 +489,10 @@ packages:\n       '@babel/helper-validator-identifier': 7.24.7\n       to-fast-properties: 2.0.0\n \n+  /@drizzle-team/brocli@0.8.2:\n+    resolution: {integrity: sha512-zTrFENsqGvOkBOuHDC1pXCkDXNd2UhP4lI3gYGhQ1R1SPeAAfqzPsV1dcpMy4uNU6kB5VpU5NGhvwxVNETR02A==}\n+    dev: true\n+\n   /@emnapi/runtime@1.2.0:\n     resolution: {integrity: sha512-bV21/9LQmcQeCPEg3BDFtvwL6cwiTMksYNWQQ4KOxCZikEGalWtenoZ0wCiukJINlGCIi2KXx01g4FoH/LxpzQ==}\n     requiresBuild: true\n@@ -508,7 +512,7 @@ packages:\n     resolution: {integrity: sha512-FxEMIkJKnodyA1OaCUoEvbYRkoZlLZ4d/eXFu9Fh8CbBBgP5EmZxrfTRyN0qpXZ4vOvqnE5YdRdcrmUUXuU+dA==}\n     dependencies:\n       '@esbuild-kit/core-utils': 3.3.2\n-      get-tsconfig: 4.7.5\n+      get-tsconfig: 4.7.6\n     dev: true\n \n   /@esbuild/aix-ppc64@0.19.12:\n@@ -3531,13 +3535,14 @@ packages:\n     engines: {node: '>=12'}\n     dev: true\n \n-  /drizzle-kit@0.23.0:\n-    resolution: {integrity: sha512-w9jE97z193dd4jzAyj4Uv2SOh8Ydue70Ki6W0awy4bGM1aPXan6zD6Yv+nNTA6oGgNTDl2MJFxutjHG4fden5g==}\n+  /drizzle-kit@0.23.1:\n+    resolution: {integrity: sha512-posGQhj8/K4S4CPhk7BO9+IcpNdIh96t0DvcAr/NvMKhPhe5D0MELzmpq9R2MpmSP3fd+Z3upwidtetrw7xnjg==}\n     hasBin: true\n     dependencies:\n+      '@drizzle-team/brocli': 0.8.2\n       '@esbuild-kit/esm-loader': 2.6.5\n       esbuild: 0.19.12\n-      esbuild-register: 3.5.0(esbuild@0.19.12)\n+      esbuild-register: 3.6.0(esbuild@0.19.12)\n     transitivePeerDependencies:\n       - supports-color\n     dev: true\n@@ -3786,12 +3791,12 @@ packages:\n       is-symbol: 1.0.4\n     dev: true\n \n-  /esbuild-register@3.5.0(esbuild@0.19.12):\n-    resolution: {integrity: sha512-+4G/XmakeBAsvJuDugJvtyF1x+XJT4FMocynNpxrvEBViirpfUn2PgNpCHedfWhF4WokNsO/OvMKrmJOIJsI5A==}\n+  /esbuild-register@3.6.0(esbuild@0.19.12):\n+    resolution: {integrity: sha512-H2/S7Pm8a9CL1uhp9OvjwrBh5Pvx0H8qVOxNu8Wed9Y7qv56MPtq+GGM8RJpq6glYJn9Wspr8uw7l55uyinNeg==}\n     peerDependencies:\n       esbuild: '>=0.12 <1'\n     dependencies:\n-      debug: 4.3.5\n+      debug: 4.3.6\n       esbuild: 0.19.12\n     transitivePeerDependencies:\n       - supports-color\n@@ -4399,6 +4404,12 @@ packages:\n       resolve-pkg-maps: 1.0.0\n     dev: true\n \n+  /get-tsconfig@4.7.6:\n+    resolution: {integrity: sha512-ZAqrLlu18NbDdRaHq+AKXzAmqIUPswPWKUchfytdAjiRFnCe5ojG2bstg6mRiZabkKfCoL/e98pbBELIV/YCeA==}\n+    dependencies:\n+      resolve-pkg-maps: 1.0.0\n+    dev: true\n+\n   /glob-parent@5.1.2:\n     resolution: {integrity: sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==}\n     engines: {node: '>= 6'}",
    "output": "chore(deps): update dependency drizzle-kit to v0.23.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 921f73b..babb61a 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -132,7 +132,7 @@ devDependencies:\n     version: 8.56.11\n   '@types/node':\n     specifier: ^20.14.2\n-    version: 20.14.12\n+    version: 20.14.13\n   '@types/react':\n     specifier: npm:types-react@rc\n     version: /types-react@19.0.0-rc.1\n@@ -2706,8 +2706,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.14.12:\n-    resolution: {integrity: sha512-r7wNXakLeSsGT0H1AU863vS2wa5wBOK4bWMjZz2wj+8nBx+m5PeIn0k8AloSLpRuiwdRQZwarZqHE4FNArPuJQ==}\n+  /@types/node@20.14.13:\n+    resolution: {integrity: sha512-+bHoGiZb8UiQ0+WEtmph2IWQCjIqg8MDZMAV+ppRRhUZnquF5mQkP/9vpSwJClEiSM/C7fZZExPzfU0vJTyp8w==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.14.13"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/components/data-table/data-table.tsx b/src/components/data-table/data-table.tsx\nindex 3ae0284..06286c6 100644\n--- a/src/components/data-table/data-table.tsx\n+++ b/src/components/data-table/data-table.tsx\n@@ -42,7 +42,7 @@ export function DataTable<TData>({\n       {...props}\n     >\n       {children}\n-      <div className=\"rounded-md border\">\n+      <div className=\"overflow-hidden rounded-md border\">\n         <Table>\n           <TableHeader>\n             {table.getHeaderGroups().map((headerGroup) => (\ndiff --git a/src/lib/data-table.ts b/src/lib/data-table.ts\nindex adf5783..68a813e 100644\n--- a/src/lib/data-table.ts\n+++ b/src/lib/data-table.ts\n@@ -19,7 +19,7 @@ export function getCommonPinningStyles<TData>({\n         : undefined,\n     left: isPinned === \"left\" ? `${column.getStart(\"left\")}px` : undefined,\n     right: isPinned === \"right\" ? `${column.getAfter(\"right\")}px` : undefined,\n-    opacity: isPinned ? 0.95 : 1,\n+    opacity: isPinned ? 0.97 : 1,\n     position: isPinned ? \"sticky\" : \"relative\",\n     background: isPinned ? \"hsl(var(--background))\" : undefined,\n     width: column.getSize(),",
    "output": "fix: table border overflow"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/README.md b/README.md\nindex 19f5e98..5962213 100644\n--- a/README.md\n+++ b/README.md\n@@ -1,6 +1,6 @@\n # [Shadcn Table](https://table.sadmn.com)\n \n-This is a shadcn table component with server-side sorting, filtering, and pagination. It is bootstrapped with `create-t3-app`.\n+This is a shadcn table with server-side sorting, filtering, and pagination. It is bootstrapped with `create-t3-app`.\n \n [![Shadcn Table](./public/images/screenshot.png)](https://table.sadmn.com)\n \ndiff --git a/src/components/data-table/data-table-pagination.tsx b/src/components/data-table/data-table-pagination.tsx\nindex 68afc0c..2c5d508 100644\n--- a/src/components/data-table/data-table-pagination.tsx\n+++ b/src/components/data-table/data-table-pagination.tsx\n@@ -43,7 +43,7 @@ export function DataTablePagination<TData>({\n               <SelectValue placeholder={table.getState().pagination.pageSize} />\n             </SelectTrigger>\n             <SelectContent side=\"top\">\n-              {pageSizeOptions?.map((pageSize) => (\n+              {pageSizeOptions.map((pageSize) => (\n                 <SelectItem key={pageSize} value={`${pageSize}`}>\n                   {pageSize}\n                 </SelectItem>\ndiff --git a/src/config/site.ts b/src/config/site.ts\nindex 35b5187..8ae1aeb 100644\n--- a/src/config/site.ts\n+++ b/src/config/site.ts\n@@ -5,7 +5,7 @@ export type SiteConfig = typeof siteConfig\n export const siteConfig = {\n   name: \"Table\",\n   description:\n-    \"Shadcn table component with server side sorting, pagination, and filtering\",\n+    \"Shadcn table with server side sorting, pagination, and filtering\",\n   url:\n     env.NODE_ENV === \"development\"\n       ? \"http://localhost:3000\"",
    "output": "chore: update config"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 083cb10..feb8395 100644\n--- a/package.json\n+++ b/package.json\n@@ -78,7 +78,7 @@\n     \"eslint\": \"^8.57.0\",\n     \"eslint-config-next\": \"^14.2.3\",\n     \"eslint-config-prettier\": \"^9.1.0\",\n-    \"eslint-plugin-react-compiler\": \"0.0.0-experimental-47e15aa-20240725\",\n+    \"eslint-plugin-react-compiler\": \"0.0.0-experimental-9ed098e-20240725\",\n     \"eslint-plugin-tailwindcss\": \"^3.17.0\",\n     \"pg\": \"^8.11.5\",\n     \"postcss\": \"^8.4.38\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 6eca55a..921f73b 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -164,8 +164,8 @@ devDependencies:\n     specifier: ^9.1.0\n     version: 9.1.0(eslint@8.57.0)\n   eslint-plugin-react-compiler:\n-    specifier: 0.0.0-experimental-47e15aa-20240725\n-    version: 0.0.0-experimental-47e15aa-20240725(eslint@8.57.0)\n+    specifier: 0.0.0-experimental-9ed098e-20240725\n+    version: 0.0.0-experimental-9ed098e-20240725(eslint@8.57.0)\n   eslint-plugin-tailwindcss:\n     specifier: ^3.17.0\n     version: 3.17.4(tailwindcss@3.4.7)\n@@ -4076,8 +4076,8 @@ packages:\n       string.prototype.includes: 2.0.0\n     dev: true\n \n-  /eslint-plugin-react-compiler@0.0.0-experimental-47e15aa-20240725(eslint@8.57.0):\n-    resolution: {integrity: sha512-kc++BYUMmCvEM54mrdEZtc5nWskmUVDNza6/Jezee02CBLh+ftPHl4hDtophy4puUAMhZ+p2loJi1gM36hhDbQ==}\n+  /eslint-plugin-react-compiler@0.0.0-experimental-9ed098e-20240725(eslint@8.57.0):\n+    resolution: {integrity: sha512-Xv2iD8kU6R4Wdjdh1WhdP8UnSqSV+/XcadxwBCmMr836fQUoXGuw/uVGc01v9opZs9SwKzo+8My6ayVCgAinPA==}\n     engines: {node: ^14.17.0 || ^16.0.0 || >= 18.0.0}\n     peerDependencies:\n       eslint: '>=7'",
    "output": "chore(deps): update dependency eslint-plugin-react-compiler to v0.0.0-experimental-9ed098e-20240725"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 93054f0..083cb10 100644\n--- a/package.json\n+++ b/package.json\n@@ -78,7 +78,7 @@\n     \"eslint\": \"^8.57.0\",\n     \"eslint-config-next\": \"^14.2.3\",\n     \"eslint-config-prettier\": \"^9.1.0\",\n-    \"eslint-plugin-react-compiler\": \"0.0.0-experimental-0998c1e-20240625\",\n+    \"eslint-plugin-react-compiler\": \"0.0.0-experimental-47e15aa-20240725\",\n     \"eslint-plugin-tailwindcss\": \"^3.17.0\",\n     \"pg\": \"^8.11.5\",\n     \"postcss\": \"^8.4.38\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 8462f74..6c7b024 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -164,8 +164,8 @@ devDependencies:\n     specifier: ^9.1.0\n     version: 9.1.0(eslint@8.57.0)\n   eslint-plugin-react-compiler:\n-    specifier: 0.0.0-experimental-0998c1e-20240625\n-    version: 0.0.0-experimental-0998c1e-20240625(eslint@8.57.0)\n+    specifier: 0.0.0-experimental-47e15aa-20240725\n+    version: 0.0.0-experimental-47e15aa-20240725(eslint@8.57.0)\n   eslint-plugin-tailwindcss:\n     specifier: ^3.17.0\n     version: 3.17.4(tailwindcss@3.4.6)\n@@ -4076,8 +4076,8 @@ packages:\n       string.prototype.includes: 2.0.0\n     dev: true\n \n-  /eslint-plugin-react-compiler@0.0.0-experimental-0998c1e-20240625(eslint@8.57.0):\n-    resolution: {integrity: sha512-npq2RomExoQI3jETs4OrifaygyJYgOcX/q74Q9OC7GmffLh5zSJaQpzjs2fi61NMNkJyIvTBD0C6sKTGGcetOw==}\n+  /eslint-plugin-react-compiler@0.0.0-experimental-47e15aa-20240725(eslint@8.57.0):\n+    resolution: {integrity: sha512-kc++BYUMmCvEM54mrdEZtc5nWskmUVDNza6/Jezee02CBLh+ftPHl4hDtophy4puUAMhZ+p2loJi1gM36hhDbQ==}\n     engines: {node: ^14.17.0 || ^16.0.0 || >= 18.0.0}\n     peerDependencies:\n       eslint: '>=7'",
    "output": "chore(deps): update dependency eslint-plugin-react-compiler to v0.0.0-experimental-47e15aa-20240725"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex fb4da91..d2d949b 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -132,7 +132,7 @@ devDependencies:\n     version: 8.56.11\n   '@types/node':\n     specifier: ^20.14.2\n-    version: 20.14.11\n+    version: 20.14.12\n   '@types/react':\n     specifier: npm:types-react@rc\n     version: /types-react@19.0.0-rc.1\n@@ -2706,8 +2706,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.14.11:\n-    resolution: {integrity: sha512-kprQpL8MMeszbz6ojB5/tU8PLN4kesnN8Gjzw349rDlNgsSzg90lAVj3llK99Dh7JON+t9AuscPPFW6mPbTnSA==}\n+  /@types/node@20.14.12:\n+    resolution: {integrity: sha512-r7wNXakLeSsGT0H1AU863vS2wa5wBOK4bWMjZz2wj+8nBx+m5PeIn0k8AloSLpRuiwdRQZwarZqHE4FNArPuJQ==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.14.12"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 4d6be29..fb4da91 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -67,7 +67,7 @@ dependencies:\n     version: 3.6.0\n   drizzle-orm:\n     specifier: ^0.32.0\n-    version: 0.32.0(pg@8.12.0)(postgres@3.4.4)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react@19.0.0-rc.1)\n+    version: 0.32.1(pg@8.12.0)(postgres@3.4.4)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react@19.0.0-rc.1)\n   export-to-csv:\n     specifier: ^1.3.0\n     version: 1.3.0\n@@ -3530,8 +3530,8 @@ packages:\n       - supports-color\n     dev: true\n \n-  /drizzle-orm@0.32.0(pg@8.12.0)(postgres@3.4.4)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react@19.0.0-rc.1):\n-    resolution: {integrity: sha512-99IlfVGPNHzOFEXo9Phyu5At5TALLsY2t6WxFFy68rYd9Ej4cHX/7WjdPOn7JNRW69MNeNtP8XrDQg43SppuAA==}\n+  /drizzle-orm@0.32.1(pg@8.12.0)(postgres@3.4.4)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react@19.0.0-rc.1):\n+    resolution: {integrity: sha512-Wq1J+lL8PzwR5K3a1FfoWsbs8powjr3pGA4+5+2ueN1VTLDNFYEolUyUWFtqy8DVRvYbL2n7sXZkgVmK9dQkng==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=3'",
    "output": "fix(deps): update dependency drizzle-orm to v0.32.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex f535604..78205fa 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -129,7 +129,7 @@ devDependencies:\n     version: 0.5.1\n   '@types/eslint':\n     specifier: ^8.56.10\n-    version: 8.56.10\n+    version: 8.56.11\n   '@types/node':\n     specifier: ^20.14.2\n     version: 20.14.11\n@@ -2670,8 +2670,8 @@ packages:\n     resolution: {integrity: sha512-AqlrT8YA1o7Ff5wPfMOL0pvL+1X+sw60NN6CcOCqs658emD6RfiXhF7Gu9QcfKBH7ELY2nInLhKSCWVoNL70MQ==}\n     dev: true\n \n-  /@types/eslint@8.56.10:\n-    resolution: {integrity: sha512-Shavhk87gCtY2fhXDctcfS3e6FdxWkCx1iUZ9eEUbh7rTqlZT0/IzOkCOVt0fCjcFuZ9FPYfuezTBImfHCDBGQ==}\n+  /@types/eslint@8.56.11:\n+    resolution: {integrity: sha512-sVBpJMf7UPo/wGecYOpk2aQya2VUGeHhe38WG7/mN5FufNSubf5VT9Uh9Uyp8/eLJpu1/tuhJ/qTo4mhSB4V4Q==}\n     dependencies:\n       '@types/estree': 1.0.5\n       '@types/json-schema': 7.0.15",
    "output": "chore(deps): update dependency @types/eslint to v8.56.11"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex f9a6f85..93054f0 100644\n--- a/package.json\n+++ b/package.json\n@@ -37,7 +37,7 @@\n     \"@radix-ui/react-toggle\": \"^1.0.3\",\n     \"@radix-ui/react-toggle-group\": \"^1.0.4\",\n     \"@radix-ui/react-tooltip\": \"^1.0.7\",\n-    \"@t3-oss/env-nextjs\": \"^0.10.1\",\n+    \"@t3-oss/env-nextjs\": \"^0.11.0\",\n     \"@tanstack/react-table\": \"^8.17.3\",\n     \"babel-plugin-react-compiler\": \"0.0.0-experimental-696af53-20240625\",\n     \"class-variance-authority\": \"^0.7.0\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 718fecc..f535604 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -45,8 +45,8 @@ dependencies:\n     specifier: ^1.0.7\n     version: 1.1.2(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1)\n   '@t3-oss/env-nextjs':\n-    specifier: ^0.10.1\n-    version: 0.10.1(typescript@5.5.3)(zod@3.23.8)\n+    specifier: ^0.11.0\n+    version: 0.11.0(typescript@5.5.3)(zod@3.23.8)\n   '@tanstack/react-table':\n     specifier: ^8.17.3\n     version: 8.19.3(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)\n@@ -2622,8 +2622,8 @@ packages:\n       tslib: 2.6.3\n     dev: false\n \n-  /@t3-oss/env-core@0.10.1(typescript@5.5.3)(zod@3.23.8):\n-    resolution: {integrity: sha512-GcKZiCfWks5CTxhezn9k5zWX3sMDIYf6Kaxy2Gx9YEQftFcz8hDRN56hcbylyAO3t4jQnQ5ifLawINsNgCDpOg==}\n+  /@t3-oss/env-core@0.11.0(typescript@5.5.3)(zod@3.23.8):\n+    resolution: {integrity: sha512-PSalC5bG0a7XbyoLydiQdAnx3gICX6IQNctvh+TyLrdFxsxgocdj9Ui7sd061UlBzi+z4aIGjnem1kZx9QtUgQ==}\n     peerDependencies:\n       typescript: '>=5.0.0'\n       zod: ^3.0.0\n@@ -2635,8 +2635,8 @@ packages:\n       zod: 3.23.8\n     dev: false\n \n-  /@t3-oss/env-nextjs@0.10.1(typescript@5.5.3)(zod@3.23.8):\n-    resolution: {integrity: sha512-iy2qqJLnFh1RjEWno2ZeyTu0ufomkXruUsOZludzDIroUabVvHsrSjtkHqwHp1/pgPUzN3yBRHMILW162X7x2Q==}\n+  /@t3-oss/env-nextjs@0.11.0(typescript@5.5.3)(zod@3.23.8):\n+    resolution: {integrity: sha512-gcRrY2CzSMSrxDf5+fKCUfzbBK125IxOcJHcoMVdjcTmYxEgIZFZ5qPPtngOY3UmTeXSqRZOGuNiosqWTFTkMw==}\n     peerDependencies:\n       typescript: '>=5.0.0'\n       zod: ^3.0.0\n@@ -2644,7 +2644,7 @@ packages:\n       typescript:\n         optional: true\n     dependencies:\n-      '@t3-oss/env-core': 0.10.1(typescript@5.5.3)(zod@3.23.8)\n+      '@t3-oss/env-core': 0.11.0(typescript@5.5.3)(zod@3.23.8)\n       typescript: 5.5.3\n       zod: 3.23.8\n     dev: false",
    "output": "fix(deps): update dependency @t3-oss/env-nextjs to ^0.11.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 27dd5ea..f9a6f85 100644\n--- a/package.json\n+++ b/package.json\n@@ -96,5 +96,5 @@\n   \"ct3aMetadata\": {\n     \"initVersion\": \"7.23.1\"\n   },\n-  \"packageManager\": \"pnpm@8.15.8\"\n+  \"packageManager\": \"pnpm@8.15.9\"\n }",
    "output": "chore(deps): update pnpm to v8.15.9"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex e2a8e6a..718fecc 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -132,7 +132,7 @@ devDependencies:\n     version: 8.56.10\n   '@types/node':\n     specifier: ^20.14.2\n-    version: 20.14.10\n+    version: 20.14.11\n   '@types/react':\n     specifier: npm:types-react@rc\n     version: /types-react@19.0.0-rc.1\n@@ -2706,8 +2706,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.14.10:\n-    resolution: {integrity: sha512-MdiXf+nDuMvY0gJKxyfZ7/6UFsETO7mGKF54MVD/ekJS6HdFtpZFBgrh6Pseu64XTb2MLyFPlbW6hj8HYRQNOQ==}\n+  /@types/node@20.14.11:\n+    resolution: {integrity: sha512-kprQpL8MMeszbz6ojB5/tU8PLN4kesnN8Gjzw349rDlNgsSzg90lAVj3llK99Dh7JON+t9AuscPPFW6mPbTnSA==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.14.11"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 505b1bb..e2a8e6a 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -109,7 +109,7 @@ dependencies:\n     version: 2.4.0\n   tailwindcss-animate:\n     specifier: ^1.0.7\n-    version: 1.0.7(tailwindcss@3.4.5)\n+    version: 1.0.7(tailwindcss@3.4.6)\n   vaul:\n     specifier: ^0.9.1\n     version: 0.9.1(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1)\n@@ -168,7 +168,7 @@ devDependencies:\n     version: 0.0.0-experimental-0998c1e-20240625(eslint@8.57.0)\n   eslint-plugin-tailwindcss:\n     specifier: ^3.17.0\n-    version: 3.17.4(tailwindcss@3.4.5)\n+    version: 3.17.4(tailwindcss@3.4.6)\n   pg:\n     specifier: ^8.11.5\n     version: 8.12.0\n@@ -186,7 +186,7 @@ devDependencies:\n     version: 6.0.1\n   tailwindcss:\n     specifier: ^3.4.3\n-    version: 3.4.5\n+    version: 3.4.6\n   tsx:\n     specifier: ^4.11.0\n     version: 4.16.2\n@@ -4129,7 +4129,7 @@ packages:\n       string.prototype.matchall: 4.0.11\n     dev: true\n \n-  /eslint-plugin-tailwindcss@3.17.4(tailwindcss@3.4.5):\n+  /eslint-plugin-tailwindcss@3.17.4(tailwindcss@3.4.6):\n     resolution: {integrity: sha512-gJAEHmCq2XFfUP/+vwEfEJ9igrPeZFg+skeMtsxquSQdxba9XRk5bn0Bp9jxG1VV9/wwPKi1g3ZjItu6MIjhNg==}\n     engines: {node: '>=18.12.0'}\n     peerDependencies:\n@@ -4137,7 +4137,7 @@ packages:\n     dependencies:\n       fast-glob: 3.3.2\n       postcss: 8.4.39\n-      tailwindcss: 3.4.5\n+      tailwindcss: 3.4.6\n     dev: true\n \n   /eslint-scope@7.2.2:\n@@ -6016,16 +6016,16 @@ packages:\n     resolution: {integrity: sha512-49AwoOQNKdqKPd9CViyH5wJoSKsCDjUlzL8DxuGp3P1FsGY36NJDAa18jLZcaHAUUuTj+JB8IAo8zWgBNvBF7A==}\n     dev: false\n \n-  /tailwindcss-animate@1.0.7(tailwindcss@3.4.5):\n+  /tailwindcss-animate@1.0.7(tailwindcss@3.4.6):\n     resolution: {integrity: sha512-bl6mpH3T7I3UFxuvDEXLxy/VuFxBk5bbzplh7tXI68mwMokNYd1t9qPBHlnyTwfa4JGC4zP516I1hYYtQ/vspA==}\n     peerDependencies:\n       tailwindcss: '>=3.0.0 || insiders'\n     dependencies:\n-      tailwindcss: 3.4.5\n+      tailwindcss: 3.4.6\n     dev: false\n \n-  /tailwindcss@3.4.5:\n-    resolution: {integrity: sha512-DlTxttYcogpDfx3tf/8jfnma1nfAYi2cBUYV2YNoPPecwmO3YGiFlOX9D8tGAu+EDF38ryBzvrDKU/BLMsUwbw==}\n+  /tailwindcss@3.4.6:\n+    resolution: {integrity: sha512-1uRHzPB+Vzu57ocybfZ4jh5Q3SdlH7XW23J5sQoM9LhE9eIOlzxer/3XPSsycvih3rboRsvt0QCmzSrqyOYUIA==}\n     engines: {node: '>=14.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tailwindcss to v3.4.6"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 11a8f42..7f4b55f 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -109,7 +109,7 @@ dependencies:\n     version: 2.4.0\n   tailwindcss-animate:\n     specifier: ^1.0.7\n-    version: 1.0.7(tailwindcss@3.4.4)\n+    version: 1.0.7(tailwindcss@3.4.5)\n   vaul:\n     specifier: ^0.9.1\n     version: 0.9.1(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)(types-react-dom@19.0.0-rc.1)(types-react@19.0.0-rc.1)\n@@ -168,7 +168,7 @@ devDependencies:\n     version: 0.0.0-experimental-0998c1e-20240625(eslint@8.57.0)\n   eslint-plugin-tailwindcss:\n     specifier: ^3.17.0\n-    version: 3.17.4(tailwindcss@3.4.4)\n+    version: 3.17.4(tailwindcss@3.4.5)\n   pg:\n     specifier: ^8.11.5\n     version: 8.12.0\n@@ -186,7 +186,7 @@ devDependencies:\n     version: 6.0.1\n   tailwindcss:\n     specifier: ^3.4.3\n-    version: 3.4.4\n+    version: 3.4.5\n   tsx:\n     specifier: ^4.11.0\n     version: 4.16.2\n@@ -4129,7 +4129,7 @@ packages:\n       string.prototype.matchall: 4.0.11\n     dev: true\n \n-  /eslint-plugin-tailwindcss@3.17.4(tailwindcss@3.4.4):\n+  /eslint-plugin-tailwindcss@3.17.4(tailwindcss@3.4.5):\n     resolution: {integrity: sha512-gJAEHmCq2XFfUP/+vwEfEJ9igrPeZFg+skeMtsxquSQdxba9XRk5bn0Bp9jxG1VV9/wwPKi1g3ZjItu6MIjhNg==}\n     engines: {node: '>=18.12.0'}\n     peerDependencies:\n@@ -4137,7 +4137,7 @@ packages:\n     dependencies:\n       fast-glob: 3.3.2\n       postcss: 8.4.39\n-      tailwindcss: 3.4.4\n+      tailwindcss: 3.4.5\n     dev: true\n \n   /eslint-scope@7.2.2:\n@@ -6016,16 +6016,16 @@ packages:\n     resolution: {integrity: sha512-49AwoOQNKdqKPd9CViyH5wJoSKsCDjUlzL8DxuGp3P1FsGY36NJDAa18jLZcaHAUUuTj+JB8IAo8zWgBNvBF7A==}\n     dev: false\n \n-  /tailwindcss-animate@1.0.7(tailwindcss@3.4.4):\n+  /tailwindcss-animate@1.0.7(tailwindcss@3.4.5):\n     resolution: {integrity: sha512-bl6mpH3T7I3UFxuvDEXLxy/VuFxBk5bbzplh7tXI68mwMokNYd1t9qPBHlnyTwfa4JGC4zP516I1hYYtQ/vspA==}\n     peerDependencies:\n       tailwindcss: '>=3.0.0 || insiders'\n     dependencies:\n-      tailwindcss: 3.4.4\n+      tailwindcss: 3.4.5\n     dev: false\n \n-  /tailwindcss@3.4.4:\n-    resolution: {integrity: sha512-ZoyXOdJjISB7/BcLTR6SEsLgKtDStYyYZVLsUtWChO4Ps20CBad7lfJKVDiejocV4ME1hLmyY0WJE3hSDcmQ2A==}\n+  /tailwindcss@3.4.5:\n+    resolution: {integrity: sha512-DlTxttYcogpDfx3tf/8jfnma1nfAYi2cBUYV2YNoPPecwmO3YGiFlOX9D8tGAu+EDF38ryBzvrDKU/BLMsUwbw==}\n     engines: {node: '>=14.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tailwindcss to v3.4.5"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex a9dd5c8..e321900 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -49,7 +49,7 @@ dependencies:\n     version: 0.10.1(typescript@5.5.3)(zod@3.23.8)\n   '@tanstack/react-table':\n     specifier: ^8.17.3\n-    version: 8.19.2(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)\n+    version: 8.19.3(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614)\n   babel-plugin-react-compiler:\n     specifier: 0.0.0-experimental-696af53-20240625\n     version: 0.0.0-experimental-696af53-20240625\n@@ -2559,20 +2559,20 @@ packages:\n       zod: 3.23.8\n     dev: false\n \n-  /@tanstack/react-table@8.19.2(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614):\n-    resolution: {integrity: sha512-itoSIAkA/Vsg+bjY23FSemcTyPhc5/1YjYyaMsr9QSH/cdbZnQxHVWrpWn0Sp2BWN71qkzR7e5ye8WuMmwyOjg==}\n+  /@tanstack/react-table@8.19.3(react-dom@19.0.0-rc-fb9a90fa48-20240614)(react@19.0.0-rc-fb9a90fa48-20240614):\n+    resolution: {integrity: sha512-MtgPZc4y+cCRtU16y1vh1myuyZ2OdkWgMEBzyjYsoMWMicKZGZvcDnub3Zwb6XF2pj9iRMvm1SO1n57lS0vXLw==}\n     engines: {node: '>=12'}\n     peerDependencies:\n       react: '>=16.8'\n       react-dom: '>=16.8'\n     dependencies:\n-      '@tanstack/table-core': 8.19.2\n+      '@tanstack/table-core': 8.19.3\n       react: 19.0.0-rc-fb9a90fa48-20240614\n       react-dom: 19.0.0-rc-fb9a90fa48-20240614(react@19.0.0-rc-fb9a90fa48-20240614)\n     dev: false\n \n-  /@tanstack/table-core@8.19.2:\n-    resolution: {integrity: sha512-KpRjhgehIhbfH78ARm/GJDXGnpdw4bCg3qas6yjWSi7czJhI/J6pWln7NHtmBkGE9ZbohiiNtLqwGzKmBfixig==}\n+  /@tanstack/table-core@8.19.3:\n+    resolution: {integrity: sha512-IqREj9ADoml9zCAouIG/5kCGoyIxPFdqdyoxis9FisXFi5vT+iYfEfLosq4xkU/iDbMcEuAj+X8dWRLvKYDNoQ==}\n     engines: {node: '>=12'}\n     dev: false\n ",
    "output": "fix(deps): update dependency @tanstack/react-table to v8.19.3"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 99e1ceb..a9dd5c8 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -123,7 +123,7 @@ devDependencies:\n     version: 8.4.1\n   '@ianvs/prettier-plugin-sort-imports':\n     specifier: ^4.2.1\n-    version: 4.3.1(prettier@3.3.2)\n+    version: 4.3.1(prettier@3.3.3)\n   '@total-typescript/ts-reset':\n     specifier: ^0.5.1\n     version: 0.5.1\n@@ -174,10 +174,10 @@ devDependencies:\n     version: 8.4.39\n   prettier:\n     specifier: ^3.3.0\n-    version: 3.3.2\n+    version: 3.3.3\n   prettier-plugin-tailwindcss:\n     specifier: ^0.6.1\n-    version: 0.6.5(@ianvs/prettier-plugin-sort-imports@4.3.1)(prettier@3.3.2)\n+    version: 0.6.5(@ianvs/prettier-plugin-sort-imports@4.3.1)(prettier@3.3.3)\n   rimraf:\n     specifier: ^6.0.0\n     version: 6.0.1\n@@ -1133,7 +1133,7 @@ packages:\n     deprecated: Use @eslint/object-schema instead\n     dev: true\n \n-  /@ianvs/prettier-plugin-sort-imports@4.3.1(prettier@3.3.2):\n+  /@ianvs/prettier-plugin-sort-imports@4.3.1(prettier@3.3.3):\n     resolution: {integrity: sha512-ZHwbyjkANZOjaBm3ZosADD2OUYGFzQGxfy67HmGZU94mHqe7g1LCMA7YYKB1Cq+UTPCBqlAYapY0KXAjKEw8Sg==}\n     peerDependencies:\n       '@vue/compiler-sfc': 2.7.x || 3.x\n@@ -1147,7 +1147,7 @@ packages:\n       '@babel/parser': 7.24.8\n       '@babel/traverse': 7.24.8\n       '@babel/types': 7.24.8\n-      prettier: 3.3.2\n+      prettier: 3.3.3\n       semver: 7.6.2\n     transitivePeerDependencies:\n       - supports-color\n@@ -5300,7 +5300,7 @@ packages:\n     engines: {node: '>= 0.8.0'}\n     dev: true\n \n-  /prettier-plugin-tailwindcss@0.6.5(@ianvs/prettier-plugin-sort-imports@4.3.1)(prettier@3.3.2):\n+  /prettier-plugin-tailwindcss@0.6.5(@ianvs/prettier-plugin-sort-imports@4.3.1)(prettier@3.3.3):\n     resolution: {integrity: sha512-axfeOArc/RiGHjOIy9HytehlC0ZLeMaqY09mm8YCkMzznKiDkwFzOpBvtuhuv3xG5qB73+Mj7OCe2j/L1ryfuQ==}\n     engines: {node: '>=14.21.3'}\n     peerDependencies:\n@@ -5352,12 +5352,12 @@ packages:\n       prettier-plugin-svelte:\n         optional: true\n     dependencies:\n-      '@ianvs/prettier-plugin-sort-imports': 4.3.1(prettier@3.3.2)\n-      prettier: 3.3.2\n+      '@ianvs/prettier-plugin-sort-imports': 4.3.1(prettier@3.3.3)\n+      prettier: 3.3.3\n     dev: true\n \n-  /prettier@3.3.2:\n-    resolution: {integrity: sha512-rAVeHYMcv8ATV5d508CFdn+8/pHPpXeIid1DdrPwXnaAdH7cqjVbpJaT5eq4yRAFU/lsbwYwSF/n5iNrdJHPQA==}\n+  /prettier@3.3.3:\n+    resolution: {integrity: sha512-i2tDNA0O5IrMO757lfrdQZCc2jPNDVntV0m/+4whiDfWaTKfMNgR7Qz0NAeGz/nRqF4m5/6CLzbP4/liHt12Ew==}\n     engines: {node: '>=14'}\n     hasBin: true\n     dev: true",
    "output": "chore(deps): update dependency prettier to v3.3.3"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 20927c1..99e1ceb 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -123,7 +123,7 @@ devDependencies:\n     version: 8.4.1\n   '@ianvs/prettier-plugin-sort-imports':\n     specifier: ^4.2.1\n-    version: 4.3.0(prettier@3.3.2)\n+    version: 4.3.1(prettier@3.3.2)\n   '@total-typescript/ts-reset':\n     specifier: ^0.5.1\n     version: 0.5.1\n@@ -177,7 +177,7 @@ devDependencies:\n     version: 3.3.2\n   prettier-plugin-tailwindcss:\n     specifier: ^0.6.1\n-    version: 0.6.5(@ianvs/prettier-plugin-sort-imports@4.3.0)(prettier@3.3.2)\n+    version: 0.6.5(@ianvs/prettier-plugin-sort-imports@4.3.1)(prettier@3.3.2)\n   rimraf:\n     specifier: ^6.0.0\n     version: 6.0.1\n@@ -1133,8 +1133,8 @@ packages:\n     deprecated: Use @eslint/object-schema instead\n     dev: true\n \n-  /@ianvs/prettier-plugin-sort-imports@4.3.0(prettier@3.3.2):\n-    resolution: {integrity: sha512-OOMtUcO4J3LoL63dOKAe7bn+lSRRPeit2DqNHpx+wvBp3Grejo2PMaK4Mp1mwy8pnat64ccSgk/lBZbsAdLErw==}\n+  /@ianvs/prettier-plugin-sort-imports@4.3.1(prettier@3.3.2):\n+    resolution: {integrity: sha512-ZHwbyjkANZOjaBm3ZosADD2OUYGFzQGxfy67HmGZU94mHqe7g1LCMA7YYKB1Cq+UTPCBqlAYapY0KXAjKEw8Sg==}\n     peerDependencies:\n       '@vue/compiler-sfc': 2.7.x || 3.x\n       prettier: 2 || 3\n@@ -5300,7 +5300,7 @@ packages:\n     engines: {node: '>= 0.8.0'}\n     dev: true\n \n-  /prettier-plugin-tailwindcss@0.6.5(@ianvs/prettier-plugin-sort-imports@4.3.0)(prettier@3.3.2):\n+  /prettier-plugin-tailwindcss@0.6.5(@ianvs/prettier-plugin-sort-imports@4.3.1)(prettier@3.3.2):\n     resolution: {integrity: sha512-axfeOArc/RiGHjOIy9HytehlC0ZLeMaqY09mm8YCkMzznKiDkwFzOpBvtuhuv3xG5qB73+Mj7OCe2j/L1ryfuQ==}\n     engines: {node: '>=14.21.3'}\n     peerDependencies:\n@@ -5352,7 +5352,7 @@ packages:\n       prettier-plugin-svelte:\n         optional: true\n     dependencies:\n-      '@ianvs/prettier-plugin-sort-imports': 4.3.0(prettier@3.3.2)\n+      '@ianvs/prettier-plugin-sort-imports': 4.3.1(prettier@3.3.2)\n       prettier: 3.3.2\n     dev: true\n ",
    "output": "chore(deps): update dependency @ianvs/prettier-plugin-sort-imports to v4.3.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/README.md b/README.md\nindex a050b78..19f5e98 100644\n--- a/README.md\n+++ b/README.md\n@@ -7,7 +7,7 @@ This is a shadcn table component with server-side sorting, filtering, and pagina\n > **Warning**\n > This project is still in development and is not ready for production use.\n >\n-> It uses new technologies (ppr, and drizzle ORM) which are subject to change and may break your application.\n+> It uses new technologies (ppr, react compiler) which are subject to change and may break your application.\n \n ## Tech Stack\n \ndiff --git a/public/images/screenshot.png b/public/images/screenshot.png\nindex c1e7f74..025b448 100644\nBinary files a/public/images/screenshot.png and b/public/images/screenshot.png differ\ndiff --git a/src/app/_components/tasks-table-provider.tsx b/src/app/_components/tasks-table-provider.tsx\nindex 8a7aa6a..b552a14 100644\n--- a/src/app/_components/tasks-table-provider.tsx\n+++ b/src/app/_components/tasks-table-provider.tsx\n@@ -40,7 +40,7 @@ export function TasksTableProvider({ children }: React.PropsWithChildren) {\n         setFeatureFlags,\n       }}\n     >\n-      <div className=\"w-full overflow-x-auto\">\n+      {/* <div className=\"w-full overflow-x-auto\">\n         <ToggleGroup\n           type=\"multiple\"\n           variant=\"outline\"\n@@ -78,7 +78,7 @@ export function TasksTableProvider({ children }: React.PropsWithChildren) {\n             </Tooltip>\n           ))}\n         </ToggleGroup>\n-      </div>\n+      </div> */}\n       {children}\n     </TasksTableContext.Provider>\n   )\ndiff --git a/src/app/opengraph-image.png b/src/app/opengraph-image.png\nnew file mode 100644\nindex 0000000..025b448\nBinary files /dev/null and b/src/app/opengraph-image.png differ",
    "output": "feat: add og"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex ab23a69..0ed36ef 100644\n--- a/package.json\n+++ b/package.json\n@@ -43,7 +43,7 @@\n     \"clsx\": \"^2.1.1\",\n     \"cmdk\": \"^1.0.0\",\n     \"date-fns\": \"^3.6.0\",\n-    \"drizzle-orm\": \"^0.31.0\",\n+    \"drizzle-orm\": \"^0.32.0\",\n     \"export-to-csv\": \"^1.3.0\",\n     \"geist\": \"^1.3.0\",\n     \"nanoid\": \"^5.0.7\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex f11eafa..9ea3236 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -63,8 +63,8 @@ dependencies:\n     specifier: ^3.6.0\n     version: 3.6.0\n   drizzle-orm:\n-    specifier: ^0.31.0\n-    version: 0.31.4(@types/react@18.3.3)(pg@8.12.0)(postgres@3.4.4)(react@18.3.1)\n+    specifier: ^0.32.0\n+    version: 0.32.0(@types/react@18.3.3)(pg@8.12.0)(postgres@3.4.4)(react@18.3.1)\n   export-to-csv:\n     specifier: ^1.3.0\n     version: 1.3.0\n@@ -3162,8 +3162,8 @@ packages:\n       - supports-color\n     dev: true\n \n-  /drizzle-orm@0.31.4(@types/react@18.3.3)(pg@8.12.0)(postgres@3.4.4)(react@18.3.1):\n-    resolution: {integrity: sha512-VGD9SH9aStF2z4QOTnVlVX/WghV/EnuEzTmsH3fSVp2E4fFgc8jl3viQrS/XUJx1ekW4rVVLJMH42SfGQdjX3Q==}\n+  /drizzle-orm@0.32.0(@types/react@18.3.3)(pg@8.12.0)(postgres@3.4.4)(react@18.3.1):\n+    resolution: {integrity: sha512-99IlfVGPNHzOFEXo9Phyu5At5TALLsY2t6WxFFy68rYd9Ej4cHX/7WjdPOn7JNRW69MNeNtP8XrDQg43SppuAA==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=3'",
    "output": "fix(deps): update dependency drizzle-orm to ^0.32.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex d9b9956..f11eafa 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -174,7 +174,7 @@ devDependencies:\n     version: 0.6.5(@ianvs/prettier-plugin-sort-imports@4.3.0)(prettier@3.3.2)\n   rimraf:\n     specifier: ^6.0.0\n-    version: 6.0.0\n+    version: 6.0.1\n   tailwindcss:\n     specifier: ^3.4.3\n     version: 3.4.4\n@@ -4026,13 +4026,12 @@ packages:\n       path-scurry: 1.11.1\n     dev: true\n \n-  /glob@10.4.4:\n-    resolution: {integrity: sha512-XsOKvHsu38Xe19ZQupE6N/HENeHQBA05o3hV8labZZT2zYDg1+emxWHnc/Bm9AcCMPXfD6jt+QC7zC5JSFyumw==}\n-    engines: {node: 14 >=14.21 || 16 >=16.20 || 18 || 20 || >=22}\n+  /glob@10.4.5:\n+    resolution: {integrity: sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==}\n     hasBin: true\n     dependencies:\n       foreground-child: 3.2.1\n-      jackspeak: 3.4.2\n+      jackspeak: 3.4.3\n       minimatch: 9.0.5\n       minipass: 7.1.2\n       package-json-from-dist: 1.0.0\n@@ -4407,9 +4406,8 @@ packages:\n       '@pkgjs/parseargs': 0.11.0\n     dev: true\n \n-  /jackspeak@3.4.2:\n-    resolution: {integrity: sha512-qH3nOSj8q/8+Eg8LUPOq3C+6HWkpUioIjDsq1+D4zY91oZvpPttw8GwtF1nReRYKXl+1AORyFqtm2f5Q1SB6/Q==}\n-    engines: {node: 14 >=14.21 || 16 >=16.20 || >=18}\n+  /jackspeak@3.4.3:\n+    resolution: {integrity: sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==}\n     dependencies:\n       '@isaacs/cliui': 8.0.2\n     optionalDependencies:\n@@ -4530,9 +4528,8 @@ packages:\n     dependencies:\n       js-tokens: 4.0.0\n \n-  /lru-cache@10.4.1:\n-    resolution: {integrity: sha512-8h/JsUc/2+Dm9RPJnBAmObGnUqTMmsIKThxixMLOkrebSihRhTV0wLD/8BSk6OU6Pbj8hiDTbsI3fLjBJSlhDg==}\n-    engines: {node: 14 >= 14.21 || 16 >= 16.20 || 18 >=18.20 || 20 || >=22}\n+  /lru-cache@10.4.3:\n+    resolution: {integrity: sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==}\n \n   /lru-cache@11.0.0:\n     resolution: {integrity: sha512-Qv32eSV1RSCfhY3fpPE2GNZ8jgM9X7rdAfemLWqTUxwiyIC4jJ6Sy0fZ8H+oLWevO6i4/bizg7c8d8i6bxrzbA==}\n@@ -4827,7 +4824,7 @@ packages:\n     resolution: {integrity: sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==}\n     engines: {node: '>=16 || 14 >=14.18'}\n     dependencies:\n-      lru-cache: 10.4.1\n+      lru-cache: 10.4.3\n       minipass: 7.1.2\n \n   /path-scurry@2.0.0:\n@@ -5282,12 +5279,13 @@ packages:\n       glob: 7.2.3\n     dev: true\n \n-  /rimraf@6.0.0:\n-    resolution: {integrity: sha512-u+yqhM92LW+89cxUQK0SRyvXYQmyuKHx0jkx4W7KfwLGLqJnQM5031Uv1trE4gB9XEXBM/s6MxKlfW95IidqaA==}\n+  /rimraf@6.0.1:\n+    resolution: {integrity: sha512-9dkvaxAsk/xNXSJzMgFqqMCuFgt2+KsOFek3TMLfo8NCPfWpBmqwyNn5Y+NX56QUYfCtsyhF3ayiboEoUmJk/A==}\n     engines: {node: 20 || >=22}\n     hasBin: true\n     dependencies:\n       glob: 11.0.0\n+      package-json-from-dist: 1.0.0\n     dev: true\n \n   /run-parallel@1.2.0:\n@@ -5542,7 +5540,7 @@ packages:\n     dependencies:\n       '@jridgewell/gen-mapping': 0.3.5\n       commander: 4.1.1\n-      glob: 10.4.4\n+      glob: 10.4.5\n       lines-and-columns: 1.2.4\n       mz: 2.7.0\n       pirates: 4.0.6",
    "output": "chore(deps): update dependency rimraf to v6.0.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 6aa4a8a..fbcfc80 100644\n--- a/package.json\n+++ b/package.json\n@@ -72,7 +72,7 @@\n     \"@typescript-eslint/parser\": \"^7.11.0\",\n     \"autoprefixer\": \"^10.4.19\",\n     \"dotenv-cli\": \"^7.4.2\",\n-    \"drizzle-kit\": \"^0.22.1\",\n+    \"drizzle-kit\": \"^0.23.0\",\n     \"eslint\": \"^8.57.0\",\n     \"eslint-config-next\": \"^14.2.3\",\n     \"eslint-config-prettier\": \"^9.1.0\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex f50f9cd..b29938b 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -146,8 +146,8 @@ devDependencies:\n     specifier: ^7.4.2\n     version: 7.4.2\n   drizzle-kit:\n-    specifier: ^0.22.1\n-    version: 0.22.8\n+    specifier: ^0.23.0\n+    version: 0.23.0\n   eslint:\n     specifier: ^8.57.0\n     version: 8.57.0\n@@ -3131,8 +3131,8 @@ packages:\n     engines: {node: '>=12'}\n     dev: true\n \n-  /drizzle-kit@0.22.8:\n-    resolution: {integrity: sha512-VjI4wsJjk3hSqHSa3TwBf+uvH6M6pRHyxyoVbt935GUzP9tUR/BRZ+MhEJNgryqbzN2Za1KP0eJMTgKEPsalYQ==}\n+  /drizzle-kit@0.23.0:\n+    resolution: {integrity: sha512-w9jE97z193dd4jzAyj4Uv2SOh8Ydue70Ki6W0awy4bGM1aPXan6zD6Yv+nNTA6oGgNTDl2MJFxutjHG4fden5g==}\n     hasBin: true\n     dependencies:\n       '@esbuild-kit/esm-loader': 2.6.5",
    "output": "chore(deps): update dependency drizzle-kit to ^0.23.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 1468227..3d4e7ce 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -70,7 +70,7 @@ dependencies:\n     version: 1.3.0\n   geist:\n     specifier: ^1.3.0\n-    version: 1.3.0(next@14.2.4)\n+    version: 1.3.1(next@14.2.4)\n   nanoid:\n     specifier: ^5.0.7\n     version: 5.0.7\n@@ -3933,10 +3933,10 @@ packages:\n     resolution: {integrity: sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==}\n     dev: true\n \n-  /geist@1.3.0(next@14.2.4):\n-    resolution: {integrity: sha512-IoGBfcqVEYB4bEwsfHd35jF4+X9LHRPYZymHL4YOltHSs9LJa24DYs1Z7rEMQ/lsEvaAIc61Y9aUxgcJaQ8lrg==}\n+  /geist@1.3.1(next@14.2.4):\n+    resolution: {integrity: sha512-Q4gC1pBVPN+D579pBaz0TRRnGA4p9UK6elDY/xizXdFk/g4EKR5g0I+4p/Kj6gM0SajDBZ/0FvDV9ey9ud7BWw==}\n     peerDependencies:\n-      next: '>=13.2.0 <15.0.0-0'\n+      next: '>=13.2.0'\n     dependencies:\n       next: 14.2.4(@babel/core@7.24.7)(react-dom@18.3.1)(react@18.3.1)\n     dev: false",
    "output": "fix(deps): update dependency geist to v1.3.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 9e976f6..1468227 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -64,7 +64,7 @@ dependencies:\n     version: 3.6.0\n   drizzle-orm:\n     specifier: ^0.31.0\n-    version: 0.31.2(@types/react@18.3.3)(pg@8.12.0)(postgres@3.4.4)(react@18.3.1)\n+    version: 0.31.4(@types/react@18.3.3)(pg@8.12.0)(postgres@3.4.4)(react@18.3.1)\n   export-to-csv:\n     specifier: ^1.3.0\n     version: 1.3.0\n@@ -3142,8 +3142,8 @@ packages:\n       - supports-color\n     dev: true\n \n-  /drizzle-orm@0.31.2(@types/react@18.3.3)(pg@8.12.0)(postgres@3.4.4)(react@18.3.1):\n-    resolution: {integrity: sha512-QnenevbnnAzmbNzQwbhklvIYrDE8YER8K7kSrAWQSV1YvFCdSQPzj+jzqRdTSsV2cDqSpQ0NXGyL1G9I43LDLg==}\n+  /drizzle-orm@0.31.4(@types/react@18.3.3)(pg@8.12.0)(postgres@3.4.4)(react@18.3.1):\n+    resolution: {integrity: sha512-VGD9SH9aStF2z4QOTnVlVX/WghV/EnuEzTmsH3fSVp2E4fFgc8jl3viQrS/XUJx1ekW4rVVLJMH42SfGQdjX3Q==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=3'\n@@ -3153,6 +3153,7 @@ packages:\n       '@op-engineering/op-sqlite': '>=2'\n       '@opentelemetry/api': ^1.4.1\n       '@planetscale/database': '>=1'\n+      '@prisma/client': '*'\n       '@tidbcloud/serverless': '*'\n       '@types/better-sqlite3': '*'\n       '@types/pg': '*'\n@@ -3168,6 +3169,7 @@ packages:\n       mysql2: '>=2'\n       pg: '>=8'\n       postgres: '>=3'\n+      prisma: '*'\n       react: '>=18'\n       sql.js: '>=1'\n       sqlite3: '>=5'\n@@ -3188,6 +3190,8 @@ packages:\n         optional: true\n       '@planetscale/database':\n         optional: true\n+      '@prisma/client':\n+        optional: true\n       '@tidbcloud/serverless':\n         optional: true\n       '@types/better-sqlite3':\n@@ -3218,6 +3222,8 @@ packages:\n         optional: true\n       postgres:\n         optional: true\n+      prisma:\n+        optional: true\n       react:\n         optional: true\n       sql.js:",
    "output": "fix(deps): update dependency drizzle-orm to v0.31.4"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex b934b87..9e976f6 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -103,7 +103,7 @@ dependencies:\n     version: 1.5.0(react-dom@18.3.1)(react@18.3.1)\n   tailwind-merge:\n     specifier: ^2.3.0\n-    version: 2.3.0\n+    version: 2.4.0\n   tailwindcss-animate:\n     specifier: ^1.0.7\n     version: 1.0.7(tailwindcss@3.4.4)\n@@ -5481,10 +5481,8 @@ packages:\n     resolution: {integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==}\n     engines: {node: '>= 0.4'}\n \n-  /tailwind-merge@2.3.0:\n-    resolution: {integrity: sha512-vkYrLpIP+lgR0tQCG6AP7zZXCTLc1Lnv/CCRT3BqJ9CZ3ui2++GPaGb1x/ILsINIMSYqqvrpqjUFsMNLlW99EA==}\n-    dependencies:\n-      '@babel/runtime': 7.24.7\n+  /tailwind-merge@2.4.0:\n+    resolution: {integrity: sha512-49AwoOQNKdqKPd9CViyH5wJoSKsCDjUlzL8DxuGp3P1FsGY36NJDAa18jLZcaHAUUuTj+JB8IAo8zWgBNvBF7A==}\n     dev: false\n \n   /tailwindcss-animate@1.0.7(tailwindcss@3.4.4):",
    "output": "fix(deps): update dependency tailwind-merge to v2.4.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 9ceccc9..b934b87 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -174,7 +174,7 @@ devDependencies:\n     version: 0.6.5(@ianvs/prettier-plugin-sort-imports@4.3.0)(prettier@3.3.2)\n   rimraf:\n     specifier: ^5.0.7\n-    version: 5.0.7\n+    version: 5.0.8\n   tailwindcss:\n     specifier: ^3.4.3\n     version: 3.4.4\n@@ -3887,6 +3887,14 @@ packages:\n       cross-spawn: 7.0.3\n       signal-exit: 4.1.0\n \n+  /foreground-child@3.2.1:\n+    resolution: {integrity: sha512-PXUUyLqrR2XCWICfv6ukppP96sdFwWbNEnfEMt7jNsISjMsvaLNinAHNDYyvkyU+SZG2BTSbT5NjG+vZslfGTA==}\n+    engines: {node: '>=14'}\n+    dependencies:\n+      cross-spawn: 7.0.3\n+      signal-exit: 4.1.0\n+    dev: true\n+\n   /fraction.js@4.3.7:\n     resolution: {integrity: sha512-ZsDfxO51wGAXREY55a7la9LScWpwv9RxIrYABrlvOFBlH/ShPnrtsXeuUIfXKKOVicNxQ+o8JTbJvjS4M89yew==}\n     dev: true\n@@ -3997,6 +4005,19 @@ packages:\n       minipass: 7.1.2\n       path-scurry: 1.11.1\n \n+  /glob@10.4.3:\n+    resolution: {integrity: sha512-Q38SGlYRpVtDBPSWEylRyctn7uDeTp4NQERTLiCT1FqA9JXPYWqAVmQU6qh4r/zMM5ehxTcbaO8EjhWnvEhmyg==}\n+    engines: {node: '>=18'}\n+    hasBin: true\n+    dependencies:\n+      foreground-child: 3.2.1\n+      jackspeak: 3.4.1\n+      minimatch: 9.0.5\n+      minipass: 7.1.2\n+      package-json-from-dist: 1.0.0\n+      path-scurry: 1.11.1\n+    dev: true\n+\n   /glob@7.2.3:\n     resolution: {integrity: sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==}\n     deprecated: Glob versions prior to v9 are no longer supported\n@@ -4346,6 +4367,15 @@ packages:\n     optionalDependencies:\n       '@pkgjs/parseargs': 0.11.0\n \n+  /jackspeak@3.4.1:\n+    resolution: {integrity: sha512-U23pQPDnmYybVkYjObcuYMk43VRlMLLqLI+RdZy8s8WV8WsxO9SnqSroKaluuvcNOdCAlauKszDwd+umbot5Mg==}\n+    engines: {node: '>=18'}\n+    dependencies:\n+      '@isaacs/cliui': 8.0.2\n+    optionalDependencies:\n+      '@pkgjs/parseargs': 0.11.0\n+    dev: true\n+\n   /jiti@1.21.3:\n     resolution: {integrity: sha512-uy2bNX5zQ+tESe+TiC7ilGRz8AtRGmnJH55NC5S0nSUjvvvM2hJHmefHErugGXN4pNv4Qx7vLsnNw9qJ9mtIsw==}\n     hasBin: true\n@@ -4704,6 +4734,10 @@ packages:\n       p-limit: 3.1.0\n     dev: true\n \n+  /package-json-from-dist@1.0.0:\n+    resolution: {integrity: sha512-dATvCeZN/8wQsGywez1mzHtTlP22H8OEfPrVMLNr4/eGa+ijtLn/6M5f0dY8UKNrC2O9UCU6SSoG3qRKnt7STw==}\n+    dev: true\n+\n   /parent-module@1.0.1:\n     resolution: {integrity: sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==}\n     engines: {node: '>=6'}\n@@ -5178,12 +5212,12 @@ packages:\n       glob: 7.2.3\n     dev: true\n \n-  /rimraf@5.0.7:\n-    resolution: {integrity: sha512-nV6YcJo5wbLW77m+8KjH8aB/7/rxQy9SZ0HY5shnwULfS+9nmTtVXAJET5NdZmCzA4fPI/Hm1wo/Po/4mopOdg==}\n-    engines: {node: '>=14.18'}\n+  /rimraf@5.0.8:\n+    resolution: {integrity: sha512-XSh0V2/yNhDEi8HwdIefD8MLgs4LQXPag/nEJWs3YUc3Upn+UHa1GyIkEg9xSSNt7HnkO5FjTvmcRzgf+8UZuw==}\n+    engines: {node: '>=18'}\n     hasBin: true\n     dependencies:\n-      glob: 10.4.1\n+      glob: 10.4.3\n     dev: true\n \n   /run-parallel@1.2.0:",
    "output": "chore(deps): update dependency rimraf to v5.0.8"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 3ae9dd5..9ceccc9 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -7,7 +7,7 @@ settings:\n dependencies:\n   '@hookform/resolvers':\n     specifier: ^3.4.2\n-    version: 3.6.0(react-hook-form@7.52.1)\n+    version: 3.9.0(react-hook-form@7.52.1)\n   '@radix-ui/react-checkbox':\n     specifier: ^1.0.4\n     version: 1.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n@@ -1083,8 +1083,8 @@ packages:\n     resolution: {integrity: sha512-XGndio0l5/Gvd6CLIABvsav9HHezgDFFhDfHk1bvLfr9ni8dojqLSvBbotJEjmIwNHL7vK4QzBJTdBRoB+c1ww==}\n     dev: false\n \n-  /@hookform/resolvers@3.6.0(react-hook-form@7.52.1):\n-    resolution: {integrity: sha512-UBcpyOX3+RR+dNnqBd0lchXpoL8p4xC21XP8H6Meb8uve5Br1GCnmg0PcBoKKqPKgGu9GHQ/oygcmPrQhetwqw==}\n+  /@hookform/resolvers@3.9.0(react-hook-form@7.52.1):\n+    resolution: {integrity: sha512-bU0Gr4EepJ/EQsH/IwEzYLsT/PEj5C0ynLQ4m+GSHS+xKH4TfSelhluTgOaoc4kA5s7eCsQbM4wvZLzELmWzUg==}\n     peerDependencies:\n       react-hook-form: ^7.0.0\n     dependencies:",
    "output": "fix(deps): update dependency @hookform/resolvers to v3.9.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex d42a696..ffcf67c 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -7,7 +7,7 @@ settings:\n dependencies:\n   '@hookform/resolvers':\n     specifier: ^3.4.2\n-    version: 3.6.0(react-hook-form@7.52.0)\n+    version: 3.6.0(react-hook-form@7.52.1)\n   '@radix-ui/react-checkbox':\n     specifier: ^1.0.4\n     version: 1.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n@@ -94,7 +94,7 @@ dependencies:\n     version: 18.3.1(react@18.3.1)\n   react-hook-form:\n     specifier: ^7.51.5\n-    version: 7.52.0(react@18.3.1)\n+    version: 7.52.1(react@18.3.1)\n   server-only:\n     specifier: ^0.0.1\n     version: 0.0.1\n@@ -1078,12 +1078,12 @@ packages:\n     resolution: {integrity: sha512-XGndio0l5/Gvd6CLIABvsav9HHezgDFFhDfHk1bvLfr9ni8dojqLSvBbotJEjmIwNHL7vK4QzBJTdBRoB+c1ww==}\n     dev: false\n \n-  /@hookform/resolvers@3.6.0(react-hook-form@7.52.0):\n+  /@hookform/resolvers@3.6.0(react-hook-form@7.52.1):\n     resolution: {integrity: sha512-UBcpyOX3+RR+dNnqBd0lchXpoL8p4xC21XP8H6Meb8uve5Br1GCnmg0PcBoKKqPKgGu9GHQ/oygcmPrQhetwqw==}\n     peerDependencies:\n       react-hook-form: ^7.0.0\n     dependencies:\n-      react-hook-form: 7.52.0(react@18.3.1)\n+      react-hook-form: 7.52.1(react@18.3.1)\n     dev: false\n \n   /@humanwhocodes/config-array@0.11.14:\n@@ -5000,8 +5000,8 @@ packages:\n       scheduler: 0.23.2\n     dev: false\n \n-  /react-hook-form@7.52.0(react@18.3.1):\n-    resolution: {integrity: sha512-mJX506Xc6mirzLsmXUJyqlAI3Kj9Ph2RhplYhUVffeOQSnubK2uVqBFOBJmvKikvbFV91pxVXmDiR+QMF19x6A==}\n+  /react-hook-form@7.52.1(react@18.3.1):\n+    resolution: {integrity: sha512-uNKIhaoICJ5KQALYZ4TOaOLElyM+xipord+Ha3crEFhTntdLvWZqVY49Wqd/0GiVCA/f9NjemLeiNPjG7Hpurg==}\n     engines: {node: '>=12.22.0'}\n     peerDependencies:\n       react: ^16.8.0 || ^17 || ^18 || ^19",
    "output": "fix(deps): update dependency react-hook-form to v7.52.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 7ec5a43..d42a696 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -126,7 +126,7 @@ devDependencies:\n     version: 8.56.10\n   '@types/node':\n     specifier: ^20.14.2\n-    version: 20.14.9\n+    version: 20.14.10\n   '@types/react':\n     specifier: ^18.3.3\n     version: 18.3.3\n@@ -2380,8 +2380,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.14.9:\n-    resolution: {integrity: sha512-06OCtnTXtWOZBJlRApleWndH4JsRVs1pDCc8dLSQp+7PpUpX3ePdHyeNSFTeSe7FtKyQkrlPvHwJOW3SLd8Oyg==}\n+  /@types/node@20.14.10:\n+    resolution: {integrity: sha512-MdiXf+nDuMvY0gJKxyfZ7/6UFsETO7mGKF54MVD/ekJS6HdFtpZFBgrh6Pseu64XTb2MLyFPlbW6hj8HYRQNOQ==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.14.10"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 27ac886..e790124 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -180,7 +180,7 @@ devDependencies:\n     version: 3.4.4\n   tsx:\n     specifier: ^4.11.0\n-    version: 4.16.0\n+    version: 4.16.2\n   typescript:\n     specifier: ^5.4.5\n     version: 5.5.2\n@@ -5534,8 +5534,8 @@ packages:\n     resolution: {integrity: sha512-xNvxJEOUiWPGhUuUdQgAJPKOOJfGnIyKySOc09XkKsgdUV/3E2zvwZYdejjmRgPCgcym1juLH3226yA7sEFJKQ==}\n     dev: false\n \n-  /tsx@4.16.0:\n-    resolution: {integrity: sha512-MPgN+CuY+4iKxGoJNPv+1pyo5YWZAQ5XfsyobUG+zoKG7IkvCPLZDEyoIb8yLS2FcWci1nlxAqmvPlFWD5AFiQ==}\n+  /tsx@4.16.2:\n+    resolution: {integrity: sha512-C1uWweJDgdtX2x600HjaFaucXTilT7tgUZHbOE4+ypskZ1OP8CRCSDkCxG6Vya9EwaFIVagWwpaVAn5wzypaqQ==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tsx to v4.16.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 05e3997..cebf866 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -49,7 +49,7 @@ dependencies:\n     version: 0.10.1(typescript@5.5.2)(zod@3.23.8)\n   '@tanstack/react-table':\n     specifier: ^8.17.3\n-    version: 8.19.1(react-dom@18.3.1)(react@18.3.1)\n+    version: 8.19.2(react-dom@18.3.1)(react@18.3.1)\n   class-variance-authority:\n     specifier: ^0.7.0\n     version: 0.7.0\n@@ -2337,20 +2337,20 @@ packages:\n       zod: 3.23.8\n     dev: false\n \n-  /@tanstack/react-table@8.19.1(react-dom@18.3.1)(react@18.3.1):\n-    resolution: {integrity: sha512-2jWJ2mhaXtBZ2h4k6azADFFrAPOGHw/fy/obIXwfCMFf63BKW/tHLp87oWDotFN/aKUo5Vj2cGBDRXfwTgiYPg==}\n+  /@tanstack/react-table@8.19.2(react-dom@18.3.1)(react@18.3.1):\n+    resolution: {integrity: sha512-itoSIAkA/Vsg+bjY23FSemcTyPhc5/1YjYyaMsr9QSH/cdbZnQxHVWrpWn0Sp2BWN71qkzR7e5ye8WuMmwyOjg==}\n     engines: {node: '>=12'}\n     peerDependencies:\n       react: '>=16.8'\n       react-dom: '>=16.8'\n     dependencies:\n-      '@tanstack/table-core': 8.19.1\n+      '@tanstack/table-core': 8.19.2\n       react: 18.3.1\n       react-dom: 18.3.1(react@18.3.1)\n     dev: false\n \n-  /@tanstack/table-core@8.19.1:\n-    resolution: {integrity: sha512-HePba/tRC6MCSHi8o9LktxpOfkV8u2hjGHllHNl5E6+/8mgtSuOSRr5VempH33qsYeIfgk42SiiayP777LZ9kQ==}\n+  /@tanstack/table-core@8.19.2:\n+    resolution: {integrity: sha512-KpRjhgehIhbfH78ARm/GJDXGnpdw4bCg3qas6yjWSi7czJhI/J6pWln7NHtmBkGE9ZbohiiNtLqwGzKmBfixig==}\n     engines: {node: '>=12'}\n     dev: false\n ",
    "output": "fix(deps): update dependency @tanstack/react-table to v8.19.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 8144240..05e3997 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -49,7 +49,7 @@ dependencies:\n     version: 0.10.1(typescript@5.5.2)(zod@3.23.8)\n   '@tanstack/react-table':\n     specifier: ^8.17.3\n-    version: 8.17.3(react-dom@18.3.1)(react@18.3.1)\n+    version: 8.19.1(react-dom@18.3.1)(react@18.3.1)\n   class-variance-authority:\n     specifier: ^0.7.0\n     version: 0.7.0\n@@ -2337,20 +2337,20 @@ packages:\n       zod: 3.23.8\n     dev: false\n \n-  /@tanstack/react-table@8.17.3(react-dom@18.3.1)(react@18.3.1):\n-    resolution: {integrity: sha512-5gwg5SvPD3lNAXPuJJz1fOCEZYk9/GeBFH3w/hCgnfyszOIzwkwgp5I7Q4MJtn0WECp84b5STQUDdmvGi8m3nA==}\n+  /@tanstack/react-table@8.19.1(react-dom@18.3.1)(react@18.3.1):\n+    resolution: {integrity: sha512-2jWJ2mhaXtBZ2h4k6azADFFrAPOGHw/fy/obIXwfCMFf63BKW/tHLp87oWDotFN/aKUo5Vj2cGBDRXfwTgiYPg==}\n     engines: {node: '>=12'}\n     peerDependencies:\n       react: '>=16.8'\n       react-dom: '>=16.8'\n     dependencies:\n-      '@tanstack/table-core': 8.17.3\n+      '@tanstack/table-core': 8.19.1\n       react: 18.3.1\n       react-dom: 18.3.1(react@18.3.1)\n     dev: false\n \n-  /@tanstack/table-core@8.17.3:\n-    resolution: {integrity: sha512-mPBodDGVL+fl6d90wUREepHa/7lhsghg2A3vFpakEhrhtbIlgNAZiMr7ccTgak5qbHqF14Fwy+W1yFWQt+WmYQ==}\n+  /@tanstack/table-core@8.19.1:\n+    resolution: {integrity: sha512-HePba/tRC6MCSHi8o9LktxpOfkV8u2hjGHllHNl5E6+/8mgtSuOSRr5VempH33qsYeIfgk42SiiayP777LZ9kQ==}\n     engines: {node: '>=12'}\n     dev: false\n ",
    "output": "fix(deps): update dependency @tanstack/react-table to v8.19.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 6438043..252cab5 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -144,7 +144,7 @@ devDependencies:\n     version: 7.4.2\n   drizzle-kit:\n     specifier: ^0.22.1\n-    version: 0.22.7\n+    version: 0.22.8\n   eslint:\n     specifier: ^8.57.0\n     version: 8.57.0\n@@ -3123,8 +3123,8 @@ packages:\n     engines: {node: '>=12'}\n     dev: true\n \n-  /drizzle-kit@0.22.7:\n-    resolution: {integrity: sha512-9THPCb2l1GPt7wxhws9LvTR0YG565ZlVgTuqGMwjs590Kch1pXu4GyjEArVijSF5m0OBj3qgdeKmuJXhKXgWFw==}\n+  /drizzle-kit@0.22.8:\n+    resolution: {integrity: sha512-VjI4wsJjk3hSqHSa3TwBf+uvH6M6pRHyxyoVbt935GUzP9tUR/BRZ+MhEJNgryqbzN2Za1KP0eJMTgKEPsalYQ==}\n     hasBin: true\n     dependencies:\n       '@esbuild-kit/esm-loader': 2.6.5",
    "output": "chore(deps): update dependency drizzle-kit to v0.22.8"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 4eb4961..6438043 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -177,7 +177,7 @@ devDependencies:\n     version: 3.4.4\n   tsx:\n     specifier: ^4.11.0\n-    version: 4.15.9\n+    version: 4.16.0\n   typescript:\n     specifier: ^5.4.5\n     version: 5.5.2\n@@ -5526,8 +5526,8 @@ packages:\n     resolution: {integrity: sha512-xNvxJEOUiWPGhUuUdQgAJPKOOJfGnIyKySOc09XkKsgdUV/3E2zvwZYdejjmRgPCgcym1juLH3226yA7sEFJKQ==}\n     dev: false\n \n-  /tsx@4.15.9:\n-    resolution: {integrity: sha512-OEw8VSS5Ug88pj3YhOic1Zmg+mKOuJOcBdpxl402C0D4TjRxu/LTIrr+slbc8nKQA+b7YC9SoHTZAEeQQPBwFw==}\n+  /tsx@4.16.0:\n+    resolution: {integrity: sha512-MPgN+CuY+4iKxGoJNPv+1pyo5YWZAQ5XfsyobUG+zoKG7IkvCPLZDEyoIb8yLS2FcWci1nlxAqmvPlFWD5AFiQ==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tsx to v4.16.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 5bb518d..4eb4961 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -177,7 +177,7 @@ devDependencies:\n     version: 3.4.4\n   tsx:\n     specifier: ^4.11.0\n-    version: 4.15.8\n+    version: 4.15.9\n   typescript:\n     specifier: ^5.4.5\n     version: 5.5.2\n@@ -5526,8 +5526,8 @@ packages:\n     resolution: {integrity: sha512-xNvxJEOUiWPGhUuUdQgAJPKOOJfGnIyKySOc09XkKsgdUV/3E2zvwZYdejjmRgPCgcym1juLH3226yA7sEFJKQ==}\n     dev: false\n \n-  /tsx@4.15.8:\n-    resolution: {integrity: sha512-B8dMlbbkZPW0GQ7wafyy2TGXyoGYW0IURfWkM1h/WzgG5lxxRoeDU2VbMURmmjwGaCsoKROVTLmQQPe/s2TnLw==}\n+  /tsx@4.15.9:\n+    resolution: {integrity: sha512-OEw8VSS5Ug88pj3YhOic1Zmg+mKOuJOcBdpxl402C0D4TjRxu/LTIrr+slbc8nKQA+b7YC9SoHTZAEeQQPBwFw==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tsx to v4.15.9"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex d10e117..5bb518d 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -177,7 +177,7 @@ devDependencies:\n     version: 3.4.4\n   tsx:\n     specifier: ^4.11.0\n-    version: 4.15.7\n+    version: 4.15.8\n   typescript:\n     specifier: ^5.4.5\n     version: 5.5.2\n@@ -5526,8 +5526,8 @@ packages:\n     resolution: {integrity: sha512-xNvxJEOUiWPGhUuUdQgAJPKOOJfGnIyKySOc09XkKsgdUV/3E2zvwZYdejjmRgPCgcym1juLH3226yA7sEFJKQ==}\n     dev: false\n \n-  /tsx@4.15.7:\n-    resolution: {integrity: sha512-u3H0iSFDZM3za+VxkZ1kywdCeHCn+8/qHQS1MNoO2sONDgD95HlWtt8aB23OzeTmFP9IU4/8bZUdg58Uu5J4cg==}\n+  /tsx@4.15.8:\n+    resolution: {integrity: sha512-B8dMlbbkZPW0GQ7wafyy2TGXyoGYW0IURfWkM1h/WzgG5lxxRoeDU2VbMURmmjwGaCsoKROVTLmQQPe/s2TnLw==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tsx to v4.15.8"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex a8a9c39..db7b027 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -114,7 +114,7 @@ devDependencies:\n     version: 8.4.1\n   '@ianvs/prettier-plugin-sort-imports':\n     specifier: ^4.2.1\n-    version: 4.2.1(prettier@3.3.2)\n+    version: 4.3.0(prettier@3.3.2)\n   '@total-typescript/ts-reset':\n     specifier: ^0.5.1\n     version: 0.5.1\n@@ -168,7 +168,7 @@ devDependencies:\n     version: 3.3.2\n   prettier-plugin-tailwindcss:\n     specifier: ^0.6.1\n-    version: 0.6.5(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.3.2)\n+    version: 0.6.5(@ianvs/prettier-plugin-sort-imports@4.3.0)(prettier@3.3.2)\n   rimraf:\n     specifier: ^5.0.7\n     version: 5.0.7\n@@ -1103,8 +1103,8 @@ packages:\n     resolution: {integrity: sha512-93zYdMES/c1D69yZiKDBj0V24vqNzB/koF26KPaagAfd3P/4gUlh3Dys5ogAK+Exi9QyzlD8x/08Zt7wIKcDcA==}\n     dev: true\n \n-  /@ianvs/prettier-plugin-sort-imports@4.2.1(prettier@3.3.2):\n-    resolution: {integrity: sha512-NKN1LVFWUDGDGr3vt+6Ey3qPeN/163uR1pOPAlkWpgvAqgxQ6kSdUf1F0it8aHUtKRUzEGcK38Wxd07O61d7+Q==}\n+  /@ianvs/prettier-plugin-sort-imports@4.3.0(prettier@3.3.2):\n+    resolution: {integrity: sha512-OOMtUcO4J3LoL63dOKAe7bn+lSRRPeit2DqNHpx+wvBp3Grejo2PMaK4Mp1mwy8pnat64ccSgk/lBZbsAdLErw==}\n     peerDependencies:\n       '@vue/compiler-sfc': 2.7.x || 3.x\n       prettier: 2 || 3\n@@ -4894,7 +4894,7 @@ packages:\n     engines: {node: '>= 0.8.0'}\n     dev: true\n \n-  /prettier-plugin-tailwindcss@0.6.5(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.3.2):\n+  /prettier-plugin-tailwindcss@0.6.5(@ianvs/prettier-plugin-sort-imports@4.3.0)(prettier@3.3.2):\n     resolution: {integrity: sha512-axfeOArc/RiGHjOIy9HytehlC0ZLeMaqY09mm8YCkMzznKiDkwFzOpBvtuhuv3xG5qB73+Mj7OCe2j/L1ryfuQ==}\n     engines: {node: '>=14.21.3'}\n     peerDependencies:\n@@ -4946,7 +4946,7 @@ packages:\n       prettier-plugin-svelte:\n         optional: true\n     dependencies:\n-      '@ianvs/prettier-plugin-sort-imports': 4.2.1(prettier@3.3.2)\n+      '@ianvs/prettier-plugin-sort-imports': 4.3.0(prettier@3.3.2)\n       prettier: 3.3.2\n     dev: true\n ",
    "output": "chore(deps): update dependency @ianvs/prettier-plugin-sort-imports to v4.3.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 3f6d730..a8a9c39 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -123,7 +123,7 @@ devDependencies:\n     version: 8.56.10\n   '@types/node':\n     specifier: ^20.14.2\n-    version: 20.14.8\n+    version: 20.14.9\n   '@types/react':\n     specifier: ^18.3.3\n     version: 18.3.3\n@@ -2377,8 +2377,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.14.8:\n-    resolution: {integrity: sha512-DO+2/jZinXfROG7j7WKFn/3C6nFwxy2lLpgLjEXJz+0XKphZlTLJ14mo8Vfg8X5BWN6XjyESXq+LcYdT7tR3bA==}\n+  /@types/node@20.14.9:\n+    resolution: {integrity: sha512-06OCtnTXtWOZBJlRApleWndH4JsRVs1pDCc8dLSQp+7PpUpX3ePdHyeNSFTeSe7FtKyQkrlPvHwJOW3SLd8Oyg==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.14.9"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 15090f7..dcb1c23 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -123,7 +123,7 @@ devDependencies:\n     version: 8.56.10\n   '@types/node':\n     specifier: ^20.14.2\n-    version: 20.14.7\n+    version: 20.14.8\n   '@types/react':\n     specifier: ^18.3.3\n     version: 18.3.3\n@@ -2377,8 +2377,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.14.7:\n-    resolution: {integrity: sha512-uTr2m2IbJJucF3KUxgnGOZvYbN0QgkGyWxG6973HCpMYFy2KfcgYuIwkJQMQkt1VbBMlvWRbpshFTLxnxCZjKQ==}\n+  /@types/node@20.14.8:\n+    resolution: {integrity: sha512-DO+2/jZinXfROG7j7WKFn/3C6nFwxy2lLpgLjEXJz+0XKphZlTLJ14mo8Vfg8X5BWN6XjyESXq+LcYdT7tR3bA==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.14.8"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex cbf3683..10a7011 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -28,7 +28,7 @@ dependencies:\n     version: 1.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n   '@radix-ui/react-select':\n     specifier: ^2.0.0\n-    version: 2.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n+    version: 2.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n   '@radix-ui/react-separator':\n     specifier: ^1.0.3\n     version: 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n@@ -1906,26 +1906,6 @@ packages:\n       react-dom: 18.3.1(react@18.3.1)\n     dev: false\n \n-  /@radix-ui/react-portal@1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1):\n-    resolution: {integrity: sha512-0tXZ5O6qAVvuN9SWP0X+zadHf9hzHiMf/vxOU+kXO+fbtS8lS57MXa6EmikDxk9s/Bmkk80+dcxgbvisIyeqxg==}\n-    peerDependencies:\n-      '@types/react': '*'\n-      '@types/react-dom': '*'\n-      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n-      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n-    peerDependenciesMeta:\n-      '@types/react':\n-        optional: true\n-      '@types/react-dom':\n-        optional: true\n-    dependencies:\n-      '@radix-ui/react-primitive': 2.0.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n-      '@types/react': 18.3.3\n-      '@types/react-dom': 18.3.0\n-      react: 18.3.1\n-      react-dom: 18.3.1(react@18.3.1)\n-    dev: false\n-\n   /@radix-ui/react-portal@1.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1):\n     resolution: {integrity: sha512-A3UtLk85UtqhzFqtoC8Q0KvR2GbXF3mtPgACSazajqq6A41mEQgo53iPzY4i6BwDxlIFqWIhiQ2G729n+2aw/g==}\n     peerDependencies:\n@@ -2088,8 +2068,8 @@ packages:\n       react-dom: 18.3.1(react@18.3.1)\n     dev: false\n \n-  /@radix-ui/react-select@2.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1):\n-    resolution: {integrity: sha512-g6uR+e9o4EB3laMekSDEEKpwRmoZdfiZmZSfc1fO4A1EAVCukZplyNB2TIrNao5cw9HQOyhhy2W1ZQo72RXrJg==}\n+  /@radix-ui/react-select@2.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1):\n+    resolution: {integrity: sha512-8iRDfyLtzxlprOo9IicnzvpsO1wNCkuwzzCM+Z5Rb5tNOpCdMvcc2AkzX0Fz+Tz9v6NJ5B/7EEgyZveo4FBRfQ==}\n     peerDependencies:\n       '@types/react': '*'\n       '@types/react-dom': '*'\n@@ -2112,7 +2092,7 @@ packages:\n       '@radix-ui/react-focus-scope': 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n       '@radix-ui/react-id': 1.1.0(@types/react@18.3.3)(react@18.3.1)\n       '@radix-ui/react-popper': 1.2.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n-      '@radix-ui/react-portal': 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n+      '@radix-ui/react-portal': 1.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n       '@radix-ui/react-primitive': 2.0.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n       '@radix-ui/react-slot': 1.1.0(@types/react@18.3.3)(react@18.3.1)\n       '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@18.3.3)(react@18.3.1)",
    "output": "fix(deps): update dependency @radix-ui/react-select to v2.1.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 1297114..cbf3683 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -25,7 +25,7 @@ dependencies:\n     version: 2.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n   '@radix-ui/react-popover':\n     specifier: ^1.0.7\n-    version: 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n+    version: 1.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n   '@radix-ui/react-select':\n     specifier: ^2.0.0\n     version: 2.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n@@ -1792,8 +1792,8 @@ packages:\n       react-remove-scroll: 2.5.7(@types/react@18.3.3)(react@18.3.1)\n     dev: false\n \n-  /@radix-ui/react-popover@1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1):\n-    resolution: {integrity: sha512-2wdgj6eKNVoFNFtYv2xwkzhIJPlJ5L2aV0eKTZHi5dUVrGy+MhgoV8IyyeFpkZQrwwFzbFlnWl1bwyjVBCNapQ==}\n+  /@radix-ui/react-popover@1.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1):\n+    resolution: {integrity: sha512-3y1A3isulwnWhvTTwmIreiB8CF4L+qRjZnK1wYLO7pplddzXKby/GnZ2M7OZY3qgnl6p9AodUIHRYGXNah8Y7g==}\n     peerDependencies:\n       '@types/react': '*'\n       '@types/react-dom': '*'\n@@ -1813,7 +1813,7 @@ packages:\n       '@radix-ui/react-focus-scope': 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n       '@radix-ui/react-id': 1.1.0(@types/react@18.3.3)(react@18.3.1)\n       '@radix-ui/react-popper': 1.2.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n-      '@radix-ui/react-portal': 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n+      '@radix-ui/react-portal': 1.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n       '@radix-ui/react-presence': 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n       '@radix-ui/react-primitive': 2.0.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n       '@radix-ui/react-slot': 1.1.0(@types/react@18.3.3)(react@18.3.1)",
    "output": "fix(deps): update dependency @radix-ui/react-popover to v1.1.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 71b6405..1297114 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -16,7 +16,7 @@ dependencies:\n     version: 1.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n   '@radix-ui/react-dropdown-menu':\n     specifier: ^2.0.6\n-    version: 2.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n+    version: 2.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n   '@radix-ui/react-icons':\n     specifier: ^1.3.0\n     version: 1.3.0(react@18.3.1)\n@@ -1600,8 +1600,8 @@ packages:\n       react-dom: 18.3.1(react@18.3.1)\n     dev: false\n \n-  /@radix-ui/react-dropdown-menu@2.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1):\n-    resolution: {integrity: sha512-8fAz27yxVaYTkXMm5dVOcKCHOiio9b4nl7rO1HmK8rpzcEl0kSSmwFQsYDyJxB/Em48PvXTez/iaBj3VEd2N4g==}\n+  /@radix-ui/react-dropdown-menu@2.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1):\n+    resolution: {integrity: sha512-y8E+x9fBq9qvteD2Zwa4397pUVhYsh9iq44b5RD5qu1GMJWBCBuVg1hMyItbc6+zH00TxGRqd9Iot4wzf3OoBQ==}\n     peerDependencies:\n       '@types/react': '*'\n       '@types/react-dom': '*'\n@@ -1617,7 +1617,7 @@ packages:\n       '@radix-ui/react-compose-refs': 1.1.0(@types/react@18.3.3)(react@18.3.1)\n       '@radix-ui/react-context': 1.1.0(@types/react@18.3.3)(react@18.3.1)\n       '@radix-ui/react-id': 1.1.0(@types/react@18.3.3)(react@18.3.1)\n-      '@radix-ui/react-menu': 2.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n+      '@radix-ui/react-menu': 2.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n       '@radix-ui/react-primitive': 2.0.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n       '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@18.3.3)(react@18.3.1)\n       '@types/react': 18.3.3\n@@ -1755,8 +1755,8 @@ packages:\n       react-dom: 18.3.1(react@18.3.1)\n     dev: false\n \n-  /@radix-ui/react-menu@2.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1):\n-    resolution: {integrity: sha512-0AxIUQJpimipHDgTVISZbdOY+wZzgICKAsqfI1rF2Hp0Jh3YSv9e9J1tYYyurPBONe5vKi3hZPtVt2E85Sac7A==}\n+  /@radix-ui/react-menu@2.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1):\n+    resolution: {integrity: sha512-oa3mXRRVjHi6DZu/ghuzdylyjaMXLymx83irM7hTxutQbD+7IhPKdMdRHD26Rm+kHRrWcrUkkRPv5pd47a2xFQ==}\n     peerDependencies:\n       '@types/react': '*'\n       '@types/react-dom': '*'\n@@ -1778,7 +1778,7 @@ packages:\n       '@radix-ui/react-focus-scope': 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n       '@radix-ui/react-id': 1.1.0(@types/react@18.3.3)(react@18.3.1)\n       '@radix-ui/react-popper': 1.2.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n-      '@radix-ui/react-portal': 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n+      '@radix-ui/react-portal': 1.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n       '@radix-ui/react-presence': 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n       '@radix-ui/react-primitive': 2.0.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n       '@radix-ui/react-roving-focus': 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)",
    "output": "fix(deps): update dependency @radix-ui/react-dropdown-menu to v2.1.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 34974c9..71b6405 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -13,7 +13,7 @@ dependencies:\n     version: 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n   '@radix-ui/react-dialog':\n     specifier: ^1.0.5\n-    version: 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n+    version: 1.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n   '@radix-ui/react-dropdown-menu':\n     specifier: ^2.0.6\n     version: 2.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n@@ -1491,8 +1491,8 @@ packages:\n       react-remove-scroll: 2.5.5(@types/react@18.3.3)(react@18.3.1)\n     dev: false\n \n-  /@radix-ui/react-dialog@1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1):\n-    resolution: {integrity: sha512-oiSJcsjbdC8JqbXrOuhOd7oaEaPp3x2L2zn6V7ie6SSpEjrAha/WabDX4po6laGwbhAu9DT0XxHL0DmcIXrR0A==}\n+  /@radix-ui/react-dialog@1.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1):\n+    resolution: {integrity: sha512-zysS+iU4YP3STKNS6USvFVqI4qqx8EpiwmT5TuCApVEBca+eRCbONi4EgzfNSuVnOXvC5UPHHMjs8RXO6DH9Bg==}\n     peerDependencies:\n       '@types/react': '*'\n       '@types/react-dom': '*'\n@@ -1511,7 +1511,7 @@ packages:\n       '@radix-ui/react-focus-guards': 1.1.0(@types/react@18.3.3)(react@18.3.1)\n       '@radix-ui/react-focus-scope': 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n       '@radix-ui/react-id': 1.1.0(@types/react@18.3.3)(react@18.3.1)\n-      '@radix-ui/react-portal': 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n+      '@radix-ui/react-portal': 1.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n       '@radix-ui/react-presence': 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n       '@radix-ui/react-primitive': 2.0.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n       '@radix-ui/react-slot': 1.1.0(@types/react@18.3.3)(react@18.3.1)\n@@ -1926,6 +1926,27 @@ packages:\n       react-dom: 18.3.1(react@18.3.1)\n     dev: false\n \n+  /@radix-ui/react-portal@1.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1):\n+    resolution: {integrity: sha512-A3UtLk85UtqhzFqtoC8Q0KvR2GbXF3mtPgACSazajqq6A41mEQgo53iPzY4i6BwDxlIFqWIhiQ2G729n+2aw/g==}\n+    peerDependencies:\n+      '@types/react': '*'\n+      '@types/react-dom': '*'\n+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n+      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n+    peerDependenciesMeta:\n+      '@types/react':\n+        optional: true\n+      '@types/react-dom':\n+        optional: true\n+    dependencies:\n+      '@radix-ui/react-primitive': 2.0.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n+      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@18.3.3)(react@18.3.1)\n+      '@types/react': 18.3.3\n+      '@types/react-dom': 18.3.0\n+      react: 18.3.1\n+      react-dom: 18.3.1(react@18.3.1)\n+    dev: false\n+\n   /@radix-ui/react-presence@1.0.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1):\n     resolution: {integrity: sha512-UXLW4UAbIY5ZjcvzjfRFo5gxva8QirC9hF7wRE4U5gz+TP0DbRk+//qyuAQ1McDxBt1xNMBTaciFGvEmJvAZCg==}\n     peerDependencies:",
    "output": "fix(deps): update dependency @radix-ui/react-dialog to v1.1.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 29382ab..34974c9 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -156,7 +156,7 @@ devDependencies:\n     version: 9.1.0(eslint@8.57.0)\n   eslint-plugin-tailwindcss:\n     specifier: ^3.17.0\n-    version: 3.17.3(tailwindcss@3.4.4)\n+    version: 3.17.4(tailwindcss@3.4.4)\n   pg:\n     specifier: ^8.11.5\n     version: 8.12.0\n@@ -3895,8 +3895,8 @@ packages:\n       string.prototype.matchall: 4.0.11\n     dev: true\n \n-  /eslint-plugin-tailwindcss@3.17.3(tailwindcss@3.4.4):\n-    resolution: {integrity: sha512-DVMVVUFQ+lPraRSuUk2I41XMnusXT6b3WaQZYlUHduULnERaqe9sNfmpRY1IyxlzmKoQxSbZ8IHRhl9ePo8PeA==}\n+  /eslint-plugin-tailwindcss@3.17.4(tailwindcss@3.4.4):\n+    resolution: {integrity: sha512-gJAEHmCq2XFfUP/+vwEfEJ9igrPeZFg+skeMtsxquSQdxba9XRk5bn0Bp9jxG1VV9/wwPKi1g3ZjItu6MIjhNg==}\n     engines: {node: '>=18.12.0'}\n     peerDependencies:\n       tailwindcss: ^3.4.0",
    "output": "chore(deps): update dependency eslint-plugin-tailwindcss to v3.17.4"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex a3918a8..29382ab 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -177,7 +177,7 @@ devDependencies:\n     version: 3.4.4\n   tsx:\n     specifier: ^4.11.0\n-    version: 4.15.6\n+    version: 4.15.7\n   typescript:\n     specifier: ^5.4.5\n     version: 5.5.2\n@@ -5725,8 +5725,8 @@ packages:\n     resolution: {integrity: sha512-xNvxJEOUiWPGhUuUdQgAJPKOOJfGnIyKySOc09XkKsgdUV/3E2zvwZYdejjmRgPCgcym1juLH3226yA7sEFJKQ==}\n     dev: false\n \n-  /tsx@4.15.6:\n-    resolution: {integrity: sha512-is0VQQlfNZRHEuSSTKA6m4xw74IU4AizmuB6lAYLRt9XtuyeQnyJYexhNZOPCB59SqC4JzmSzPnHGBXxf3k0hA==}\n+  /tsx@4.15.7:\n+    resolution: {integrity: sha512-u3H0iSFDZM3za+VxkZ1kywdCeHCn+8/qHQS1MNoO2sONDgD95HlWtt8aB23OzeTmFP9IU4/8bZUdg58Uu5J4cg==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tsx to v4.15.7"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex a053779..a3918a8 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -37,7 +37,7 @@ dependencies:\n     version: 1.1.0(@types/react@18.3.3)(react@18.3.1)\n   '@radix-ui/react-toggle':\n     specifier: ^1.0.3\n-    version: 1.0.3(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n+    version: 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n   '@radix-ui/react-toggle-group':\n     specifier: ^1.0.4\n     version: 1.0.4(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n@@ -2206,6 +2206,28 @@ packages:\n       react-dom: 18.3.1(react@18.3.1)\n     dev: false\n \n+  /@radix-ui/react-toggle@1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1):\n+    resolution: {integrity: sha512-gwoxaKZ0oJ4vIgzsfESBuSgJNdc0rv12VhHgcqN0TEJmmZixXG/2XpsLK8kzNWYcnaoRIEEQc0bEi3dIvdUpjw==}\n+    peerDependencies:\n+      '@types/react': '*'\n+      '@types/react-dom': '*'\n+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n+      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n+    peerDependenciesMeta:\n+      '@types/react':\n+        optional: true\n+      '@types/react-dom':\n+        optional: true\n+    dependencies:\n+      '@radix-ui/primitive': 1.1.0\n+      '@radix-ui/react-primitive': 2.0.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n+      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@18.3.3)(react@18.3.1)\n+      '@types/react': 18.3.3\n+      '@types/react-dom': 18.3.0\n+      react: 18.3.1\n+      react-dom: 18.3.1(react@18.3.1)\n+    dev: false\n+\n   /@radix-ui/react-tooltip@1.0.7(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1):\n     resolution: {integrity: sha512-lPh5iKNFVQ/jav/j6ZrWq3blfDJ0OH9R6FlNUHPMqdLuQ9vwDgFsRxvl8b7Asuy5c8xmoojHUxKHQSOAvMHxyw==}\n     peerDependencies:",
    "output": "fix(deps): update dependency @radix-ui/react-toggle to v1.1.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 2ad9855..a053779 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -34,7 +34,7 @@ dependencies:\n     version: 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n   '@radix-ui/react-slot':\n     specifier: ^1.0.2\n-    version: 1.0.2(@types/react@18.3.3)(react@18.3.1)\n+    version: 1.1.0(@types/react@18.3.3)(react@18.3.1)\n   '@radix-ui/react-toggle':\n     specifier: ^1.0.3\n     version: 1.0.3(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)",
    "output": "fix(deps): update dependency @radix-ui/react-slot to v1.1.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex cb4399c..2ad9855 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -123,7 +123,7 @@ devDependencies:\n     version: 8.56.10\n   '@types/node':\n     specifier: ^20.14.2\n-    version: 20.14.6\n+    version: 20.14.7\n   '@types/react':\n     specifier: ^18.3.3\n     version: 18.3.3\n@@ -2554,8 +2554,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.14.6:\n-    resolution: {integrity: sha512-JbA0XIJPL1IiNnU7PFxDXyfAwcwVVrOoqyzzyQTyMeVhBzkJVMSkC1LlVsRQ2lpqiY4n6Bb9oCS6lzDKVQxbZw==}\n+  /@types/node@20.14.7:\n+    resolution: {integrity: sha512-uTr2m2IbJJucF3KUxgnGOZvYbN0QgkGyWxG6973HCpMYFy2KfcgYuIwkJQMQkt1VbBMlvWRbpshFTLxnxCZjKQ==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.14.7"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 1040232..3e3f99e 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -31,7 +31,7 @@ dependencies:\n     version: 2.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n   '@radix-ui/react-separator':\n     specifier: ^1.0.3\n-    version: 1.0.3(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n+    version: 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n   '@radix-ui/react-slot':\n     specifier: ^1.0.2\n     version: 1.0.2(@types/react@18.3.3)(react@18.3.1)\n@@ -2107,21 +2107,20 @@ packages:\n       react-remove-scroll: 2.5.7(@types/react@18.3.3)(react@18.3.1)\n     dev: false\n \n-  /@radix-ui/react-separator@1.0.3(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1):\n-    resolution: {integrity: sha512-itYmTy/kokS21aiV5+Z56MZB54KrhPgn6eHDKkFeOLR34HMN2s8PaN47qZZAGnvupcjxHaFZnW4pQEh0BvvVuw==}\n+  /@radix-ui/react-separator@1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1):\n+    resolution: {integrity: sha512-3uBAs+egzvJBDZAzvb/n4NxxOYpnspmWxO2u5NbZ8Y6FM/NdrGSF9bop3Cf6F6C71z1rTSn8KV0Fo2ZVd79lGA==}\n     peerDependencies:\n       '@types/react': '*'\n       '@types/react-dom': '*'\n-      react: ^16.8 || ^17.0 || ^18.0\n-      react-dom: ^16.8 || ^17.0 || ^18.0\n+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n+      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n     peerDependenciesMeta:\n       '@types/react':\n         optional: true\n       '@types/react-dom':\n         optional: true\n     dependencies:\n-      '@babel/runtime': 7.24.7\n-      '@radix-ui/react-primitive': 1.0.3(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n+      '@radix-ui/react-primitive': 2.0.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n       '@types/react': 18.3.3\n       '@types/react-dom': 18.3.0\n       react: 18.3.1",
    "output": "fix(deps): update dependency @radix-ui/react-separator to v1.1.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 6956fad..7897516 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -22,7 +22,7 @@ dependencies:\n     version: 1.3.0(react@18.3.1)\n   '@radix-ui/react-label':\n     specifier: ^2.0.2\n-    version: 2.0.2(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n+    version: 2.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n   '@radix-ui/react-popover':\n     specifier: ^1.0.7\n     version: 1.0.7(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n@@ -1737,21 +1737,20 @@ packages:\n       react: 18.3.1\n     dev: false\n \n-  /@radix-ui/react-label@2.0.2(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1):\n-    resolution: {integrity: sha512-N5ehvlM7qoTLx7nWPodsPYPgMzA5WM8zZChQg8nyFJKnDO5WHdba1vv5/H6IO5LtJMfD2Q3wh1qHFGNtK0w3bQ==}\n+  /@radix-ui/react-label@2.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1):\n+    resolution: {integrity: sha512-peLblDlFw/ngk3UWq0VnYaOLy6agTZZ+MUO/WhVfm14vJGML+xH4FAl2XQGLqdefjNb7ApRg6Yn7U42ZhmYXdw==}\n     peerDependencies:\n       '@types/react': '*'\n       '@types/react-dom': '*'\n-      react: ^16.8 || ^17.0 || ^18.0\n-      react-dom: ^16.8 || ^17.0 || ^18.0\n+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n+      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n     peerDependenciesMeta:\n       '@types/react':\n         optional: true\n       '@types/react-dom':\n         optional: true\n     dependencies:\n-      '@babel/runtime': 7.24.7\n-      '@radix-ui/react-primitive': 1.0.3(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n+      '@radix-ui/react-primitive': 2.0.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n       '@types/react': 18.3.3\n       '@types/react-dom': 18.3.0\n       react: 18.3.1",
    "output": "fix(deps): update dependency @radix-ui/react-label to v2.1.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 5ae06d2..89d4b7f 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -123,7 +123,7 @@ devDependencies:\n     version: 8.56.10\n   '@types/node':\n     specifier: ^20.14.2\n-    version: 20.14.5\n+    version: 20.14.6\n   '@types/react':\n     specifier: ^18.3.3\n     version: 18.3.3\n@@ -2134,8 +2134,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.14.5:\n-    resolution: {integrity: sha512-aoRR+fJkZT2l0aGOJhuA8frnCSoNX6W7U2mpNq63+BxBIj5BQFt8rHy627kijCmm63ijdSdwvGgpUsU6MBsZZA==}\n+  /@types/node@20.14.6:\n+    resolution: {integrity: sha512-JbA0XIJPL1IiNnU7PFxDXyfAwcwVVrOoqyzzyQTyMeVhBzkJVMSkC1LlVsRQ2lpqiY4n6Bb9oCS6lzDKVQxbZw==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.14.6"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex f9f65e0..5ae06d2 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -123,7 +123,7 @@ devDependencies:\n     version: 8.56.10\n   '@types/node':\n     specifier: ^20.14.2\n-    version: 20.14.4\n+    version: 20.14.5\n   '@types/react':\n     specifier: ^18.3.3\n     version: 18.3.3\n@@ -2134,8 +2134,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.14.4:\n-    resolution: {integrity: sha512-1ChboN+57suCT2t/f8lwtPY/k3qTpuD/qnqQuYoBg6OQOcPyaw7PiZVdGpaZYAvhDDtqrt0oAaM8+oSu1xsUGw==}\n+  /@types/node@20.14.5:\n+    resolution: {integrity: sha512-aoRR+fJkZT2l0aGOJhuA8frnCSoNX6W7U2mpNq63+BxBIj5BQFt8rHy627kijCmm63ijdSdwvGgpUsU6MBsZZA==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.14.5"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex a86f33c..1e5bb53 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -123,7 +123,7 @@ devDependencies:\n     version: 8.56.10\n   '@types/node':\n     specifier: ^20.14.2\n-    version: 20.14.3\n+    version: 20.14.4\n   '@types/react':\n     specifier: ^18.3.3\n     version: 18.3.3\n@@ -2134,8 +2134,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.14.3:\n-    resolution: {integrity: sha512-Nuzqa6WAxeGnve6SXqiPAM9rA++VQs+iLZ1DDd56y0gdvygSZlQvZuvdFPR3yLqkVxPu4WrO02iDEyH1g+wazw==}\n+  /@types/node@20.14.4:\n+    resolution: {integrity: sha512-1ChboN+57suCT2t/f8lwtPY/k3qTpuD/qnqQuYoBg6OQOcPyaw7PiZVdGpaZYAvhDDtqrt0oAaM8+oSu1xsUGw==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.14.4"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 47e65fc..a86f33c 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -168,7 +168,7 @@ devDependencies:\n     version: 3.3.2\n   prettier-plugin-tailwindcss:\n     specifier: ^0.6.1\n-    version: 0.6.4(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.3.2)\n+    version: 0.6.5(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.3.2)\n   rimraf:\n     specifier: ^5.0.7\n     version: 5.0.7\n@@ -4651,8 +4651,8 @@ packages:\n     engines: {node: '>= 0.8.0'}\n     dev: true\n \n-  /prettier-plugin-tailwindcss@0.6.4(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.3.2):\n-    resolution: {integrity: sha512-3vhbIvlKyAWPaw9bUr2cw6M1BGx2Oy9CCLJyv+nxEiBGCTcL69WcAz2IFMGqx8IXSzQCInGSo2ujAByg9poHLQ==}\n+  /prettier-plugin-tailwindcss@0.6.5(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.3.2):\n+    resolution: {integrity: sha512-axfeOArc/RiGHjOIy9HytehlC0ZLeMaqY09mm8YCkMzznKiDkwFzOpBvtuhuv3xG5qB73+Mj7OCe2j/L1ryfuQ==}\n     engines: {node: '>=14.21.3'}\n     peerDependencies:\n       '@ianvs/prettier-plugin-sort-imports': '*'",
    "output": "chore(deps): update dependency prettier-plugin-tailwindcss to v0.6.5"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 15456cb..47e65fc 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -123,7 +123,7 @@ devDependencies:\n     version: 8.56.10\n   '@types/node':\n     specifier: ^20.14.2\n-    version: 20.14.2\n+    version: 20.14.3\n   '@types/react':\n     specifier: ^18.3.3\n     version: 18.3.3\n@@ -2134,8 +2134,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.14.2:\n-    resolution: {integrity: sha512-xyu6WAMVwv6AKFLB+e/7ySZVr/0zLCzOa7rSpq6jNwpqOrUbcACDWC+53d4n2QHOnDou0fbIsg8wZu/sxrnI4Q==}\n+  /@types/node@20.14.3:\n+    resolution: {integrity: sha512-Nuzqa6WAxeGnve6SXqiPAM9rA++VQs+iLZ1DDd56y0gdvygSZlQvZuvdFPR3yLqkVxPu4WrO02iDEyH1g+wazw==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.14.3"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 2d84a37..15456cb 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -177,7 +177,7 @@ devDependencies:\n     version: 3.4.4\n   tsx:\n     specifier: ^4.11.0\n-    version: 4.15.5\n+    version: 4.15.6\n   typescript:\n     specifier: ^5.4.5\n     version: 5.4.5\n@@ -5264,8 +5264,8 @@ packages:\n     resolution: {integrity: sha512-xNvxJEOUiWPGhUuUdQgAJPKOOJfGnIyKySOc09XkKsgdUV/3E2zvwZYdejjmRgPCgcym1juLH3226yA7sEFJKQ==}\n     dev: false\n \n-  /tsx@4.15.5:\n-    resolution: {integrity: sha512-iKi8jQ2VBmZ2kU/FkGkL2OSHBHsazsUzsdC/W/RwhKIEsIoZ1alCclZHP5jGfNHEaEWUJFM1GquzCf+4db3b0w==}\n+  /tsx@4.15.6:\n+    resolution: {integrity: sha512-is0VQQlfNZRHEuSSTKA6m4xw74IU4AizmuB6lAYLRt9XtuyeQnyJYexhNZOPCB59SqC4JzmSzPnHGBXxf3k0hA==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tsx to v4.15.6"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 2cd58b5..2d84a37 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -7,7 +7,7 @@ settings:\n dependencies:\n   '@hookform/resolvers':\n     specifier: ^3.4.2\n-    version: 3.6.0(react-hook-form@7.51.5)\n+    version: 3.6.0(react-hook-form@7.52.0)\n   '@radix-ui/react-checkbox':\n     specifier: ^1.0.4\n     version: 1.0.4(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n@@ -91,7 +91,7 @@ dependencies:\n     version: 18.3.1(react@18.3.1)\n   react-hook-form:\n     specifier: ^7.51.5\n-    version: 7.51.5(react@18.3.1)\n+    version: 7.52.0(react@18.3.1)\n   server-only:\n     specifier: ^0.0.1\n     version: 0.0.1\n@@ -1075,12 +1075,12 @@ packages:\n     resolution: {integrity: sha512-J4yDIIthosAsRZ5CPYP/jQvUAQtlZTTD/4suA08/FEnlxqW3sKS9iAhgsa9VYLZ6vDHn/ixJgIqRQPotoBjxIw==}\n     dev: false\n \n-  /@hookform/resolvers@3.6.0(react-hook-form@7.51.5):\n+  /@hookform/resolvers@3.6.0(react-hook-form@7.52.0):\n     resolution: {integrity: sha512-UBcpyOX3+RR+dNnqBd0lchXpoL8p4xC21XP8H6Meb8uve5Br1GCnmg0PcBoKKqPKgGu9GHQ/oygcmPrQhetwqw==}\n     peerDependencies:\n       react-hook-form: ^7.0.0\n     dependencies:\n-      react-hook-form: 7.51.5(react@18.3.1)\n+      react-hook-form: 7.52.0(react@18.3.1)\n     dev: false\n \n   /@humanwhocodes/config-array@0.11.14:\n@@ -4749,11 +4749,11 @@ packages:\n       scheduler: 0.23.2\n     dev: false\n \n-  /react-hook-form@7.51.5(react@18.3.1):\n-    resolution: {integrity: sha512-J2ILT5gWx1XUIJRETiA7M19iXHlG74+6O3KApzvqB/w8S5NQR7AbU8HVZrMALdmDgWpRPYiZJl0zx8Z4L2mP6Q==}\n+  /react-hook-form@7.52.0(react@18.3.1):\n+    resolution: {integrity: sha512-mJX506Xc6mirzLsmXUJyqlAI3Kj9Ph2RhplYhUVffeOQSnubK2uVqBFOBJmvKikvbFV91pxVXmDiR+QMF19x6A==}\n     engines: {node: '>=12.22.0'}\n     peerDependencies:\n-      react: ^16.8.0 || ^17 || ^18\n+      react: ^16.8.0 || ^17 || ^18 || ^19\n     dependencies:\n       react: 18.3.1\n     dev: false",
    "output": "fix(deps): update dependency react-hook-form to v7.52.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex a677607..2cd58b5 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -177,7 +177,7 @@ devDependencies:\n     version: 3.4.4\n   tsx:\n     specifier: ^4.11.0\n-    version: 4.15.4\n+    version: 4.15.5\n   typescript:\n     specifier: ^5.4.5\n     version: 5.4.5\n@@ -5264,8 +5264,8 @@ packages:\n     resolution: {integrity: sha512-xNvxJEOUiWPGhUuUdQgAJPKOOJfGnIyKySOc09XkKsgdUV/3E2zvwZYdejjmRgPCgcym1juLH3226yA7sEFJKQ==}\n     dev: false\n \n-  /tsx@4.15.4:\n-    resolution: {integrity: sha512-d++FLCwJLrXaBFtRcqdPBzu6FiVOJ2j+UsvUZPtoTrnYtCGU5CEW7iHXtNZfA2fcRTvJFWPqA6SWBuB0GSva9w==}\n+  /tsx@4.15.5:\n+    resolution: {integrity: sha512-iKi8jQ2VBmZ2kU/FkGkL2OSHBHsazsUzsdC/W/RwhKIEsIoZ1alCclZHP5jGfNHEaEWUJFM1GquzCf+4db3b0w==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tsx to v4.15.5"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 531ea8b..a677607 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -177,7 +177,7 @@ devDependencies:\n     version: 3.4.4\n   tsx:\n     specifier: ^4.11.0\n-    version: 4.15.3\n+    version: 4.15.4\n   typescript:\n     specifier: ^5.4.5\n     version: 5.4.5\n@@ -5264,8 +5264,8 @@ packages:\n     resolution: {integrity: sha512-xNvxJEOUiWPGhUuUdQgAJPKOOJfGnIyKySOc09XkKsgdUV/3E2zvwZYdejjmRgPCgcym1juLH3226yA7sEFJKQ==}\n     dev: false\n \n-  /tsx@4.15.3:\n-    resolution: {integrity: sha512-wLzUMy3xSUpGZQqDprd0U25hpLRJMH8RzONVsqJLwgmE65ZKsxfbs5xVG+sF08wHNyBILmqo5C2775DXYMbRog==}\n+  /tsx@4.15.4:\n+    resolution: {integrity: sha512-d++FLCwJLrXaBFtRcqdPBzu6FiVOJ2j+UsvUZPtoTrnYtCGU5CEW7iHXtNZfA2fcRTvJFWPqA6SWBuB0GSva9w==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tsx to v4.15.4"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 7a8d6c2..531ea8b 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -168,7 +168,7 @@ devDependencies:\n     version: 3.3.2\n   prettier-plugin-tailwindcss:\n     specifier: ^0.6.1\n-    version: 0.6.2(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.3.2)\n+    version: 0.6.4(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.3.2)\n   rimraf:\n     specifier: ^5.0.7\n     version: 5.0.7\n@@ -4651,8 +4651,8 @@ packages:\n     engines: {node: '>= 0.8.0'}\n     dev: true\n \n-  /prettier-plugin-tailwindcss@0.6.2(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.3.2):\n-    resolution: {integrity: sha512-eFefm4cg+1c2B57+H274Qm//CTWBdtQN9ansl0YTP/8TC8x3bugCTQSS/e4FC5Ctl9djhTzsbcMrZ7x2/abIow==}\n+  /prettier-plugin-tailwindcss@0.6.4(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.3.2):\n+    resolution: {integrity: sha512-3vhbIvlKyAWPaw9bUr2cw6M1BGx2Oy9CCLJyv+nxEiBGCTcL69WcAz2IFMGqx8IXSzQCInGSo2ujAByg9poHLQ==}\n     engines: {node: '>=14.21.3'}\n     peerDependencies:\n       '@ianvs/prettier-plugin-sort-imports': '*'",
    "output": "chore(deps): update dependency prettier-plugin-tailwindcss to v0.6.4"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 34d9a9d..7a8d6c2 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -177,7 +177,7 @@ devDependencies:\n     version: 3.4.4\n   tsx:\n     specifier: ^4.11.0\n-    version: 4.15.2\n+    version: 4.15.3\n   typescript:\n     specifier: ^5.4.5\n     version: 5.4.5\n@@ -5264,8 +5264,8 @@ packages:\n     resolution: {integrity: sha512-xNvxJEOUiWPGhUuUdQgAJPKOOJfGnIyKySOc09XkKsgdUV/3E2zvwZYdejjmRgPCgcym1juLH3226yA7sEFJKQ==}\n     dev: false\n \n-  /tsx@4.15.2:\n-    resolution: {integrity: sha512-kIZTOCmR37nEw0qxQks2dR+eZWSXydhTGmz7yx94vEiJtJGBTkUl0D/jt/5fey+CNdm6i3Cp+29WKRay9ScQUw==}\n+  /tsx@4.15.3:\n+    resolution: {integrity: sha512-wLzUMy3xSUpGZQqDprd0U25hpLRJMH8RzONVsqJLwgmE65ZKsxfbs5xVG+sF08wHNyBILmqo5C2775DXYMbRog==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tsx to v4.15.3"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 9172cc9..7d53d0a 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -114,7 +114,7 @@ devDependencies:\n     version: 8.4.1\n   '@ianvs/prettier-plugin-sort-imports':\n     specifier: ^4.2.1\n-    version: 4.2.1(prettier@3.3.1)\n+    version: 4.2.1(prettier@3.3.2)\n   '@total-typescript/ts-reset':\n     specifier: ^0.5.1\n     version: 0.5.1\n@@ -165,10 +165,10 @@ devDependencies:\n     version: 8.4.38\n   prettier:\n     specifier: ^3.3.0\n-    version: 3.3.1\n+    version: 3.3.2\n   prettier-plugin-tailwindcss:\n     specifier: ^0.6.1\n-    version: 0.6.2(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.3.1)\n+    version: 0.6.2(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.3.2)\n   rimraf:\n     specifier: ^5.0.7\n     version: 5.0.7\n@@ -1103,7 +1103,7 @@ packages:\n     resolution: {integrity: sha512-93zYdMES/c1D69yZiKDBj0V24vqNzB/koF26KPaagAfd3P/4gUlh3Dys5ogAK+Exi9QyzlD8x/08Zt7wIKcDcA==}\n     dev: true\n \n-  /@ianvs/prettier-plugin-sort-imports@4.2.1(prettier@3.3.1):\n+  /@ianvs/prettier-plugin-sort-imports@4.2.1(prettier@3.3.2):\n     resolution: {integrity: sha512-NKN1LVFWUDGDGr3vt+6Ey3qPeN/163uR1pOPAlkWpgvAqgxQ6kSdUf1F0it8aHUtKRUzEGcK38Wxd07O61d7+Q==}\n     peerDependencies:\n       '@vue/compiler-sfc': 2.7.x || 3.x\n@@ -1117,7 +1117,7 @@ packages:\n       '@babel/parser': 7.24.7\n       '@babel/traverse': 7.24.7\n       '@babel/types': 7.24.7\n-      prettier: 3.3.1\n+      prettier: 3.3.2\n       semver: 7.6.2\n     transitivePeerDependencies:\n       - supports-color\n@@ -4651,7 +4651,7 @@ packages:\n     engines: {node: '>= 0.8.0'}\n     dev: true\n \n-  /prettier-plugin-tailwindcss@0.6.2(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.3.1):\n+  /prettier-plugin-tailwindcss@0.6.2(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.3.2):\n     resolution: {integrity: sha512-eFefm4cg+1c2B57+H274Qm//CTWBdtQN9ansl0YTP/8TC8x3bugCTQSS/e4FC5Ctl9djhTzsbcMrZ7x2/abIow==}\n     engines: {node: '>=14.21.3'}\n     peerDependencies:\n@@ -4703,12 +4703,12 @@ packages:\n       prettier-plugin-svelte:\n         optional: true\n     dependencies:\n-      '@ianvs/prettier-plugin-sort-imports': 4.2.1(prettier@3.3.1)\n-      prettier: 3.3.1\n+      '@ianvs/prettier-plugin-sort-imports': 4.2.1(prettier@3.3.2)\n+      prettier: 3.3.2\n     dev: true\n \n-  /prettier@3.3.1:\n-    resolution: {integrity: sha512-7CAwy5dRsxs8PHXT3twixW9/OEll8MLE0VRPCJyl7CkS6VHGPSlsVaWTiASPTyGyYRyApxlaWTzwUxVNrhcwDg==}\n+  /prettier@3.3.2:\n+    resolution: {integrity: sha512-rAVeHYMcv8ATV5d508CFdn+8/pHPpXeIid1DdrPwXnaAdH7cqjVbpJaT5eq4yRAFU/lsbwYwSF/n5iNrdJHPQA==}\n     engines: {node: '>=14'}\n     hasBin: true\n     dev: true",
    "output": "chore(deps): update dependency prettier to v3.3.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 9f3c946..52f561b 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -144,7 +144,7 @@ devDependencies:\n     version: 7.4.2\n   drizzle-kit:\n     specifier: ^0.22.1\n-    version: 0.22.6\n+    version: 0.22.7\n   eslint:\n     specifier: ^8.57.0\n     version: 8.57.0\n@@ -2880,8 +2880,8 @@ packages:\n     engines: {node: '>=12'}\n     dev: true\n \n-  /drizzle-kit@0.22.6:\n-    resolution: {integrity: sha512-TE4mBMeVJvySjYxwKeUOMrzytFSKnpMyp6kBnm+aascu9P+hCMrGvnJhOAO94C3wmt144CoHZQWQCOoP/EFl8A==}\n+  /drizzle-kit@0.22.7:\n+    resolution: {integrity: sha512-9THPCb2l1GPt7wxhws9LvTR0YG565ZlVgTuqGMwjs590Kch1pXu4GyjEArVijSF5m0OBj3qgdeKmuJXhKXgWFw==}\n     hasBin: true\n     dependencies:\n       '@esbuild-kit/esm-loader': 2.6.5",
    "output": "chore(deps): update dependency drizzle-kit to v0.22.7"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 5b14a20..37544bd 100644\n--- a/package.json\n+++ b/package.json\n@@ -64,7 +64,7 @@\n     \"@ianvs/prettier-plugin-sort-imports\": \"^4.2.1\",\n     \"@total-typescript/ts-reset\": \"^0.5.1\",\n     \"@types/eslint\": \"^8.56.10\",\n-    \"@types/node\": \"^20.13.0\",\n+    \"@types/node\": \"^20.14.2\",\n     \"@types/react\": \"^18.3.3\",\n     \"@types/react-dom\": \"^18.3.0\",\n     \"@typescript-eslint/eslint-plugin\": \"^7.11.0\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex a817c02..c7fc76f 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -122,7 +122,7 @@ devDependencies:\n     specifier: ^8.56.10\n     version: 8.56.10\n   '@types/node':\n-    specifier: ^20.13.0\n+    specifier: ^20.14.2\n     version: 20.14.2\n   '@types/react':\n     specifier: ^18.3.3",
    "output": "chore: sync"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 003d393..a817c02 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -177,7 +177,7 @@ devDependencies:\n     version: 3.4.4\n   tsx:\n     specifier: ^4.11.0\n-    version: 4.15.0\n+    version: 4.15.1\n   typescript:\n     specifier: ^5.4.5\n     version: 5.4.5\n@@ -5259,8 +5259,8 @@ packages:\n     resolution: {integrity: sha512-AEYxH93jGFPn/a2iVAwW87VuUIkR1FVUKB77NwMF7nBTDkDrrT/Hpt/IrCJ0QXhW27jTBDcf5ZY7w6RiqTMw2Q==}\n     dev: false\n \n-  /tsx@4.15.0:\n-    resolution: {integrity: sha512-yPThHvkUdsyi3pUb+2a6JM0y0shxxLlIEfms2ZztL/rHqK+4dFYdVxh2X/0bcieo16Kvjq77VU/ML/nVICK/0g==}\n+  /tsx@4.15.1:\n+    resolution: {integrity: sha512-k/6h17jA1KfUR7SpcteOa880zGmF56s8gMIcSqUR5avyNFi9nlCEKpMiHLrzrqyARGr52A/JablmGey1DEWbCA==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tsx to v4.15.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 71d1c96..d4fe6ca 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -177,7 +177,7 @@ devDependencies:\n     version: 3.4.4\n   tsx:\n     specifier: ^4.11.0\n-    version: 4.14.0\n+    version: 4.14.1\n   typescript:\n     specifier: ^5.4.5\n     version: 5.4.5\n@@ -5259,8 +5259,8 @@ packages:\n     resolution: {integrity: sha512-AEYxH93jGFPn/a2iVAwW87VuUIkR1FVUKB77NwMF7nBTDkDrrT/Hpt/IrCJ0QXhW27jTBDcf5ZY7w6RiqTMw2Q==}\n     dev: false\n \n-  /tsx@4.14.0:\n-    resolution: {integrity: sha512-DsDLlJlusAPyCnz07S4y0gqJoUl8GciBeYcXQd75/5DqkZ4gfjKpvAUFUzmZf62nEotkcqC7JCWrdL8d+PXSng==}\n+  /tsx@4.14.1:\n+    resolution: {integrity: sha512-GU8pPJq8DdxcJDSK6Bc64c2jW8zBK2hb0jzwHZDfjapbwu6AqvFnAElnzZ17Xb9TH5a/j6/sicTCVYF+eO/cmA==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tsx to v4.14.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 7d87509..71d1c96 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -177,7 +177,7 @@ devDependencies:\n     version: 3.4.4\n   tsx:\n     specifier: ^4.11.0\n-    version: 4.13.3\n+    version: 4.14.0\n   typescript:\n     specifier: ^5.4.5\n     version: 5.4.5\n@@ -5259,8 +5259,8 @@ packages:\n     resolution: {integrity: sha512-AEYxH93jGFPn/a2iVAwW87VuUIkR1FVUKB77NwMF7nBTDkDrrT/Hpt/IrCJ0QXhW27jTBDcf5ZY7w6RiqTMw2Q==}\n     dev: false\n \n-  /tsx@4.13.3:\n-    resolution: {integrity: sha512-FTAJJLQCMiIbt78kD5qhLjHIR5NOQDKC63wcdelWRDBE+d1xSrXYhXq4DzejnC2tGhFZHpDy2Ika0Ugf7sK8gA==}\n+  /tsx@4.14.0:\n+    resolution: {integrity: sha512-DsDLlJlusAPyCnz07S4y0gqJoUl8GciBeYcXQd75/5DqkZ4gfjKpvAUFUzmZf62nEotkcqC7JCWrdL8d+PXSng==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tsx to v4.14.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 15c5e59..7d87509 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -144,7 +144,7 @@ devDependencies:\n     version: 7.4.2\n   drizzle-kit:\n     specifier: ^0.22.1\n-    version: 0.22.5\n+    version: 0.22.6\n   eslint:\n     specifier: ^8.57.0\n     version: 8.57.0\n@@ -2875,8 +2875,8 @@ packages:\n     engines: {node: '>=12'}\n     dev: true\n \n-  /drizzle-kit@0.22.5:\n-    resolution: {integrity: sha512-hhCJRyZkr6cWnnUuslxE3VbptPVLpFPZkfS3iyuuHUHGQV8jTUotRvpDFhhytxhwazy4Uj5s7wcsQp3iXHn1vQ==}\n+  /drizzle-kit@0.22.6:\n+    resolution: {integrity: sha512-TE4mBMeVJvySjYxwKeUOMrzytFSKnpMyp6kBnm+aascu9P+hCMrGvnJhOAO94C3wmt144CoHZQWQCOoP/EFl8A==}\n     hasBin: true\n     dependencies:\n       '@esbuild-kit/esm-loader': 2.6.5",
    "output": "chore(deps): update dependency drizzle-kit to v0.22.6"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 0eafa4d..15c5e59 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -97,7 +97,7 @@ dependencies:\n     version: 0.0.1\n   sonner:\n     specifier: ^1.4.41\n-    version: 1.4.41(react-dom@18.3.1)(react@18.3.1)\n+    version: 1.5.0(react-dom@18.3.1)(react@18.3.1)\n   tailwind-merge:\n     specifier: ^2.3.0\n     version: 2.3.0\n@@ -4994,8 +4994,8 @@ packages:\n     engines: {node: '>=8'}\n     dev: true\n \n-  /sonner@1.4.41(react-dom@18.3.1)(react@18.3.1):\n-    resolution: {integrity: sha512-uG511ggnnsw6gcn/X+YKkWPo5ep9il9wYi3QJxHsYe7yTZ4+cOd1wuodOUmOpFuXL+/RE3R04LczdNCDygTDgQ==}\n+  /sonner@1.5.0(react-dom@18.3.1)(react@18.3.1):\n+    resolution: {integrity: sha512-FBjhG/gnnbN6FY0jaNnqZOMmB73R+5IiyYAw8yBj7L54ER7HB3fOSE5OFiQiE2iXWxeXKvg6fIP4LtVppHEdJA==}\n     peerDependencies:\n       react: ^18.0.0\n       react-dom: ^18.0.0",
    "output": "fix(deps): update dependency sonner to v1.5.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 627b732..0eafa4d 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -177,7 +177,7 @@ devDependencies:\n     version: 3.4.4\n   tsx:\n     specifier: ^4.11.0\n-    version: 4.13.1\n+    version: 4.13.3\n   typescript:\n     specifier: ^5.4.5\n     version: 5.4.5\n@@ -5259,8 +5259,8 @@ packages:\n     resolution: {integrity: sha512-AEYxH93jGFPn/a2iVAwW87VuUIkR1FVUKB77NwMF7nBTDkDrrT/Hpt/IrCJ0QXhW27jTBDcf5ZY7w6RiqTMw2Q==}\n     dev: false\n \n-  /tsx@4.13.1:\n-    resolution: {integrity: sha512-MU1IshdvSdIvf0U9ofr5ZWCWjLAPvf5gIvRZygGisoA/fq/FmSxjAfLIxF8ZoZtvHffY1NRkmxIR5/RW1Qc84g==}\n+  /tsx@4.13.3:\n+    resolution: {integrity: sha512-FTAJJLQCMiIbt78kD5qhLjHIR5NOQDKC63wcdelWRDBE+d1xSrXYhXq4DzejnC2tGhFZHpDy2Ika0Ugf7sK8gA==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tsx to v4.13.3"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 731d563..627b732 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -64,7 +64,7 @@ dependencies:\n     version: 3.6.0\n   drizzle-orm:\n     specifier: ^0.31.0\n-    version: 0.31.1(@types/react@18.3.3)(pg@8.12.0)(postgres@3.4.4)(react@18.3.1)\n+    version: 0.31.2(@types/react@18.3.3)(pg@8.12.0)(postgres@3.4.4)(react@18.3.1)\n   geist:\n     specifier: ^1.3.0\n     version: 1.3.0(next@14.2.3)\n@@ -2886,8 +2886,8 @@ packages:\n       - supports-color\n     dev: true\n \n-  /drizzle-orm@0.31.1(@types/react@18.3.3)(pg@8.12.0)(postgres@3.4.4)(react@18.3.1):\n-    resolution: {integrity: sha512-hTbYne2XX3y6sV7WSxcPH6/vNSiQSUG9VZsFI27jBMCN0OT3Ok7ao3pIT5OMAqWkzJCRFgGjAaUeTAZWPgOKag==}\n+  /drizzle-orm@0.31.2(@types/react@18.3.3)(pg@8.12.0)(postgres@3.4.4)(react@18.3.1):\n+    resolution: {integrity: sha512-QnenevbnnAzmbNzQwbhklvIYrDE8YER8K7kSrAWQSV1YvFCdSQPzj+jzqRdTSsV2cDqSpQ0NXGyL1G9I43LDLg==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=3'\n@@ -2897,6 +2897,7 @@ packages:\n       '@op-engineering/op-sqlite': '>=2'\n       '@opentelemetry/api': ^1.4.1\n       '@planetscale/database': '>=1'\n+      '@tidbcloud/serverless': '*'\n       '@types/better-sqlite3': '*'\n       '@types/pg': '*'\n       '@types/react': '>=18'\n@@ -2931,6 +2932,8 @@ packages:\n         optional: true\n       '@planetscale/database':\n         optional: true\n+      '@tidbcloud/serverless':\n+        optional: true\n       '@types/better-sqlite3':\n         optional: true\n       '@types/pg':",
    "output": "fix(deps): update dependency drizzle-orm to v0.31.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex c117665..731d563 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -168,7 +168,7 @@ devDependencies:\n     version: 3.3.1\n   prettier-plugin-tailwindcss:\n     specifier: ^0.6.1\n-    version: 0.6.1(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.3.1)\n+    version: 0.6.2(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.3.1)\n   rimraf:\n     specifier: ^5.0.7\n     version: 5.0.7\n@@ -4643,8 +4643,8 @@ packages:\n     engines: {node: '>= 0.8.0'}\n     dev: true\n \n-  /prettier-plugin-tailwindcss@0.6.1(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.3.1):\n-    resolution: {integrity: sha512-AnbeYZu0WGj+QgKciUgdMnRxrqcxltleZPgdwfA5104BHM3siBLONN/HLW1yS2HvzSNkzpQ/JAj+LN0jcJO+0w==}\n+  /prettier-plugin-tailwindcss@0.6.2(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.3.1):\n+    resolution: {integrity: sha512-eFefm4cg+1c2B57+H274Qm//CTWBdtQN9ansl0YTP/8TC8x3bugCTQSS/e4FC5Ctl9djhTzsbcMrZ7x2/abIow==}\n     engines: {node: '>=14.21.3'}\n     peerDependencies:\n       '@ianvs/prettier-plugin-sort-imports': '*'",
    "output": "chore(deps): update dependency prettier-plugin-tailwindcss to v0.6.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex b279ab1..c117665 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -144,7 +144,7 @@ devDependencies:\n     version: 7.4.2\n   drizzle-kit:\n     specifier: ^0.22.1\n-    version: 0.22.3\n+    version: 0.22.5\n   eslint:\n     specifier: ^8.57.0\n     version: 8.57.0\n@@ -2875,8 +2875,8 @@ packages:\n     engines: {node: '>=12'}\n     dev: true\n \n-  /drizzle-kit@0.22.3:\n-    resolution: {integrity: sha512-SWxH9rTE5G6SjKh9ckiEWAvzZ2ZElntQT+Vn4K/jPgSOESKXPlwNby2bTIVutvtBQzo40S9XnyZ7iR6ObvpDHA==}\n+  /drizzle-kit@0.22.5:\n+    resolution: {integrity: sha512-hhCJRyZkr6cWnnUuslxE3VbptPVLpFPZkfS3iyuuHUHGQV8jTUotRvpDFhhytxhwazy4Uj5s7wcsQp3iXHn1vQ==}\n     hasBin: true\n     dependencies:\n       '@esbuild-kit/esm-loader': 2.6.5",
    "output": "chore(deps): update dependency drizzle-kit to v0.22.5"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex fa2181d..b279ab1 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -177,7 +177,7 @@ devDependencies:\n     version: 3.4.4\n   tsx:\n     specifier: ^4.11.0\n-    version: 4.13.0\n+    version: 4.13.1\n   typescript:\n     specifier: ^5.4.5\n     version: 5.4.5\n@@ -5256,8 +5256,8 @@ packages:\n     resolution: {integrity: sha512-AEYxH93jGFPn/a2iVAwW87VuUIkR1FVUKB77NwMF7nBTDkDrrT/Hpt/IrCJ0QXhW27jTBDcf5ZY7w6RiqTMw2Q==}\n     dev: false\n \n-  /tsx@4.13.0:\n-    resolution: {integrity: sha512-kNY70P2aLMdVBii1Err5ENxDhQ6Vz2PbQGX68DcvzY2/PWK5NLBO6vI7lPr1/2xG3IKSt2MN+KOAyWDQSRlbCA==}\n+  /tsx@4.13.1:\n+    resolution: {integrity: sha512-MU1IshdvSdIvf0U9ofr5ZWCWjLAPvf5gIvRZygGisoA/fq/FmSxjAfLIxF8ZoZtvHffY1NRkmxIR5/RW1Qc84g==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tsx to v4.13.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 94761e6..fa2181d 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -177,7 +177,7 @@ devDependencies:\n     version: 3.4.4\n   tsx:\n     specifier: ^4.11.0\n-    version: 4.12.0\n+    version: 4.13.0\n   typescript:\n     specifier: ^5.4.5\n     version: 5.4.5\n@@ -5256,8 +5256,8 @@ packages:\n     resolution: {integrity: sha512-AEYxH93jGFPn/a2iVAwW87VuUIkR1FVUKB77NwMF7nBTDkDrrT/Hpt/IrCJ0QXhW27jTBDcf5ZY7w6RiqTMw2Q==}\n     dev: false\n \n-  /tsx@4.12.0:\n-    resolution: {integrity: sha512-642NAWAbDqPZINjmL32Lh/B+pd8vbVj6LHPsWm09IIHqQuWhCrNfcPTjRlHFWvv3FfM4vt9NLReBIjUNj5ZhDg==}\n+  /tsx@4.13.0:\n+    resolution: {integrity: sha512-kNY70P2aLMdVBii1Err5ENxDhQ6Vz2PbQGX68DcvzY2/PWK5NLBO6vI7lPr1/2xG3IKSt2MN+KOAyWDQSRlbCA==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tsx to v4.13.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex bf6b2c4..94761e6 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -144,7 +144,7 @@ devDependencies:\n     version: 7.4.2\n   drizzle-kit:\n     specifier: ^0.22.1\n-    version: 0.22.2\n+    version: 0.22.3\n   eslint:\n     specifier: ^8.57.0\n     version: 8.57.0\n@@ -2875,8 +2875,8 @@ packages:\n     engines: {node: '>=12'}\n     dev: true\n \n-  /drizzle-kit@0.22.2:\n-    resolution: {integrity: sha512-dxluXlhT1N9bpj2eZR3N/z3u4H0PbbrBYgyouIobFF25tOt2Buy1abx26Jii96qcYV0JgxjhnuV+FBcgR0Xa0w==}\n+  /drizzle-kit@0.22.3:\n+    resolution: {integrity: sha512-SWxH9rTE5G6SjKh9ckiEWAvzZ2ZElntQT+Vn4K/jPgSOESKXPlwNby2bTIVutvtBQzo40S9XnyZ7iR6ObvpDHA==}\n     hasBin: true\n     dependencies:\n       '@esbuild-kit/esm-loader': 2.6.5",
    "output": "chore(deps): update dependency drizzle-kit to v0.22.3"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 6611457..bf6b2c4 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -156,7 +156,7 @@ devDependencies:\n     version: 9.1.0(eslint@8.57.0)\n   eslint-plugin-tailwindcss:\n     specifier: ^3.17.0\n-    version: 3.17.1(tailwindcss@3.4.4)\n+    version: 3.17.2(tailwindcss@3.4.4)\n   pg:\n     specifier: ^8.11.5\n     version: 8.12.0\n@@ -3445,8 +3445,8 @@ packages:\n       string.prototype.matchall: 4.0.11\n     dev: true\n \n-  /eslint-plugin-tailwindcss@3.17.1(tailwindcss@3.4.4):\n-    resolution: {integrity: sha512-uHgM2bp2lIDEsW0thwbELfHRkPBRrtz7LrNg8DQ7EngYBBtZ9StJv2HVOKY7B+3zDE8N5G6ygynfJ/sxA6Vk1A==}\n+  /eslint-plugin-tailwindcss@3.17.2(tailwindcss@3.4.4):\n+    resolution: {integrity: sha512-U0hSG4z+q98e0Mot3n9zTzcTb2XRKy9xwXI36atIsAhJF/Hk7wqXptF8NBLNBaWgZPwmDmvH032Dxk2m0rHSeQ==}\n     engines: {node: '>=18.12.0'}\n     peerDependencies:\n       tailwindcss: ^3.4.0",
    "output": "chore(deps): update dependency eslint-plugin-tailwindcss to v3.17.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex dbd3f32..6611457 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -177,7 +177,7 @@ devDependencies:\n     version: 3.4.4\n   tsx:\n     specifier: ^4.11.0\n-    version: 4.11.1\n+    version: 4.12.0\n   typescript:\n     specifier: ^5.4.5\n     version: 5.4.5\n@@ -5256,8 +5256,8 @@ packages:\n     resolution: {integrity: sha512-AEYxH93jGFPn/a2iVAwW87VuUIkR1FVUKB77NwMF7nBTDkDrrT/Hpt/IrCJ0QXhW27jTBDcf5ZY7w6RiqTMw2Q==}\n     dev: false\n \n-  /tsx@4.11.1:\n-    resolution: {integrity: sha512-8ZmVC4OlQipEh3XBclB9YIih1XlNerBJ5NSwo5p76lIWIZdoSF+jFOVm9Gc/FQQ9554mZfxEEq9yTZfdghGYrw==}\n+  /tsx@4.12.0:\n+    resolution: {integrity: sha512-642NAWAbDqPZINjmL32Lh/B+pd8vbVj6LHPsWm09IIHqQuWhCrNfcPTjRlHFWvv3FfM4vt9NLReBIjUNj5ZhDg==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tsx to v4.12.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 78a6b50..dbd3f32 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -7,7 +7,7 @@ settings:\n dependencies:\n   '@hookform/resolvers':\n     specifier: ^3.4.2\n-    version: 3.5.0(react-hook-form@7.51.5)\n+    version: 3.6.0(react-hook-form@7.51.5)\n   '@radix-ui/react-checkbox':\n     specifier: ^1.0.4\n     version: 1.0.4(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n@@ -1070,8 +1070,8 @@ packages:\n     resolution: {integrity: sha512-J4yDIIthosAsRZ5CPYP/jQvUAQtlZTTD/4suA08/FEnlxqW3sKS9iAhgsa9VYLZ6vDHn/ixJgIqRQPotoBjxIw==}\n     dev: false\n \n-  /@hookform/resolvers@3.5.0(react-hook-form@7.51.5):\n-    resolution: {integrity: sha512-bgL8iT0/F+2Q7wB7vYSFu3H1c70C3yI2f9evVw0Td3yf6Fa9eBp6nw5L8mzVJV01EGN1Ky+FhlzGSIoZBOeHDA==}\n+  /@hookform/resolvers@3.6.0(react-hook-form@7.51.5):\n+    resolution: {integrity: sha512-UBcpyOX3+RR+dNnqBd0lchXpoL8p4xC21XP8H6Meb8uve5Br1GCnmg0PcBoKKqPKgGu9GHQ/oygcmPrQhetwqw==}\n     peerDependencies:\n       react-hook-form: ^7.0.0\n     dependencies:",
    "output": "fix(deps): update dependency @hookform/resolvers to v3.6.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 3b8ba27..57ed80b 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -114,7 +114,7 @@ devDependencies:\n     version: 8.4.1\n   '@ianvs/prettier-plugin-sort-imports':\n     specifier: ^4.2.1\n-    version: 4.2.1(prettier@3.3.0)\n+    version: 4.2.1(prettier@3.3.1)\n   '@total-typescript/ts-reset':\n     specifier: ^0.5.1\n     version: 0.5.1\n@@ -165,10 +165,10 @@ devDependencies:\n     version: 8.4.38\n   prettier:\n     specifier: ^3.3.0\n-    version: 3.3.0\n+    version: 3.3.1\n   prettier-plugin-tailwindcss:\n     specifier: ^0.6.1\n-    version: 0.6.1(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.3.0)\n+    version: 0.6.1(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.3.1)\n   rimraf:\n     specifier: ^5.0.7\n     version: 5.0.7\n@@ -1098,7 +1098,7 @@ packages:\n     resolution: {integrity: sha512-93zYdMES/c1D69yZiKDBj0V24vqNzB/koF26KPaagAfd3P/4gUlh3Dys5ogAK+Exi9QyzlD8x/08Zt7wIKcDcA==}\n     dev: true\n \n-  /@ianvs/prettier-plugin-sort-imports@4.2.1(prettier@3.3.0):\n+  /@ianvs/prettier-plugin-sort-imports@4.2.1(prettier@3.3.1):\n     resolution: {integrity: sha512-NKN1LVFWUDGDGr3vt+6Ey3qPeN/163uR1pOPAlkWpgvAqgxQ6kSdUf1F0it8aHUtKRUzEGcK38Wxd07O61d7+Q==}\n     peerDependencies:\n       '@vue/compiler-sfc': 2.7.x || 3.x\n@@ -1112,7 +1112,7 @@ packages:\n       '@babel/parser': 7.24.6\n       '@babel/traverse': 7.24.6\n       '@babel/types': 7.24.6\n-      prettier: 3.3.0\n+      prettier: 3.3.1\n       semver: 7.6.2\n     transitivePeerDependencies:\n       - supports-color\n@@ -4643,7 +4643,7 @@ packages:\n     engines: {node: '>= 0.8.0'}\n     dev: true\n \n-  /prettier-plugin-tailwindcss@0.6.1(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.3.0):\n+  /prettier-plugin-tailwindcss@0.6.1(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.3.1):\n     resolution: {integrity: sha512-AnbeYZu0WGj+QgKciUgdMnRxrqcxltleZPgdwfA5104BHM3siBLONN/HLW1yS2HvzSNkzpQ/JAj+LN0jcJO+0w==}\n     engines: {node: '>=14.21.3'}\n     peerDependencies:\n@@ -4695,12 +4695,12 @@ packages:\n       prettier-plugin-svelte:\n         optional: true\n     dependencies:\n-      '@ianvs/prettier-plugin-sort-imports': 4.2.1(prettier@3.3.0)\n-      prettier: 3.3.0\n+      '@ianvs/prettier-plugin-sort-imports': 4.2.1(prettier@3.3.1)\n+      prettier: 3.3.1\n     dev: true\n \n-  /prettier@3.3.0:\n-    resolution: {integrity: sha512-J9odKxERhCQ10OC2yb93583f6UnYutOeiV5i0zEDS7UGTdUt0u+y8erxl3lBKvwo/JHyyoEdXjwp4dke9oyZ/g==}\n+  /prettier@3.3.1:\n+    resolution: {integrity: sha512-7CAwy5dRsxs8PHXT3twixW9/OEll8MLE0VRPCJyl7CkS6VHGPSlsVaWTiASPTyGyYRyApxlaWTzwUxVNrhcwDg==}\n     engines: {node: '>=14'}\n     hasBin: true\n     dev: true",
    "output": "chore(deps): update dependency prettier to v3.3.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 11d3072..3b8ba27 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -156,7 +156,7 @@ devDependencies:\n     version: 9.1.0(eslint@8.57.0)\n   eslint-plugin-tailwindcss:\n     specifier: ^3.17.0\n-    version: 3.17.0(tailwindcss@3.4.3)\n+    version: 3.17.1(tailwindcss@3.4.3)\n   pg:\n     specifier: ^8.11.5\n     version: 8.12.0\n@@ -3445,9 +3445,9 @@ packages:\n       string.prototype.matchall: 4.0.11\n     dev: true\n \n-  /eslint-plugin-tailwindcss@3.17.0(tailwindcss@3.4.3):\n-    resolution: {integrity: sha512-Ofl7tNh57a3W8BKHstKZSkD2gSCEkw54ycwZ958IK9zUR8TiNYdp8b0WGoLWLeyOAbeF1VPVJFBnlkJeIM2kVg==}\n-    engines: {node: '>=14.0.0'}\n+  /eslint-plugin-tailwindcss@3.17.1(tailwindcss@3.4.3):\n+    resolution: {integrity: sha512-uHgM2bp2lIDEsW0thwbELfHRkPBRrtz7LrNg8DQ7EngYBBtZ9StJv2HVOKY7B+3zDE8N5G6ygynfJ/sxA6Vk1A==}\n+    engines: {node: '>=18.12.0'}\n     peerDependencies:\n       tailwindcss: ^3.4.0\n     dependencies:",
    "output": "chore(deps): update dependency eslint-plugin-tailwindcss to v3.17.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 9a487bc..11d3072 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -123,7 +123,7 @@ devDependencies:\n     version: 8.56.10\n   '@types/node':\n     specifier: ^20.13.0\n-    version: 20.14.1\n+    version: 20.14.2\n   '@types/react':\n     specifier: ^18.3.3\n     version: 18.3.3\n@@ -2129,8 +2129,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.14.1:\n-    resolution: {integrity: sha512-T2MzSGEu+ysB/FkWfqmhV3PLyQlowdptmmgD20C6QxsS8Fmv5SjpZ1ayXaEC0S21/h5UJ9iA6W/5vSNU5l00OA==}\n+  /@types/node@20.14.2:\n+    resolution: {integrity: sha512-xyu6WAMVwv6AKFLB+e/7ySZVr/0zLCzOa7rSpq6jNwpqOrUbcACDWC+53d4n2QHOnDou0fbIsg8wZu/sxrnI4Q==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.14.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 52388af..9a487bc 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -7,7 +7,7 @@ settings:\n dependencies:\n   '@hookform/resolvers':\n     specifier: ^3.4.2\n-    version: 3.4.2(react-hook-form@7.51.5)\n+    version: 3.5.0(react-hook-form@7.51.5)\n   '@radix-ui/react-checkbox':\n     specifier: ^1.0.4\n     version: 1.0.4(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1)(react@18.3.1)\n@@ -1070,8 +1070,8 @@ packages:\n     resolution: {integrity: sha512-J4yDIIthosAsRZ5CPYP/jQvUAQtlZTTD/4suA08/FEnlxqW3sKS9iAhgsa9VYLZ6vDHn/ixJgIqRQPotoBjxIw==}\n     dev: false\n \n-  /@hookform/resolvers@3.4.2(react-hook-form@7.51.5):\n-    resolution: {integrity: sha512-1m9uAVIO8wVf7VCDAGsuGA0t6Z3m6jVGAN50HkV9vYLl0yixKK/Z1lr01vaRvYCkIKGoy1noVRxMzQYb4y/j1Q==}\n+  /@hookform/resolvers@3.5.0(react-hook-form@7.51.5):\n+    resolution: {integrity: sha512-bgL8iT0/F+2Q7wB7vYSFu3H1c70C3yI2f9evVw0Td3yf6Fa9eBp6nw5L8mzVJV01EGN1Ky+FhlzGSIoZBOeHDA==}\n     peerDependencies:\n       react-hook-form: ^7.0.0\n     dependencies:",
    "output": "fix(deps): update dependency @hookform/resolvers to v3.5.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 02ba2cc..52388af 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -64,7 +64,7 @@ dependencies:\n     version: 3.6.0\n   drizzle-orm:\n     specifier: ^0.31.0\n-    version: 0.31.1(@types/react@18.3.3)(pg@8.11.5)(postgres@3.4.4)(react@18.3.1)\n+    version: 0.31.1(@types/react@18.3.3)(pg@8.12.0)(postgres@3.4.4)(react@18.3.1)\n   geist:\n     specifier: ^1.3.0\n     version: 1.3.0(next@14.2.3)\n@@ -159,7 +159,7 @@ devDependencies:\n     version: 3.17.0(tailwindcss@3.4.3)\n   pg:\n     specifier: ^8.11.5\n-    version: 8.11.5\n+    version: 8.12.0\n   postcss:\n     specifier: ^8.4.38\n     version: 8.4.38\n@@ -2886,7 +2886,7 @@ packages:\n       - supports-color\n     dev: true\n \n-  /drizzle-orm@0.31.1(@types/react@18.3.3)(pg@8.11.5)(postgres@3.4.4)(react@18.3.1):\n+  /drizzle-orm@0.31.1(@types/react@18.3.3)(pg@8.12.0)(postgres@3.4.4)(react@18.3.1):\n     resolution: {integrity: sha512-hTbYne2XX3y6sV7WSxcPH6/vNSiQSUG9VZsFI27jBMCN0OT3Ok7ao3pIT5OMAqWkzJCRFgGjAaUeTAZWPgOKag==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n@@ -2967,7 +2967,7 @@ packages:\n         optional: true\n     dependencies:\n       '@types/react': 18.3.3\n-      pg: 8.11.5\n+      pg: 8.12.0\n       postgres: 3.4.4\n       react: 18.3.1\n     dev: false\n@@ -4481,12 +4481,12 @@ packages:\n     resolution: {integrity: sha512-WCtabS6t3c8SkpDBUlb1kjOs7l66xsGdKpIPZsg4wR+B3+u9UAum2odSsF9tnvxg80h4ZxLWMy4pRjOsFIqQpw==}\n     engines: {node: '>=4.0.0'}\n \n-  /pg-pool@3.6.2(pg@8.11.5):\n+  /pg-pool@3.6.2(pg@8.12.0):\n     resolution: {integrity: sha512-Htjbg8BlwXqSBQ9V8Vjtc+vzf/6fVUuak/3/XXKA9oxZprwW3IMDQTGHP+KDmVL7rtd+R1QjbnCFPuTHm3G4hg==}\n     peerDependencies:\n       pg: '>=8.0'\n     dependencies:\n-      pg: 8.11.5\n+      pg: 8.12.0\n \n   /pg-protocol@1.6.1:\n     resolution: {integrity: sha512-jPIlvgoD63hrEuihvIg+tJhoGjUsLPn6poJY9N5CnlPd91c2T18T/9zBtLxZSb1EhYxBRoZJtzScCaWlYLtktg==}\n@@ -4501,8 +4501,8 @@ packages:\n       postgres-date: 1.0.7\n       postgres-interval: 1.2.0\n \n-  /pg@8.11.5:\n-    resolution: {integrity: sha512-jqgNHSKL5cbDjFlHyYsCXmQDrfIX/3RsNwYqpd4N0Kt8niLuNoRNH+aazv6cOd43gPh9Y4DjQCtb+X0MH0Hvnw==}\n+  /pg@8.12.0:\n+    resolution: {integrity: sha512-A+LHUSnwnxrnL/tZ+OLfqR1SxLN3c/pgDztZ47Rpbsd4jUytsTtwQo/TLPRzPJMp/1pbhYVhH9cuSZLAajNfjQ==}\n     engines: {node: '>= 8.0.0'}\n     peerDependencies:\n       pg-native: '>=3.0.1'\n@@ -4511,7 +4511,7 @@ packages:\n         optional: true\n     dependencies:\n       pg-connection-string: 2.6.4\n-      pg-pool: 3.6.2(pg@8.11.5)\n+      pg-pool: 3.6.2(pg@8.12.0)\n       pg-protocol: 1.6.1\n       pg-types: 2.2.0\n       pgpass: 1.0.5",
    "output": "chore(deps): update dependency pg to v8.12.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 1a5df57..02ba2cc 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -64,7 +64,7 @@ dependencies:\n     version: 3.6.0\n   drizzle-orm:\n     specifier: ^0.31.0\n-    version: 0.31.0(@types/react@18.3.3)(pg@8.11.5)(postgres@3.4.4)(react@18.3.1)\n+    version: 0.31.1(@types/react@18.3.3)(pg@8.11.5)(postgres@3.4.4)(react@18.3.1)\n   geist:\n     specifier: ^1.3.0\n     version: 1.3.0(next@14.2.3)\n@@ -2886,8 +2886,8 @@ packages:\n       - supports-color\n     dev: true\n \n-  /drizzle-orm@0.31.0(@types/react@18.3.3)(pg@8.11.5)(postgres@3.4.4)(react@18.3.1):\n-    resolution: {integrity: sha512-Uf5a3sGOqoyC+ZpQ4NCPR373q0pHOHezIJwdumMix+3rzLdtKgRhdaOabYeqNHBB48gF3Q9rrndkNc4ddE3AWA==}\n+  /drizzle-orm@0.31.1(@types/react@18.3.3)(pg@8.11.5)(postgres@3.4.4)(react@18.3.1):\n+    resolution: {integrity: sha512-hTbYne2XX3y6sV7WSxcPH6/vNSiQSUG9VZsFI27jBMCN0OT3Ok7ao3pIT5OMAqWkzJCRFgGjAaUeTAZWPgOKag==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=3'",
    "output": "fix(deps): update dependency drizzle-orm to v0.31.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 4e3937b..1a5df57 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -144,7 +144,7 @@ devDependencies:\n     version: 7.4.2\n   drizzle-kit:\n     specifier: ^0.22.1\n-    version: 0.22.1\n+    version: 0.22.2\n   eslint:\n     specifier: ^8.57.0\n     version: 8.57.0\n@@ -2875,8 +2875,8 @@ packages:\n     engines: {node: '>=12'}\n     dev: true\n \n-  /drizzle-kit@0.22.1:\n-    resolution: {integrity: sha512-2at6LeHSGdhkwGtZbghtJaMUxWmeuLfX9X1O7um/SxfVbtK580h2jd59Gd5Z7TnofSS2tgmFiyEtM4fBat3KeA==}\n+  /drizzle-kit@0.22.2:\n+    resolution: {integrity: sha512-dxluXlhT1N9bpj2eZR3N/z3u4H0PbbrBYgyouIobFF25tOt2Buy1abx26Jii96qcYV0JgxjhnuV+FBcgR0Xa0w==}\n     hasBin: true\n     dependencies:\n       '@esbuild-kit/esm-loader': 2.6.5",
    "output": "chore(deps): update dependency drizzle-kit to v0.22.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 8b86d2a..4e3937b 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -123,7 +123,7 @@ devDependencies:\n     version: 8.56.10\n   '@types/node':\n     specifier: ^20.13.0\n-    version: 20.14.0\n+    version: 20.14.1\n   '@types/react':\n     specifier: ^18.3.3\n     version: 18.3.3\n@@ -2129,8 +2129,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.14.0:\n-    resolution: {integrity: sha512-5cHBxFGJx6L4s56Bubp4fglrEpmyJypsqI6RgzMfBHWUJQGWAAi8cWcgetEbZXHYXo9C2Fa4EEds/uSyS4cxmA==}\n+  /@types/node@20.14.1:\n+    resolution: {integrity: sha512-T2MzSGEu+ysB/FkWfqmhV3PLyQlowdptmmgD20C6QxsS8Fmv5SjpZ1ayXaEC0S21/h5UJ9iA6W/5vSNU5l00OA==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.14.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex c37a413..f122fa6 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -177,7 +177,7 @@ devDependencies:\n     version: 3.4.3\n   tsx:\n     specifier: ^4.11.0\n-    version: 4.11.0\n+    version: 4.11.1\n   typescript:\n     specifier: ^5.4.5\n     version: 5.4.5\n@@ -5251,8 +5251,8 @@ packages:\n     resolution: {integrity: sha512-AEYxH93jGFPn/a2iVAwW87VuUIkR1FVUKB77NwMF7nBTDkDrrT/Hpt/IrCJ0QXhW27jTBDcf5ZY7w6RiqTMw2Q==}\n     dev: false\n \n-  /tsx@4.11.0:\n-    resolution: {integrity: sha512-vzGGELOgAupsNVssAmZjbUDfdm/pWP4R+Kg8TVdsonxbXk0bEpE1qh0yV6/QxUVXaVlNemgcPajGdJJ82n3stg==}\n+  /tsx@4.11.1:\n+    resolution: {integrity: sha512-8ZmVC4OlQipEh3XBclB9YIih1XlNerBJ5NSwo5p76lIWIZdoSF+jFOVm9Gc/FQQ9554mZfxEEq9yTZfdghGYrw==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tsx to v4.11.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 2a59602..c37a413 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -123,7 +123,7 @@ devDependencies:\n     version: 8.56.10\n   '@types/node':\n     specifier: ^20.13.0\n-    version: 20.13.0\n+    version: 20.14.0\n   '@types/react':\n     specifier: ^18.3.3\n     version: 18.3.3\n@@ -2124,8 +2124,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.13.0:\n-    resolution: {integrity: sha512-FM6AOb3khNkNIXPnHFDYaHerSv8uN22C91z098AnGccVu+Pcdhi+pNUFDi0iLmPIsVE0JBD0KVS7mzUYt4nRzQ==}\n+  /@types/node@20.14.0:\n+    resolution: {integrity: sha512-5cHBxFGJx6L4s56Bubp4fglrEpmyJypsqI6RgzMfBHWUJQGWAAi8cWcgetEbZXHYXo9C2Fa4EEds/uSyS4cxmA==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.14.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/next.config.js b/next.config.js\nindex ee00a53..5b87034 100644\n--- a/next.config.js\n+++ b/next.config.js\n@@ -10,6 +10,9 @@ const nextConfig = {\n     ppr: true,\n     reactCompiler: true,\n   },\n+  // Already doing linting and typechecking as separate tasks in CI\n+  eslint: { ignoreDuringBuilds: true },\n+  typescript: { ignoreBuildErrors: true },\n }\n \n export default nextConfig",
    "output": "chore(ci): disable typechecking and linting during building"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex c5ae473..20b2053 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -117,7 +117,7 @@ devDependencies:\n     version: 8.4.1\n   '@ianvs/prettier-plugin-sort-imports':\n     specifier: ^4.2.1\n-    version: 4.2.1(prettier@3.2.5)\n+    version: 4.2.1(prettier@3.3.0)\n   '@total-typescript/ts-reset':\n     specifier: ^0.5.1\n     version: 0.5.1\n@@ -168,10 +168,10 @@ devDependencies:\n     version: 8.4.38\n   prettier:\n     specifier: ^3.2.5\n-    version: 3.2.5\n+    version: 3.3.0\n   prettier-plugin-tailwindcss:\n     specifier: ^0.5.14\n-    version: 0.5.14(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.2.5)\n+    version: 0.5.14(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.3.0)\n   rimraf:\n     specifier: ^5.0.6\n     version: 5.0.7\n@@ -1114,7 +1114,7 @@ packages:\n     resolution: {integrity: sha512-93zYdMES/c1D69yZiKDBj0V24vqNzB/koF26KPaagAfd3P/4gUlh3Dys5ogAK+Exi9QyzlD8x/08Zt7wIKcDcA==}\n     dev: true\n \n-  /@ianvs/prettier-plugin-sort-imports@4.2.1(prettier@3.2.5):\n+  /@ianvs/prettier-plugin-sort-imports@4.2.1(prettier@3.3.0):\n     resolution: {integrity: sha512-NKN1LVFWUDGDGr3vt+6Ey3qPeN/163uR1pOPAlkWpgvAqgxQ6kSdUf1F0it8aHUtKRUzEGcK38Wxd07O61d7+Q==}\n     peerDependencies:\n       '@vue/compiler-sfc': 2.7.x || 3.x\n@@ -1128,7 +1128,7 @@ packages:\n       '@babel/parser': 7.24.6\n       '@babel/traverse': 7.24.6\n       '@babel/types': 7.24.6\n-      prettier: 3.2.5\n+      prettier: 3.3.0\n       semver: 7.6.2\n     transitivePeerDependencies:\n       - supports-color\n@@ -4940,7 +4940,7 @@ packages:\n     engines: {node: '>= 0.8.0'}\n     dev: true\n \n-  /prettier-plugin-tailwindcss@0.5.14(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.2.5):\n+  /prettier-plugin-tailwindcss@0.5.14(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.3.0):\n     resolution: {integrity: sha512-Puaz+wPUAhFp8Lo9HuciYKM2Y2XExESjeT+9NQoVFXZsPPnc9VYss2SpxdQ6vbatmt8/4+SN0oe0I1cPDABg9Q==}\n     engines: {node: '>=14.21.3'}\n     peerDependencies:\n@@ -4992,12 +4992,12 @@ packages:\n       prettier-plugin-svelte:\n         optional: true\n     dependencies:\n-      '@ianvs/prettier-plugin-sort-imports': 4.2.1(prettier@3.2.5)\n-      prettier: 3.2.5\n+      '@ianvs/prettier-plugin-sort-imports': 4.2.1(prettier@3.3.0)\n+      prettier: 3.3.0\n     dev: true\n \n-  /prettier@3.2.5:\n-    resolution: {integrity: sha512-3/GWa9aOC0YeD7LUfvOG2NiDyhOWRvt1k+rcKhOuYnMY24iiCphgneUfJDyFXd6rZCAnuLBv6UeAULtrhT/F4A==}\n+  /prettier@3.3.0:\n+    resolution: {integrity: sha512-J9odKxERhCQ10OC2yb93583f6UnYutOeiV5i0zEDS7UGTdUt0u+y8erxl3lBKvwo/JHyyoEdXjwp4dke9oyZ/g==}\n     engines: {node: '>=14'}\n     hasBin: true\n     dev: true",
    "output": "chore(deps): update dependency prettier to v3.3.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 8aaabe3..7c37539 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -126,7 +126,7 @@ devDependencies:\n     version: 8.56.10\n   '@types/node':\n     specifier: ^20.12.11\n-    version: 20.12.13\n+    version: 20.12.14\n   '@types/react':\n     specifier: npm:types-react@rc\n     version: /types-react@19.0.0-rc.0\n@@ -2354,8 +2354,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.12.13:\n-    resolution: {integrity: sha512-gBGeanV41c1L171rR7wjbMiEpEI/l5XFQdLLfhr/REwpgDy/4U8y89+i8kRiLzDyZdOkXh+cRaTetUnCYutoXA==}\n+  /@types/node@20.12.14:\n+    resolution: {integrity: sha512-scnD59RpYD91xngrQQLGkE+6UrHUPzeKZWhhjBSa3HSkwjbQc38+q3RoIVEwxQGRw3M+j5hpNAM+lgV3cVormg==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.12.14"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 1888ff0..8aaabe3 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -147,7 +147,7 @@ devDependencies:\n     version: 7.4.2\n   drizzle-kit:\n     specifier: ^0.22.0\n-    version: 0.22.0\n+    version: 0.22.1\n   eslint:\n     specifier: ^8.57.0\n     version: 8.57.0\n@@ -3062,6 +3062,18 @@ packages:\n     dependencies:\n       ms: 2.1.2\n \n+  /debug@4.3.5:\n+    resolution: {integrity: sha512-pt0bNEmneDIvdL1Xsd9oDQ/wrQRkXDT4AUWlNZNPKvW5x/jyO9VFXkJUP07vQ2upmw5PlaITaPKc31jK13V+jg==}\n+    engines: {node: '>=6.0'}\n+    peerDependencies:\n+      supports-color: '*'\n+    peerDependenciesMeta:\n+      supports-color:\n+        optional: true\n+    dependencies:\n+      ms: 2.1.2\n+    dev: true\n+\n   /deep-is@0.1.4:\n     resolution: {integrity: sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==}\n     dev: true\n@@ -3147,8 +3159,8 @@ packages:\n     engines: {node: '>=12'}\n     dev: true\n \n-  /drizzle-kit@0.22.0:\n-    resolution: {integrity: sha512-vmkZZ1SOItQJayFHqEYxjxTCfJdKgAa5eQFj7tkIP+j9VtGnPZ1lhucS0tdjmYfJa30n0LlJ3gXXph+hxrGQPA==}\n+  /drizzle-kit@0.22.1:\n+    resolution: {integrity: sha512-2at6LeHSGdhkwGtZbghtJaMUxWmeuLfX9X1O7um/SxfVbtK580h2jd59Gd5Z7TnofSS2tgmFiyEtM4fBat3KeA==}\n     hasBin: true\n     dependencies:\n       '@esbuild-kit/esm-loader': 2.6.5\n@@ -3384,7 +3396,7 @@ packages:\n     peerDependencies:\n       esbuild: '>=0.12 <1'\n     dependencies:\n-      debug: 4.3.4\n+      debug: 4.3.5\n       esbuild: 0.19.12\n     transitivePeerDependencies:\n       - supports-color",
    "output": "chore(deps): update dependency drizzle-kit to v0.22.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 04cf124..a424e84 100644\n--- a/package.json\n+++ b/package.json\n@@ -44,7 +44,7 @@\n     \"clsx\": \"^2.1.1\",\n     \"cmdk\": \"^1.0.0\",\n     \"date-fns\": \"^3.6.0\",\n-    \"drizzle-orm\": \"^0.30.10\",\n+    \"drizzle-orm\": \"^0.31.0\",\n     \"geist\": \"^1.3.0\",\n     \"nanoid\": \"^5.0.7\",\n     \"next\": \"15.0.0-rc.0\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex aee4a8f..1888ff0 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -66,8 +66,8 @@ dependencies:\n     specifier: ^3.6.0\n     version: 3.6.0\n   drizzle-orm:\n-    specifier: ^0.30.10\n-    version: 0.30.10(pg@8.11.5)(postgres@3.4.4)(react@19.0.0-rc-f994737d14-20240522)(types-react@19.0.0-rc.0)\n+    specifier: ^0.31.0\n+    version: 0.31.0(pg@8.11.5)(postgres@3.4.4)(react@19.0.0-rc-f994737d14-20240522)(types-react@19.0.0-rc.0)\n   geist:\n     specifier: ^1.3.0\n     version: 1.3.0(next@15.0.0-rc.0)\n@@ -3158,8 +3158,8 @@ packages:\n       - supports-color\n     dev: true\n \n-  /drizzle-orm@0.30.10(pg@8.11.5)(postgres@3.4.4)(react@19.0.0-rc-f994737d14-20240522)(types-react@19.0.0-rc.0):\n-    resolution: {integrity: sha512-IRy/QmMWw9lAQHpwbUh1b8fcn27S/a9zMIzqea1WNOxK9/4EB8gIo+FZWLiPXzl2n9ixGSv8BhsLZiOppWEwBw==}\n+  /drizzle-orm@0.31.0(pg@8.11.5)(postgres@3.4.4)(react@19.0.0-rc-f994737d14-20240522)(types-react@19.0.0-rc.0):\n+    resolution: {integrity: sha512-Uf5a3sGOqoyC+ZpQ4NCPR373q0pHOHezIJwdumMix+3rzLdtKgRhdaOabYeqNHBB48gF3Q9rrndkNc4ddE3AWA==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=3'",
    "output": "fix(deps): update dependency drizzle-orm to ^0.31.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 652417b..bbc87cb 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -126,7 +126,7 @@ devDependencies:\n     version: 8.56.10\n   '@types/node':\n     specifier: ^20.12.11\n-    version: 20.12.12\n+    version: 20.12.13\n   '@types/react':\n     specifier: npm:types-react@rc\n     version: /types-react@19.0.0-rc.0\n@@ -2354,8 +2354,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.12.12:\n-    resolution: {integrity: sha512-eWLDGF/FOSPtAvEqeRAQ4C8LSA7M1I7i0ky1I8U7kD1J5ITyW3AsRhQrKVoWf5pFKZ2kILsEGJhsI9r93PYnOw==}\n+  /@types/node@20.12.13:\n+    resolution: {integrity: sha512-gBGeanV41c1L171rR7wjbMiEpEI/l5XFQdLLfhr/REwpgDy/4U8y89+i8kRiLzDyZdOkXh+cRaTetUnCYutoXA==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.12.13"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/app/_lib/actions.ts b/src/app/_lib/actions.ts\nindex 6628193..1a92f9c 100644\n--- a/src/app/_lib/actions.ts\n+++ b/src/app/_lib/actions.ts\n@@ -8,7 +8,7 @@ import { eq, inArray } from \"drizzle-orm\"\n import { customAlphabet } from \"nanoid\"\n \n import { getErrorMessage } from \"@/lib/handle-error\"\n-import { generateId } from \"@/lib/utils\"\n+import { generateId } from \"@/lib/id\"\n \n import type { CreateTaskSchema, UpdateTaskSchema } from \"./validations\"\n \ndiff --git a/src/db/schema.ts b/src/db/schema.ts\nindex 5750f66..5d4e10c 100644\n--- a/src/db/schema.ts\n+++ b/src/db/schema.ts\n@@ -3,7 +3,7 @@ import { sql } from \"drizzle-orm\"\n import { pgEnum, timestamp, varchar } from \"drizzle-orm/pg-core\"\n \n import { databasePrefix } from \"@/lib/constants\"\n-import { generateId } from \"@/lib/utils\"\n+import { generateId } from \"@/lib/id\"\n \n export const statusEnum = pgEnum(`${databasePrefix}_status`, [\n   \"todo\",\ndiff --git a/src/lib/id.ts b/src/lib/id.ts\nnew file mode 100644\nindex 0000000..67ff9e9\n--- /dev/null\n+++ b/src/lib/id.ts\n@@ -0,0 +1,40 @@\n+import { customAlphabet } from \"nanoid\"\n+\n+const prefixes = {\n+  task: \"tsk\",\n+}\n+\n+interface GenerateIdOptions {\n+  /**\n+   * The length of the generated ID.\n+   * @default 16\n+   * @example 16 => \"abc123def456ghi7\"\n+   * */\n+  length?: number\n+  /**\n+   * The separator to use between the prefix and the generated ID.\n+   * @default \"_\"\n+   * @example \"_\" => \"str_abc123\"\n+   * */\n+  separator?: string\n+}\n+\n+/**\n+ * Generates a unique ID with a given prefix.\n+ * @param prefix The prefix to use for the generated ID.\n+ * @param options The options for generating the ID.\n+ * @example\n+ * generateId(\"store\") => \"str_abc123def456\"\n+ * generateId(\"store\", { length: 8 }) => \"str_abc123d\"\n+ * generateId(\"store\", { separator: \"-\" }) => \"str-abc123def456\"\n+ */\n+export function generateId(\n+  prefix?: keyof typeof prefixes,\n+  { length = 12, separator = \"_\" }: GenerateIdOptions = {}\n+) {\n+  const id = customAlphabet(\n+    \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\",\n+    length\n+  )()\n+  return prefix ? `${prefixes[prefix]}${separator}${id}` : id\n+}\ndiff --git a/src/lib/utils.ts b/src/lib/utils.ts\nindex 92b0796..1d5f09b 100644\n--- a/src/lib/utils.ts\n+++ b/src/lib/utils.ts\n@@ -1,18 +1,10 @@\n import { clsx, type ClassValue } from \"clsx\"\n-import { customAlphabet } from \"nanoid\"\n import { twMerge } from \"tailwind-merge\"\n \n export function cn(...inputs: ClassValue[]) {\n   return twMerge(clsx(inputs))\n }\n \n-export function generateId({ length = 8, prefix = \"\" } = {}) {\n-  return `${prefix}${customAlphabet(\n-    \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\",\n-    length\n-  )()}`\n-}\n-\n export function formatDate(\n   date: Date | string | number,\n   opts: Intl.DateTimeFormatOptions = {}",
    "output": "feat: new db"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 059a73e..2aa6c73 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -156,7 +156,7 @@ devDependencies:\n     version: 9.1.0(eslint@8.57.0)\n   eslint-plugin-tailwindcss:\n     specifier: ^3.15.1\n-    version: 3.16.0(tailwindcss@3.4.3)\n+    version: 3.17.0(tailwindcss@3.4.3)\n   pg:\n     specifier: ^8.11.5\n     version: 8.11.5\n@@ -3750,9 +3750,9 @@ packages:\n       string.prototype.matchall: 4.0.11\n     dev: true\n \n-  /eslint-plugin-tailwindcss@3.16.0(tailwindcss@3.4.3):\n-    resolution: {integrity: sha512-OVMNBDvSc7eqZTfLVoEo900bxZUu74W5Cp/VPa2hYqKIGbfTq/UfKIX6df+xkPmD3jVW21n4VblLBLd8dHTjeQ==}\n-    engines: {node: '>=12.13.0'}\n+  /eslint-plugin-tailwindcss@3.17.0(tailwindcss@3.4.3):\n+    resolution: {integrity: sha512-Ofl7tNh57a3W8BKHstKZSkD2gSCEkw54ycwZ958IK9zUR8TiNYdp8b0WGoLWLeyOAbeF1VPVJFBnlkJeIM2kVg==}\n+    engines: {node: '>=14.0.0'}\n     peerDependencies:\n       tailwindcss: ^3.4.0\n     dependencies:",
    "output": "chore(deps): update dependency eslint-plugin-tailwindcss to v3.17.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 94e674c..059a73e 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -177,7 +177,7 @@ devDependencies:\n     version: 3.4.3\n   tsx:\n     specifier: ^4.10.0\n-    version: 4.10.5\n+    version: 4.11.0\n   typescript:\n     specifier: ^5.4.5\n     version: 5.4.5\n@@ -5736,8 +5736,8 @@ packages:\n     resolution: {integrity: sha512-AEYxH93jGFPn/a2iVAwW87VuUIkR1FVUKB77NwMF7nBTDkDrrT/Hpt/IrCJ0QXhW27jTBDcf5ZY7w6RiqTMw2Q==}\n     dev: false\n \n-  /tsx@4.10.5:\n-    resolution: {integrity: sha512-twDSbf7Gtea4I2copqovUiNTEDrT8XNFXsuHpfGbdpW/z9ZW4fTghzzhAG0WfrCuJmJiOEY1nLIjq4u3oujRWQ==}\n+  /tsx@4.11.0:\n+    resolution: {integrity: sha512-vzGGELOgAupsNVssAmZjbUDfdm/pWP4R+Kg8TVdsonxbXk0bEpE1qh0yV6/QxUVXaVlNemgcPajGdJJ82n3stg==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tsx to v4.11.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex ec7fa3d..94e674c 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -144,7 +144,7 @@ devDependencies:\n     version: 7.4.2\n   drizzle-kit:\n     specifier: ^0.21.1\n-    version: 0.21.3\n+    version: 0.21.4\n   eslint:\n     specifier: ^8.57.0\n     version: 8.57.0\n@@ -3133,8 +3133,8 @@ packages:\n       wordwrap: 1.0.0\n     dev: true\n \n-  /drizzle-kit@0.21.3:\n-    resolution: {integrity: sha512-BqLkHBucr32OOZ/16mMSUFKGBcoBYwZnOLkLMbaSVmd8shTVAjOdh2mleI7c/iw70ZcKlL53n3SFlUlKLzy2lQ==}\n+  /drizzle-kit@0.21.4:\n+    resolution: {integrity: sha512-Nxcc1ONJLRgbhmR+azxjNF9Ly9privNLEIgW53c92whb4xp8jZLH1kMCh/54ci1mTMuYxPdOukqLwJ8wRudNwA==}\n     hasBin: true\n     dependencies:\n       '@esbuild-kit/esm-loader': 2.6.5\n@@ -4050,28 +4050,28 @@ packages:\n       path-scurry: 1.11.0\n     dev: true\n \n-  /glob@10.3.14:\n-    resolution: {integrity: sha512-4fkAqu93xe9Mk7le9v0y3VrPDqLKHarNi2s4Pv7f2yOvfhWfhc7hRPHC/JyqMqb8B/Dt/eGS4n7ykwf3fOsl8g==}\n-    engines: {node: '>=16 || 14 >=14.17'}\n+  /glob@10.3.15:\n+    resolution: {integrity: sha512-0c6RlJt1TICLyvJYIApxb8GsXoai0KUP7AxKKAtsYXdgJR1mGEUa7DgwShbdk1nly0PYoZj01xd4hzbq3fsjpw==}\n+    engines: {node: '>=16 || 14 >=14.18'}\n     hasBin: true\n     dependencies:\n       foreground-child: 3.1.1\n       jackspeak: 2.3.6\n       minimatch: 9.0.4\n       minipass: 7.1.1\n-      path-scurry: 1.11.0\n+      path-scurry: 1.11.1\n+    dev: true\n \n-  /glob@10.3.15:\n-    resolution: {integrity: sha512-0c6RlJt1TICLyvJYIApxb8GsXoai0KUP7AxKKAtsYXdgJR1mGEUa7DgwShbdk1nly0PYoZj01xd4hzbq3fsjpw==}\n+  /glob@10.3.16:\n+    resolution: {integrity: sha512-JDKXl1DiuuHJ6fVS2FXjownaavciiHNUU4mOvV/B793RLh05vZL1rcPnCSaOgv1hDT6RDlY7AB7ZUvFYAtPgAw==}\n     engines: {node: '>=16 || 14 >=14.18'}\n     hasBin: true\n     dependencies:\n       foreground-child: 3.1.1\n-      jackspeak: 2.3.6\n+      jackspeak: 3.1.2\n       minimatch: 9.0.4\n       minipass: 7.1.1\n-      path-scurry: 1.11.1\n-    dev: true\n+      path-scurry: 1.11.0\n \n   /glob@7.2.3:\n     resolution: {integrity: sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==}\n@@ -4442,6 +4442,15 @@ packages:\n       '@isaacs/cliui': 8.0.2\n     optionalDependencies:\n       '@pkgjs/parseargs': 0.11.0\n+    dev: true\n+\n+  /jackspeak@3.1.2:\n+    resolution: {integrity: sha512-kWmLKn2tRtfYMF/BakihVVRzBKOxz4gJMiL2Rj91WnAB5TPZumSH99R/Yf1qE1u4uRimvCSJfm6hnxohXeEXjQ==}\n+    engines: {node: '>=14'}\n+    dependencies:\n+      '@isaacs/cliui': 8.0.2\n+    optionalDependencies:\n+      '@pkgjs/parseargs': 0.11.0\n \n   /jiti@1.21.0:\n     resolution: {integrity: sha512-gFqAIbuKyyso/3G2qhiO2OM6shY6EPP/R0+mkDbyspxKazh8BXDC5FiFsUjlczgdNz/vfra0da2y+aHrusLG/Q==}\n@@ -5598,7 +5607,7 @@ packages:\n     dependencies:\n       '@jridgewell/gen-mapping': 0.3.5\n       commander: 4.1.1\n-      glob: 10.3.14\n+      glob: 10.3.16\n       lines-and-columns: 1.2.4\n       mz: 2.7.0\n       pirates: 4.0.6",
    "output": "chore(deps): update dependency drizzle-kit to v0.21.4"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex ef8d9f2..ec7fa3d 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -144,7 +144,7 @@ devDependencies:\n     version: 7.4.2\n   drizzle-kit:\n     specifier: ^0.21.1\n-    version: 0.21.2\n+    version: 0.21.3\n   eslint:\n     specifier: ^8.57.0\n     version: 8.57.0\n@@ -3133,8 +3133,8 @@ packages:\n       wordwrap: 1.0.0\n     dev: true\n \n-  /drizzle-kit@0.21.2:\n-    resolution: {integrity: sha512-U87IhZyCt/9d0ZT/Na3KFJVY31tSxtTx/n9UMcWFpW/5c2Ede39xiCG5efNV/0iimsv97UIRtDI0ldLBW5lbcg==}\n+  /drizzle-kit@0.21.3:\n+    resolution: {integrity: sha512-BqLkHBucr32OOZ/16mMSUFKGBcoBYwZnOLkLMbaSVmd8shTVAjOdh2mleI7c/iw70ZcKlL53n3SFlUlKLzy2lQ==}\n     hasBin: true\n     dependencies:\n       '@esbuild-kit/esm-loader': 2.6.5",
    "output": "chore(deps): update dependency drizzle-kit to v0.21.3"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 10e835c..ef8d9f2 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -156,7 +156,7 @@ devDependencies:\n     version: 9.1.0(eslint@8.57.0)\n   eslint-plugin-tailwindcss:\n     specifier: ^3.15.1\n-    version: 3.15.2(tailwindcss@3.4.3)\n+    version: 3.16.0(tailwindcss@3.4.3)\n   pg:\n     specifier: ^8.11.5\n     version: 8.11.5\n@@ -2773,7 +2773,13 @@ packages:\n     resolution: {integrity: sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==}\n     engines: {node: '>=8'}\n     dependencies:\n-      fill-range: 7.0.1\n+      fill-range: 7.1.1\n+\n+  /braces@3.0.3:\n+    resolution: {integrity: sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==}\n+    engines: {node: '>=8'}\n+    dependencies:\n+      fill-range: 7.1.1\n \n   /browserslist@4.23.0:\n     resolution: {integrity: sha512-QW8HiM1shhT2GuzkvklfjcKDiWFXHOeFCIA/huJPwHsslwcydgk7X+z2zXpEijP98UCY7HbubZt5J2Zgvf0CaQ==}\n@@ -3744,8 +3750,8 @@ packages:\n       string.prototype.matchall: 4.0.11\n     dev: true\n \n-  /eslint-plugin-tailwindcss@3.15.2(tailwindcss@3.4.3):\n-    resolution: {integrity: sha512-+HJfWcyP5B/e8r8qVSaTbf2i4+HsESJJsue66qFHRstV11CNTfdaDD9zkCVA1pm2EplBZ/BSJ3Htfzvb4YTVKw==}\n+  /eslint-plugin-tailwindcss@3.16.0(tailwindcss@3.4.3):\n+    resolution: {integrity: sha512-OVMNBDvSc7eqZTfLVoEo900bxZUu74W5Cp/VPa2hYqKIGbfTq/UfKIX6df+xkPmD3jVW21n4VblLBLd8dHTjeQ==}\n     engines: {node: '>=12.13.0'}\n     peerDependencies:\n       tailwindcss: ^3.4.0\n@@ -3883,7 +3889,7 @@ packages:\n       '@nodelib/fs.walk': 1.2.8\n       glob-parent: 5.1.2\n       merge2: 1.4.1\n-      micromatch: 4.0.5\n+      micromatch: 4.0.7\n \n   /fast-json-stable-stringify@2.1.0:\n     resolution: {integrity: sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==}\n@@ -3905,8 +3911,8 @@ packages:\n       flat-cache: 3.2.0\n     dev: true\n \n-  /fill-range@7.0.1:\n-    resolution: {integrity: sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==}\n+  /fill-range@7.1.1:\n+    resolution: {integrity: sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==}\n     engines: {node: '>=8'}\n     dependencies:\n       to-regex-range: 5.0.1\n@@ -4595,6 +4601,13 @@ packages:\n       braces: 3.0.2\n       picomatch: 2.3.1\n \n+  /micromatch@4.0.7:\n+    resolution: {integrity: sha512-LPP/3KorzCwBxfeUuZmaR6bG2kdeHSbe0P2tY3FLRU4vYrjYz5hI4QZwV0njUx3jeuKe67YukQ1LSPZBKDqO/Q==}\n+    engines: {node: '>=8.6'}\n+    dependencies:\n+      braces: 3.0.3\n+      picomatch: 2.3.1\n+\n   /minimatch@3.1.2:\n     resolution: {integrity: sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==}\n     dependencies:",
    "output": "chore(deps): update dependency eslint-plugin-tailwindcss to v3.16.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 8d38984..10e835c 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -7,7 +7,7 @@ settings:\n dependencies:\n   '@hookform/resolvers':\n     specifier: ^3.3.4\n-    version: 3.4.2(react-hook-form@7.51.4)\n+    version: 3.4.2(react-hook-form@7.51.5)\n   '@radix-ui/react-checkbox':\n     specifier: ^1.0.4\n     version: 1.0.4(@types/react-dom@18.3.0)(@types/react@18.3.2)(react-dom@18.3.1)(react@18.3.1)\n@@ -91,7 +91,7 @@ dependencies:\n     version: 18.3.1(react@18.3.1)\n   react-hook-form:\n     specifier: ^7.51.4\n-    version: 7.51.4(react@18.3.1)\n+    version: 7.51.5(react@18.3.1)\n   server-only:\n     specifier: ^0.0.1\n     version: 0.0.1\n@@ -1076,12 +1076,12 @@ packages:\n     resolution: {integrity: sha512-J4yDIIthosAsRZ5CPYP/jQvUAQtlZTTD/4suA08/FEnlxqW3sKS9iAhgsa9VYLZ6vDHn/ixJgIqRQPotoBjxIw==}\n     dev: false\n \n-  /@hookform/resolvers@3.4.2(react-hook-form@7.51.4):\n+  /@hookform/resolvers@3.4.2(react-hook-form@7.51.5):\n     resolution: {integrity: sha512-1m9uAVIO8wVf7VCDAGsuGA0t6Z3m6jVGAN50HkV9vYLl0yixKK/Z1lr01vaRvYCkIKGoy1noVRxMzQYb4y/j1Q==}\n     peerDependencies:\n       react-hook-form: ^7.0.0\n     dependencies:\n-      react-hook-form: 7.51.4(react@18.3.1)\n+      react-hook-form: 7.51.5(react@18.3.1)\n     dev: false\n \n   /@humanwhocodes/config-array@0.11.14:\n@@ -5151,8 +5151,8 @@ packages:\n       scheduler: 0.23.2\n     dev: false\n \n-  /react-hook-form@7.51.4(react@18.3.1):\n-    resolution: {integrity: sha512-V14i8SEkh+V1gs6YtD0hdHYnoL4tp/HX/A45wWQN15CYr9bFRmmRdYStSO5L65lCCZRF+kYiSKhm9alqbcdiVA==}\n+  /react-hook-form@7.51.5(react@18.3.1):\n+    resolution: {integrity: sha512-J2ILT5gWx1XUIJRETiA7M19iXHlG74+6O3KApzvqB/w8S5NQR7AbU8HVZrMALdmDgWpRPYiZJl0zx8Z4L2mP6Q==}\n     engines: {node: '>=12.22.0'}\n     peerDependencies:\n       react: ^16.8.0 || ^17 || ^18",
    "output": "fix(deps): update dependency react-hook-form to v7.51.5"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex c22b80a..8d38984 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -7,7 +7,7 @@ settings:\n dependencies:\n   '@hookform/resolvers':\n     specifier: ^3.3.4\n-    version: 3.4.0(react-hook-form@7.51.4)\n+    version: 3.4.2(react-hook-form@7.51.4)\n   '@radix-ui/react-checkbox':\n     specifier: ^1.0.4\n     version: 1.0.4(@types/react-dom@18.3.0)(@types/react@18.3.2)(react-dom@18.3.1)(react@18.3.1)\n@@ -1076,8 +1076,8 @@ packages:\n     resolution: {integrity: sha512-J4yDIIthosAsRZ5CPYP/jQvUAQtlZTTD/4suA08/FEnlxqW3sKS9iAhgsa9VYLZ6vDHn/ixJgIqRQPotoBjxIw==}\n     dev: false\n \n-  /@hookform/resolvers@3.4.0(react-hook-form@7.51.4):\n-    resolution: {integrity: sha512-+oAqK3okmoEDnvUkJ3N/mvNMeeMv5Apgy1jkoRmlaaAF4vBgcJs9tHvtXU7VE4DvPosvAUUkPOaNFunzt1dbgA==}\n+  /@hookform/resolvers@3.4.2(react-hook-form@7.51.4):\n+    resolution: {integrity: sha512-1m9uAVIO8wVf7VCDAGsuGA0t6Z3m6jVGAN50HkV9vYLl0yixKK/Z1lr01vaRvYCkIKGoy1noVRxMzQYb4y/j1Q==}\n     peerDependencies:\n       react-hook-form: ^7.0.0\n     dependencies:",
    "output": "fix(deps): update dependency @hookform/resolvers to v3.4.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 0548b16..b0d5b89 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -177,7 +177,7 @@ devDependencies:\n     version: 3.4.3\n   tsx:\n     specifier: ^4.10.0\n-    version: 4.10.4\n+    version: 4.10.5\n   typescript:\n     specifier: ^5.4.5\n     version: 5.4.5\n@@ -5714,8 +5714,8 @@ packages:\n     resolution: {integrity: sha512-AEYxH93jGFPn/a2iVAwW87VuUIkR1FVUKB77NwMF7nBTDkDrrT/Hpt/IrCJ0QXhW27jTBDcf5ZY7w6RiqTMw2Q==}\n     dev: false\n \n-  /tsx@4.10.4:\n-    resolution: {integrity: sha512-Gtg9qnZWNqC/OtcgiXfoAUdAKx3/cgKOYvEocAsv+m21MV/eKpV/WUjRXe6/sDCaGBl2/v8S6v29BpUnGMCX5A==}\n+  /tsx@4.10.5:\n+    resolution: {integrity: sha512-twDSbf7Gtea4I2copqovUiNTEDrT8XNFXsuHpfGbdpW/z9ZW4fTghzzhAG0WfrCuJmJiOEY1nLIjq4u3oujRWQ==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tsx to v4.10.5"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex a155d8a..0548b16 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -177,7 +177,7 @@ devDependencies:\n     version: 3.4.3\n   tsx:\n     specifier: ^4.10.0\n-    version: 4.10.3\n+    version: 4.10.4\n   typescript:\n     specifier: ^5.4.5\n     version: 5.4.5\n@@ -5714,8 +5714,8 @@ packages:\n     resolution: {integrity: sha512-AEYxH93jGFPn/a2iVAwW87VuUIkR1FVUKB77NwMF7nBTDkDrrT/Hpt/IrCJ0QXhW27jTBDcf5ZY7w6RiqTMw2Q==}\n     dev: false\n \n-  /tsx@4.10.3:\n-    resolution: {integrity: sha512-f0g60aFSVRVkzcQkEflh8fPLRfmt+HJHgWi/plG5UgvVaV+9TcpOwJ0sZJSACXmwmjMPg9yQR0BhTLbhkfV2uA==}\n+  /tsx@4.10.4:\n+    resolution: {integrity: sha512-Gtg9qnZWNqC/OtcgiXfoAUdAKx3/cgKOYvEocAsv+m21MV/eKpV/WUjRXe6/sDCaGBl2/v8S6v29BpUnGMCX5A==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tsx to v4.10.4"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex c71f0da..a155d8a 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -156,7 +156,7 @@ devDependencies:\n     version: 9.1.0(eslint@8.57.0)\n   eslint-plugin-tailwindcss:\n     specifier: ^3.15.1\n-    version: 3.15.1(tailwindcss@3.4.3)\n+    version: 3.15.2(tailwindcss@3.4.3)\n   pg:\n     specifier: ^8.11.5\n     version: 8.11.5\n@@ -3744,8 +3744,8 @@ packages:\n       string.prototype.matchall: 4.0.11\n     dev: true\n \n-  /eslint-plugin-tailwindcss@3.15.1(tailwindcss@3.4.3):\n-    resolution: {integrity: sha512-4RXRMIaMG07C2TBEW1k0VM4+dDazz1kxcZhkK4zirvmHGZTA4jnlSO2kq5mamuSPi+Wo17dh2SlC8IyFBuCd7Q==}\n+  /eslint-plugin-tailwindcss@3.15.2(tailwindcss@3.4.3):\n+    resolution: {integrity: sha512-+HJfWcyP5B/e8r8qVSaTbf2i4+HsESJJsue66qFHRstV11CNTfdaDD9zkCVA1pm2EplBZ/BSJ3Htfzvb4YTVKw==}\n     engines: {node: '>=12.13.0'}\n     peerDependencies:\n       tailwindcss: ^3.4.0",
    "output": "chore(deps): update dependency eslint-plugin-tailwindcss to v3.15.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 5036425..aa4a4f6 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -7,7 +7,7 @@ settings:\n dependencies:\n   '@hookform/resolvers':\n     specifier: ^3.3.4\n-    version: 3.3.4(react-hook-form@7.51.4)\n+    version: 3.4.0(react-hook-form@7.51.4)\n   '@radix-ui/react-checkbox':\n     specifier: ^1.0.4\n     version: 1.0.4(@types/react-dom@18.3.0)(@types/react@18.3.2)(react-dom@18.3.1)(react@18.3.1)\n@@ -1076,8 +1076,8 @@ packages:\n     resolution: {integrity: sha512-J4yDIIthosAsRZ5CPYP/jQvUAQtlZTTD/4suA08/FEnlxqW3sKS9iAhgsa9VYLZ6vDHn/ixJgIqRQPotoBjxIw==}\n     dev: false\n \n-  /@hookform/resolvers@3.3.4(react-hook-form@7.51.4):\n-    resolution: {integrity: sha512-o5cgpGOuJYrd+iMKvkttOclgwRW86EsWJZZRC23prf0uU2i48Htq4PuT73AVb9ionFyZrwYEITuOFGF+BydEtQ==}\n+  /@hookform/resolvers@3.4.0(react-hook-form@7.51.4):\n+    resolution: {integrity: sha512-+oAqK3okmoEDnvUkJ3N/mvNMeeMv5Apgy1jkoRmlaaAF4vBgcJs9tHvtXU7VE4DvPosvAUUkPOaNFunzt1dbgA==}\n     peerDependencies:\n       react-hook-form: ^7.0.0\n     dependencies:",
    "output": "fix(deps): update dependency @hookform/resolvers to v3.4.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex c1847a0..ae53f8f 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -144,7 +144,7 @@ devDependencies:\n     version: 7.4.2\n   drizzle-kit:\n     specifier: ^0.21.1\n-    version: 0.21.1\n+    version: 0.21.2\n   eslint:\n     specifier: ^8.57.0\n     version: 8.57.0\n@@ -3127,8 +3127,8 @@ packages:\n       wordwrap: 1.0.0\n     dev: true\n \n-  /drizzle-kit@0.21.1:\n-    resolution: {integrity: sha512-Sp7OnCdROiE2ebMuHsAfrnRoHVGYCvErQxUh7/0l6R1caHssZu9oZu/hW9rLU19xnTK4/y3iSe3sL0Cc530wCg==}\n+  /drizzle-kit@0.21.2:\n+    resolution: {integrity: sha512-U87IhZyCt/9d0ZT/Na3KFJVY31tSxtTx/n9UMcWFpW/5c2Ede39xiCG5efNV/0iimsv97UIRtDI0ldLBW5lbcg==}\n     hasBin: true\n     dependencies:\n       '@esbuild-kit/esm-loader': 2.6.5",
    "output": "chore(deps): update dependency drizzle-kit to v0.21.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex d85cb04..c1847a0 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -49,7 +49,7 @@ dependencies:\n     version: 0.10.1(typescript@5.4.5)(zod@3.23.8)\n   '@tanstack/react-table':\n     specifier: ^8.16.0\n-    version: 8.17.0(react-dom@18.3.1)(react@18.3.1)\n+    version: 8.17.3(react-dom@18.3.1)(react@18.3.1)\n   class-variance-authority:\n     specifier: ^0.7.0\n     version: 0.7.0\n@@ -2278,20 +2278,20 @@ packages:\n       zod: 3.23.8\n     dev: false\n \n-  /@tanstack/react-table@8.17.0(react-dom@18.3.1)(react@18.3.1):\n-    resolution: {integrity: sha512-LSJxTDzlKGs8EN7/UHB1l3yLR9HUIxoHFkTbTjHaUUGL4kgYZFYhsQsdDJSIykG86qpIA/6gSWmtwNfy5Iprhw==}\n+  /@tanstack/react-table@8.17.3(react-dom@18.3.1)(react@18.3.1):\n+    resolution: {integrity: sha512-5gwg5SvPD3lNAXPuJJz1fOCEZYk9/GeBFH3w/hCgnfyszOIzwkwgp5I7Q4MJtn0WECp84b5STQUDdmvGi8m3nA==}\n     engines: {node: '>=12'}\n     peerDependencies:\n       react: '>=16.8'\n       react-dom: '>=16.8'\n     dependencies:\n-      '@tanstack/table-core': 8.16.0\n+      '@tanstack/table-core': 8.17.3\n       react: 18.3.1\n       react-dom: 18.3.1(react@18.3.1)\n     dev: false\n \n-  /@tanstack/table-core@8.16.0:\n-    resolution: {integrity: sha512-dCG8vQGk4js5v88/k83tTedWOwjGnIyONrKpHpfmSJB8jwFHl8GSu1sBBxbtACVAPtAQgwNxl0rw1d3RqRM1Tg==}\n+  /@tanstack/table-core@8.17.3:\n+    resolution: {integrity: sha512-mPBodDGVL+fl6d90wUREepHa/7lhsghg2A3vFpakEhrhtbIlgNAZiMr7ccTgak5qbHqF14Fwy+W1yFWQt+WmYQ==}\n     engines: {node: '>=12'}\n     dev: false\n ",
    "output": "fix(deps): update dependency @tanstack/react-table to v8.17.3"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex af6e2a0..d85cb04 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -123,7 +123,7 @@ devDependencies:\n     version: 8.56.10\n   '@types/node':\n     specifier: ^20.12.11\n-    version: 20.12.11\n+    version: 20.12.12\n   '@types/react':\n     specifier: ^18.3.2\n     version: 18.3.2\n@@ -2318,8 +2318,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.12.11:\n-    resolution: {integrity: sha512-vDg9PZ/zi+Nqp6boSOT7plNuthRugEKixDv5sFTIpkE89MmNtEArAShI4mxuX2+UrLEe9pxC1vm2cjm9YlWbJw==}\n+  /@types/node@20.12.12:\n+    resolution: {integrity: sha512-eWLDGF/FOSPtAvEqeRAQ4C8LSA7M1I7i0ky1I8U7kD1J5ITyW3AsRhQrKVoWf5pFKZ2kILsEGJhsI9r93PYnOw==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.12.12"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 1143ad4..eccd067 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -177,7 +177,7 @@ devDependencies:\n     version: 3.4.3\n   tsx:\n     specifier: ^4.10.0\n-    version: 4.10.1\n+    version: 4.10.2\n   typescript:\n     specifier: ^5.4.5\n     version: 5.4.5\n@@ -5720,8 +5720,8 @@ packages:\n     resolution: {integrity: sha512-AEYxH93jGFPn/a2iVAwW87VuUIkR1FVUKB77NwMF7nBTDkDrrT/Hpt/IrCJ0QXhW27jTBDcf5ZY7w6RiqTMw2Q==}\n     dev: false\n \n-  /tsx@4.10.1:\n-    resolution: {integrity: sha512-G+CcyTOopwhuI81FU+KpzGN5UBhHgGEDlGt8mHAXKxv8pDGr6WI7hI7aRjTRol5WzFVsSNuzl3ekCZ0eLIJlEQ==}\n+  /tsx@4.10.2:\n+    resolution: {integrity: sha512-gOfACgv1ElsIjvt7Fp0rMJKGnMGjox0JfGOfX3kmZCV/yZumaNqtHGKBXt1KgaYS9KjDOmqGeI8gHk/W7kWVZg==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tsx to v4.10.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 63e8397..2280b1e 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -49,7 +49,7 @@ dependencies:\n     version: 0.10.1(typescript@5.4.5)(zod@3.23.8)\n   '@tanstack/react-table':\n     specifier: ^8.16.0\n-    version: 8.16.0(react-dom@18.3.1)(react@18.3.1)\n+    version: 8.17.0(react-dom@18.3.1)(react@18.3.1)\n   class-variance-authority:\n     specifier: ^0.7.0\n     version: 0.7.0\n@@ -2278,8 +2278,8 @@ packages:\n       zod: 3.23.8\n     dev: false\n \n-  /@tanstack/react-table@8.16.0(react-dom@18.3.1)(react@18.3.1):\n-    resolution: {integrity: sha512-rKRjnt8ostqN2fercRVOIH/dq7MAmOENCMvVlKx6P9Iokhh6woBGnIZEkqsY/vEJf1jN3TqLOb34xQGLVRuhAg==}\n+  /@tanstack/react-table@8.17.0(react-dom@18.3.1)(react@18.3.1):\n+    resolution: {integrity: sha512-LSJxTDzlKGs8EN7/UHB1l3yLR9HUIxoHFkTbTjHaUUGL4kgYZFYhsQsdDJSIykG86qpIA/6gSWmtwNfy5Iprhw==}\n     engines: {node: '>=12'}\n     peerDependencies:\n       react: '>=16.8'",
    "output": "fix(deps): update dependency @tanstack/react-table to v8.17.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 120af8e..63e8397 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -177,7 +177,7 @@ devDependencies:\n     version: 3.4.3\n   tsx:\n     specifier: ^4.10.0\n-    version: 4.10.0\n+    version: 4.10.1\n   typescript:\n     specifier: ^5.4.5\n     version: 5.4.5\n@@ -5720,8 +5720,8 @@ packages:\n     resolution: {integrity: sha512-AEYxH93jGFPn/a2iVAwW87VuUIkR1FVUKB77NwMF7nBTDkDrrT/Hpt/IrCJ0QXhW27jTBDcf5ZY7w6RiqTMw2Q==}\n     dev: false\n \n-  /tsx@4.10.0:\n-    resolution: {integrity: sha512-Ct/j4Yv49EFlr1z5CT++ld+BUhjLRLtimE4hIDaW9zEVIp3xJOQdTDAan+KEXeme7GcYIGzFD421Zcqf9dHomw==}\n+  /tsx@4.10.1:\n+    resolution: {integrity: sha512-G+CcyTOopwhuI81FU+KpzGN5UBhHgGEDlGt8mHAXKxv8pDGr6WI7hI7aRjTRol5WzFVsSNuzl3ekCZ0eLIJlEQ==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tsx to v4.10.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 21f7684..120af8e 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -171,7 +171,7 @@ devDependencies:\n     version: 0.5.14(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.2.5)\n   rimraf:\n     specifier: ^5.0.6\n-    version: 5.0.6\n+    version: 5.0.7\n   tailwindcss:\n     specifier: ^3.4.3\n     version: 3.4.3\n@@ -4064,6 +4064,18 @@ packages:\n       minipass: 7.1.1\n       path-scurry: 1.11.0\n \n+  /glob@10.3.15:\n+    resolution: {integrity: sha512-0c6RlJt1TICLyvJYIApxb8GsXoai0KUP7AxKKAtsYXdgJR1mGEUa7DgwShbdk1nly0PYoZj01xd4hzbq3fsjpw==}\n+    engines: {node: '>=16 || 14 >=14.18'}\n+    hasBin: true\n+    dependencies:\n+      foreground-child: 3.1.1\n+      jackspeak: 2.3.6\n+      minimatch: 9.0.4\n+      minipass: 7.1.1\n+      path-scurry: 1.11.1\n+    dev: true\n+\n   /glob@7.2.3:\n     resolution: {integrity: sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==}\n     dependencies:\n@@ -4860,6 +4872,14 @@ packages:\n       lru-cache: 10.2.2\n       minipass: 7.1.1\n \n+  /path-scurry@1.11.1:\n+    resolution: {integrity: sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==}\n+    engines: {node: '>=16 || 14 >=14.18'}\n+    dependencies:\n+      lru-cache: 10.2.2\n+      minipass: 7.1.1\n+    dev: true\n+\n   /path-type@4.0.0:\n     resolution: {integrity: sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==}\n     engines: {node: '>=8'}\n@@ -5283,12 +5303,12 @@ packages:\n       glob: 7.2.3\n     dev: true\n \n-  /rimraf@5.0.6:\n-    resolution: {integrity: sha512-X72SgyOf+1lFnGM6gYcmZ4+jMOwuT4E4SajKQzUIlI7EoR5eFHMhS/wf8Ll0mN+w2bxcIVldrJQ6xT7HFQywjg==}\n-    engines: {node: '>=14'}\n+  /rimraf@5.0.7:\n+    resolution: {integrity: sha512-nV6YcJo5wbLW77m+8KjH8aB/7/rxQy9SZ0HY5shnwULfS+9nmTtVXAJET5NdZmCzA4fPI/Hm1wo/Po/4mopOdg==}\n+    engines: {node: '>=14.18'}\n     hasBin: true\n     dependencies:\n-      glob: 10.3.14\n+      glob: 10.3.15\n     dev: true\n \n   /run-parallel@1.2.0:",
    "output": "chore(deps): update dependency rimraf to v5.0.7"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex e6ca2c3..deac142 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -177,7 +177,7 @@ devDependencies:\n     version: 3.4.3\n   tsx:\n     specifier: ^4.7.2\n-    version: 4.9.4\n+    version: 4.10.0\n   typescript:\n     specifier: ^5.4.5\n     version: 5.4.5\n@@ -5777,8 +5777,8 @@ packages:\n     resolution: {integrity: sha512-AEYxH93jGFPn/a2iVAwW87VuUIkR1FVUKB77NwMF7nBTDkDrrT/Hpt/IrCJ0QXhW27jTBDcf5ZY7w6RiqTMw2Q==}\n     dev: false\n \n-  /tsx@4.9.4:\n-    resolution: {integrity: sha512-TlSJTVn2taGGDgdV3jAqCj7WQ/CafCB5p4SbG7W2Bl/0AJWH1ShJlBbc0y2lOFTjQEVAAULSTlmehw/Mwv3S/Q==}\n+  /tsx@4.10.0:\n+    resolution: {integrity: sha512-Ct/j4Yv49EFlr1z5CT++ld+BUhjLRLtimE4hIDaW9zEVIp3xJOQdTDAan+KEXeme7GcYIGzFD421Zcqf9dHomw==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tsx to v4.10.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex fccbfde..ecc92c9 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -177,7 +177,7 @@ devDependencies:\n     version: 3.4.3\n   tsx:\n     specifier: ^4.7.2\n-    version: 4.9.2\n+    version: 4.9.4\n   typescript:\n     specifier: ^5.4.5\n     version: 5.4.5\n@@ -396,7 +396,7 @@ packages:\n     resolution: {integrity: sha512-FxEMIkJKnodyA1OaCUoEvbYRkoZlLZ4d/eXFu9Fh8CbBBgP5EmZxrfTRyN0qpXZ4vOvqnE5YdRdcrmUUXuU+dA==}\n     dependencies:\n       '@esbuild-kit/core-utils': 3.3.2\n-      get-tsconfig: 4.7.4\n+      get-tsconfig: 4.7.5\n     dev: true\n \n   /@esbuild/aix-ppc64@0.19.12:\n@@ -3633,7 +3633,7 @@ packages:\n       eslint-module-utils: 2.8.1(@typescript-eslint/parser@7.2.0)(eslint-import-resolver-node@0.3.9)(eslint-import-resolver-typescript@3.6.1)(eslint@8.57.0)\n       eslint-plugin-import: 2.29.1(@typescript-eslint/parser@7.8.0)(eslint@8.57.0)\n       fast-glob: 3.3.2\n-      get-tsconfig: 4.7.3\n+      get-tsconfig: 4.7.5\n       is-core-module: 2.13.1\n       is-glob: 4.0.3\n     transitivePeerDependencies:\n@@ -4068,14 +4068,8 @@ packages:\n       get-intrinsic: 1.2.4\n     dev: true\n \n-  /get-tsconfig@4.7.3:\n-    resolution: {integrity: sha512-ZvkrzoUA0PQZM6fy6+/Hce561s+faD1rsNwhnO5FelNjyy7EMGJ3Rz1AQ8GYDWjhRs/7dBLOEJvhK8MiEJOAFg==}\n-    dependencies:\n-      resolve-pkg-maps: 1.0.0\n-    dev: true\n-\n-  /get-tsconfig@4.7.4:\n-    resolution: {integrity: sha512-ofbkKj+0pjXjhejr007J/fLf+sW+8H7K5GCm+msC8q3IpvgjobpyPqSRFemNyIMxklC0zeJpi7VDFna19FacvQ==}\n+  /get-tsconfig@4.7.5:\n+    resolution: {integrity: sha512-ZCuZCnlqNzjb4QprAzXKdpp/gh6KTxSJuw3IBsPnV/7fV4NxC9ckB+vPTt8w7fJA0TaSD7c55BR47JD6MEDyDw==}\n     dependencies:\n       resolve-pkg-maps: 1.0.0\n     dev: true\n@@ -5783,13 +5777,13 @@ packages:\n     resolution: {integrity: sha512-AEYxH93jGFPn/a2iVAwW87VuUIkR1FVUKB77NwMF7nBTDkDrrT/Hpt/IrCJ0QXhW27jTBDcf5ZY7w6RiqTMw2Q==}\n     dev: false\n \n-  /tsx@4.9.2:\n-    resolution: {integrity: sha512-D2UoeJ8nBsrqQyMrikW5X9CaelelZTx/5Nm8l94NhDAOsv6dkcEoFOq7232upStYPuEE5Z4I8IpYi4RomDzKKw==}\n+  /tsx@4.9.4:\n+    resolution: {integrity: sha512-TlSJTVn2taGGDgdV3jAqCj7WQ/CafCB5p4SbG7W2Bl/0AJWH1ShJlBbc0y2lOFTjQEVAAULSTlmehw/Mwv3S/Q==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:\n       esbuild: 0.20.2\n-      get-tsconfig: 4.7.3\n+      get-tsconfig: 4.7.5\n     optionalDependencies:\n       fsevents: 2.3.3\n     dev: true",
    "output": "chore(deps): update dependency tsx to v4.9.4"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/app/_components/tasks-table.tsx b/src/app/_components/tasks-table.tsx\nindex bf34e23..ce46d60 100644\n--- a/src/app/_components/tasks-table.tsx\n+++ b/src/app/_components/tasks-table.tsx\n@@ -80,7 +80,14 @@ export function TasksTable({ tasksPromise }: TasksTableProps) {\n   })\n \n   return (\n-    <div className=\"w-full space-y-2.5 overflow-auto\">\n+    <DataTable\n+      table={table}\n+      floatingBar={\n+        featureFlags.includes(\"floatingBar\") ? (\n+          <TasksTableFloatingBar table={table} />\n+        ) : null\n+      }\n+    >\n       {featureFlags.includes(\"advancedFilter\") ? (\n         <DataTableAdvancedToolbar table={table} filterFields={filterFields}>\n           <TasksTableToolbarActions table={table} />\n@@ -90,14 +97,6 @@ export function TasksTable({ tasksPromise }: TasksTableProps) {\n           <TasksTableToolbarActions table={table} />\n         </DataTableToolbar>\n       )}\n-      <DataTable\n-        table={table}\n-        floatingBar={\n-          featureFlags.includes(\"floatingBar\") ? (\n-            <TasksTableFloatingBar table={table} />\n-          ) : null\n-        }\n-      />\n-    </div>\n+    </DataTable>\n   )\n }\ndiff --git a/src/components/data-table/data-table.tsx b/src/components/data-table/data-table.tsx\nindex ec9dcff..5558024 100644\n--- a/src/components/data-table/data-table.tsx\n+++ b/src/components/data-table/data-table.tsx\n@@ -1,6 +1,7 @@\n import * as React from \"react\"\n import { flexRender, type Table as TanstackTable } from \"@tanstack/react-table\"\n \n+import { cn } from \"@/lib/utils\"\n import {\n   Table,\n   TableBody,\n@@ -9,10 +10,9 @@ import {\n   TableHeader,\n   TableRow,\n } from \"@/components/ui/table\"\n+import { DataTablePagination } from \"@/components/data-table/data-table-pagination\"\n \n-import { DataTablePagination } from \"./data-table-pagination\"\n-\n-interface DataTableProps<TData> {\n+interface DataTableProps<TData> extends React.HTMLAttributes<HTMLDivElement> {\n   /**\n    * The table instance returned from useDataTable hook with pagination, sorting, filtering, etc.\n    * @type TanstackTable<TData>\n@@ -31,9 +31,16 @@ interface DataTableProps<TData> {\n export function DataTable<TData>({\n   table,\n   floatingBar = null,\n+  children,\n+  className,\n+  ...props\n }: DataTableProps<TData>) {\n   return (\n-    <div className=\"w-full space-y-2.5 overflow-auto\">\n+    <div\n+      className={cn(\"w-full space-y-2.5 overflow-auto\", className)}\n+      {...props}\n+    >\n+      {children}\n       <div className=\"rounded-md border\">\n         <Table>\n           <TableHeader>",
    "output": "feat: pass toolbar as children"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 42ad36f..3fa5538 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -46,7 +46,7 @@ dependencies:\n     version: 1.0.7(@types/react-dom@18.3.0)(@types/react@18.3.1)(react-dom@18.3.1)(react@18.3.1)\n   '@t3-oss/env-nextjs':\n     specifier: ^0.10.0\n-    version: 0.10.1(typescript@5.4.5)(zod@3.23.7)\n+    version: 0.10.1(typescript@5.4.5)(zod@3.23.8)\n   '@tanstack/react-table':\n     specifier: ^8.16.0\n     version: 8.16.0(react-dom@18.3.1)(react@18.3.1)\n@@ -106,7 +106,7 @@ dependencies:\n     version: 1.0.7(tailwindcss@3.4.3)\n   zod:\n     specifier: ^3.22.4\n-    version: 3.23.7\n+    version: 3.23.8\n \n devDependencies:\n   '@faker-js/faker':\n@@ -1086,14 +1086,14 @@ packages:\n     engines: {node: '>=18.14.1'}\n     dev: true\n \n-  /@hono/zod-validator@0.2.1(hono@4.3.2)(zod@3.23.7):\n+  /@hono/zod-validator@0.2.1(hono@4.3.2)(zod@3.23.8):\n     resolution: {integrity: sha512-HFoxln7Q6JsE64qz2WBS28SD33UB2alp3aRKmcWnNLDzEL1BLsWfbdX6e1HIiUprHYTIXf5y7ax8eYidKUwyaA==}\n     peerDependencies:\n       hono: '>=3.9.0'\n       zod: ^3.19.1\n     dependencies:\n       hono: 4.3.2\n-      zod: 3.23.7\n+      zod: 3.23.8\n     dev: true\n \n   /@hookform/resolvers@3.3.4(react-hook-form@7.51.4):\n@@ -2271,7 +2271,7 @@ packages:\n       tslib: 2.6.2\n     dev: false\n \n-  /@t3-oss/env-core@0.10.1(typescript@5.4.5)(zod@3.23.7):\n+  /@t3-oss/env-core@0.10.1(typescript@5.4.5)(zod@3.23.8):\n     resolution: {integrity: sha512-GcKZiCfWks5CTxhezn9k5zWX3sMDIYf6Kaxy2Gx9YEQftFcz8hDRN56hcbylyAO3t4jQnQ5ifLawINsNgCDpOg==}\n     peerDependencies:\n       typescript: '>=5.0.0'\n@@ -2281,10 +2281,10 @@ packages:\n         optional: true\n     dependencies:\n       typescript: 5.4.5\n-      zod: 3.23.7\n+      zod: 3.23.8\n     dev: false\n \n-  /@t3-oss/env-nextjs@0.10.1(typescript@5.4.5)(zod@3.23.7):\n+  /@t3-oss/env-nextjs@0.10.1(typescript@5.4.5)(zod@3.23.8):\n     resolution: {integrity: sha512-iy2qqJLnFh1RjEWno2ZeyTu0ufomkXruUsOZludzDIroUabVvHsrSjtkHqwHp1/pgPUzN3yBRHMILW162X7x2Q==}\n     peerDependencies:\n       typescript: '>=5.0.0'\n@@ -2293,9 +2293,9 @@ packages:\n       typescript:\n         optional: true\n     dependencies:\n-      '@t3-oss/env-core': 0.10.1(typescript@5.4.5)(zod@3.23.7)\n+      '@t3-oss/env-core': 0.10.1(typescript@5.4.5)(zod@3.23.8)\n       typescript: 5.4.5\n-      zod: 3.23.7\n+      zod: 3.23.8\n     dev: false\n \n   /@tanstack/react-table@8.16.0(react-dom@18.3.1)(react@18.3.1):\n@@ -3179,7 +3179,7 @@ packages:\n     dependencies:\n       '@esbuild-kit/esm-loader': 2.6.5\n       '@hono/node-server': 1.11.1\n-      '@hono/zod-validator': 0.2.1(hono@4.3.2)(zod@3.23.7)\n+      '@hono/zod-validator': 0.2.1(hono@4.3.2)(zod@3.23.8)\n       camelcase: 7.0.1\n       chalk: 5.3.0\n       commander: 9.5.0\n@@ -3193,7 +3193,7 @@ packages:\n       minimatch: 7.4.6\n       semver: 7.6.0\n       superjson: 2.2.1\n-      zod: 3.23.7\n+      zod: 3.23.8\n     transitivePeerDependencies:\n       - supports-color\n     dev: true\n@@ -6023,5 +6023,5 @@ packages:\n     engines: {node: '>=10'}\n     dev: true\n \n-  /zod@3.23.7:\n-    resolution: {integrity: sha512-NBeIoqbtOiUMomACV/y+V3Qfs9+Okr18vR5c/5pHClPpufWOrsx8TENboDPe265lFdfewX2yBtNTLPvnmCxwog==}\n+  /zod@3.23.8:\n+    resolution: {integrity: sha512-XBx9AXhXktjUqnepgTiE5flcKIYWi/rme0Eaj+5Y0lftuGBq+jyRu/md4WnuxqgP1ubdpNCsYEYPxrzVHD8d6g==}",
    "output": "fix(deps): update dependency zod to v3.23.8"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 34245da..42ad36f 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -123,7 +123,7 @@ devDependencies:\n     version: 8.56.10\n   '@types/node':\n     specifier: ^20.12.7\n-    version: 20.12.9\n+    version: 20.12.11\n   '@types/react':\n     specifier: ^18.2.79\n     version: 18.3.1\n@@ -2338,8 +2338,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.12.9:\n-    resolution: {integrity: sha512-o93r47yu04MHumPBCFg0bMPBMNgtMg3jzbhl7e68z50+BMHmRMGDJv13eBlUgOdc9i/uoJXGMGYLtJV4ReTXEg==}\n+  /@types/node@20.12.11:\n+    resolution: {integrity: sha512-vDg9PZ/zi+Nqp6boSOT7plNuthRugEKixDv5sFTIpkE89MmNtEArAShI4mxuX2+UrLEe9pxC1vm2cjm9YlWbJw==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.12.11"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex a72c9e9..654a9ca 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -46,7 +46,7 @@ dependencies:\n     version: 1.0.7(@types/react-dom@18.3.0)(@types/react@18.3.1)(react-dom@18.3.1)(react@18.3.1)\n   '@t3-oss/env-nextjs':\n     specifier: ^0.10.0\n-    version: 0.10.1(typescript@5.4.5)(zod@3.23.6)\n+    version: 0.10.1(typescript@5.4.5)(zod@3.23.7)\n   '@tanstack/react-table':\n     specifier: ^8.16.0\n     version: 8.16.0(react-dom@18.3.1)(react@18.3.1)\n@@ -106,7 +106,7 @@ dependencies:\n     version: 1.0.7(tailwindcss@3.4.3)\n   zod:\n     specifier: ^3.22.4\n-    version: 3.23.6\n+    version: 3.23.7\n \n devDependencies:\n   '@faker-js/faker':\n@@ -1086,14 +1086,14 @@ packages:\n     engines: {node: '>=18.14.1'}\n     dev: true\n \n-  /@hono/zod-validator@0.2.1(hono@4.3.2)(zod@3.23.6):\n+  /@hono/zod-validator@0.2.1(hono@4.3.2)(zod@3.23.7):\n     resolution: {integrity: sha512-HFoxln7Q6JsE64qz2WBS28SD33UB2alp3aRKmcWnNLDzEL1BLsWfbdX6e1HIiUprHYTIXf5y7ax8eYidKUwyaA==}\n     peerDependencies:\n       hono: '>=3.9.0'\n       zod: ^3.19.1\n     dependencies:\n       hono: 4.3.2\n-      zod: 3.23.6\n+      zod: 3.23.7\n     dev: true\n \n   /@hookform/resolvers@3.3.4(react-hook-form@7.51.4):\n@@ -2271,7 +2271,7 @@ packages:\n       tslib: 2.6.2\n     dev: false\n \n-  /@t3-oss/env-core@0.10.1(typescript@5.4.5)(zod@3.23.6):\n+  /@t3-oss/env-core@0.10.1(typescript@5.4.5)(zod@3.23.7):\n     resolution: {integrity: sha512-GcKZiCfWks5CTxhezn9k5zWX3sMDIYf6Kaxy2Gx9YEQftFcz8hDRN56hcbylyAO3t4jQnQ5ifLawINsNgCDpOg==}\n     peerDependencies:\n       typescript: '>=5.0.0'\n@@ -2281,10 +2281,10 @@ packages:\n         optional: true\n     dependencies:\n       typescript: 5.4.5\n-      zod: 3.23.6\n+      zod: 3.23.7\n     dev: false\n \n-  /@t3-oss/env-nextjs@0.10.1(typescript@5.4.5)(zod@3.23.6):\n+  /@t3-oss/env-nextjs@0.10.1(typescript@5.4.5)(zod@3.23.7):\n     resolution: {integrity: sha512-iy2qqJLnFh1RjEWno2ZeyTu0ufomkXruUsOZludzDIroUabVvHsrSjtkHqwHp1/pgPUzN3yBRHMILW162X7x2Q==}\n     peerDependencies:\n       typescript: '>=5.0.0'\n@@ -2293,9 +2293,9 @@ packages:\n       typescript:\n         optional: true\n     dependencies:\n-      '@t3-oss/env-core': 0.10.1(typescript@5.4.5)(zod@3.23.6)\n+      '@t3-oss/env-core': 0.10.1(typescript@5.4.5)(zod@3.23.7)\n       typescript: 5.4.5\n-      zod: 3.23.6\n+      zod: 3.23.7\n     dev: false\n \n   /@tanstack/react-table@8.16.0(react-dom@18.3.1)(react@18.3.1):\n@@ -3179,7 +3179,7 @@ packages:\n     dependencies:\n       '@esbuild-kit/esm-loader': 2.6.5\n       '@hono/node-server': 1.11.1\n-      '@hono/zod-validator': 0.2.1(hono@4.3.2)(zod@3.23.6)\n+      '@hono/zod-validator': 0.2.1(hono@4.3.2)(zod@3.23.7)\n       camelcase: 7.0.1\n       chalk: 5.3.0\n       commander: 9.5.0\n@@ -3193,7 +3193,7 @@ packages:\n       minimatch: 7.4.6\n       semver: 7.6.0\n       superjson: 2.2.1\n-      zod: 3.23.6\n+      zod: 3.23.7\n     transitivePeerDependencies:\n       - supports-color\n     dev: true\n@@ -6023,5 +6023,5 @@ packages:\n     engines: {node: '>=10'}\n     dev: true\n \n-  /zod@3.23.6:\n-    resolution: {integrity: sha512-RTHJlZhsRbuA8Hmp/iNL7jnfc4nZishjsanDAfEY1QpDQZCahUp3xDzl+zfweE9BklxMUcgBgS1b7Lvie/ZVwA==}\n+  /zod@3.23.7:\n+    resolution: {integrity: sha512-NBeIoqbtOiUMomACV/y+V3Qfs9+Okr18vR5c/5pHClPpufWOrsx8TENboDPe265lFdfewX2yBtNTLPvnmCxwog==}",
    "output": "fix(deps): update dependency zod to v3.23.7"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 01864b2..a72c9e9 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -141,7 +141,7 @@ devDependencies:\n     version: 10.4.19(postcss@8.4.38)\n   dotenv-cli:\n     specifier: ^7.4.1\n-    version: 7.4.1\n+    version: 7.4.2\n   drizzle-kit:\n     specifier: ^0.20.14\n     version: 0.20.18\n@@ -3146,8 +3146,8 @@ packages:\n       esutils: 2.0.3\n     dev: true\n \n-  /dotenv-cli@7.4.1:\n-    resolution: {integrity: sha512-fE1aywjRrWGxV3miaiUr3d2zC/VAiuzEGghi+QzgIA9fEf/M5hLMaRSXb4IxbUAwGmaLi0IozdZddnVU96acag==}\n+  /dotenv-cli@7.4.2:\n+    resolution: {integrity: sha512-SbUj8l61zIbzyhIbg0FwPJq6+wjbzdn9oEtozQpZ6kW2ihCcapKVZj49oCT3oPM+mgQm+itgvUQcG5szxVrZTA==}\n     hasBin: true\n     dependencies:\n       cross-spawn: 7.0.3",
    "output": "chore(deps): update dependency dotenv-cli to v7.4.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex bc11657..61b29b2 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -123,7 +123,7 @@ devDependencies:\n     version: 8.56.10\n   '@types/node':\n     specifier: ^20.12.7\n-    version: 20.12.8\n+    version: 20.12.9\n   '@types/react':\n     specifier: ^18.2.79\n     version: 18.3.1\n@@ -2338,8 +2338,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.12.8:\n-    resolution: {integrity: sha512-NU0rJLJnshZWdE/097cdCBbyW1h4hEg0xpovcoAQYHl8dnEyp/NAOiE45pvc+Bd1Dt+2r94v2eGFpQJ4R7g+2w==}\n+  /@types/node@20.12.9:\n+    resolution: {integrity: sha512-o93r47yu04MHumPBCFg0bMPBMNgtMg3jzbhl7e68z50+BMHmRMGDJv13eBlUgOdc9i/uoJXGMGYLtJV4ReTXEg==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.12.9"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex df5b81d..a54a838 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -177,7 +177,7 @@ devDependencies:\n     version: 3.4.3\n   tsx:\n     specifier: ^4.7.2\n-    version: 4.9.1\n+    version: 4.9.2\n   typescript:\n     specifier: ^5.4.5\n     version: 5.4.5\n@@ -5777,8 +5777,8 @@ packages:\n     resolution: {integrity: sha512-AEYxH93jGFPn/a2iVAwW87VuUIkR1FVUKB77NwMF7nBTDkDrrT/Hpt/IrCJ0QXhW27jTBDcf5ZY7w6RiqTMw2Q==}\n     dev: false\n \n-  /tsx@4.9.1:\n-    resolution: {integrity: sha512-CqSJaYyZ6GEqnGtPuMPQHvUwRGU6VHSVF+RDxoOmRg/XD4aF0pD973tKhoUYGQtdcoCHcSOGk34ioFaP+vYcMQ==}\n+  /tsx@4.9.2:\n+    resolution: {integrity: sha512-D2UoeJ8nBsrqQyMrikW5X9CaelelZTx/5Nm8l94NhDAOsv6dkcEoFOq7232upStYPuEE5Z4I8IpYi4RomDzKKw==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tsx to v4.9.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex d27c608..c3f2784 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -177,7 +177,7 @@ devDependencies:\n     version: 3.4.3\n   tsx:\n     specifier: ^4.7.2\n-    version: 4.9.0\n+    version: 4.9.1\n   typescript:\n     specifier: ^5.4.5\n     version: 5.4.5\n@@ -5777,8 +5777,8 @@ packages:\n     resolution: {integrity: sha512-AEYxH93jGFPn/a2iVAwW87VuUIkR1FVUKB77NwMF7nBTDkDrrT/Hpt/IrCJ0QXhW27jTBDcf5ZY7w6RiqTMw2Q==}\n     dev: false\n \n-  /tsx@4.9.0:\n-    resolution: {integrity: sha512-UY0UUhDPL6MkqkZU4xTEjEBOLfV+RIt4xeeJ1qwK73xai4/zveG+X6+tieILa7rjtegUW2LE4p7fw7gAoLuytA==}\n+  /tsx@4.9.1:\n+    resolution: {integrity: sha512-CqSJaYyZ6GEqnGtPuMPQHvUwRGU6VHSVF+RDxoOmRg/XD4aF0pD973tKhoUYGQtdcoCHcSOGk34ioFaP+vYcMQ==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tsx to v4.9.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 4f7cd5c..d27c608 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -7,7 +7,7 @@ settings:\n dependencies:\n   '@hookform/resolvers':\n     specifier: ^3.3.4\n-    version: 3.3.4(react-hook-form@7.51.3)\n+    version: 3.3.4(react-hook-form@7.51.4)\n   '@radix-ui/react-checkbox':\n     specifier: ^1.0.4\n     version: 1.0.4(@types/react-dom@18.3.0)(@types/react@18.3.1)(react-dom@18.3.1)(react@18.3.1)\n@@ -91,7 +91,7 @@ dependencies:\n     version: 18.3.1(react@18.3.1)\n   react-hook-form:\n     specifier: ^7.51.3\n-    version: 7.51.3(react@18.3.1)\n+    version: 7.51.4(react@18.3.1)\n   server-only:\n     specifier: ^0.0.1\n     version: 0.0.1\n@@ -1096,12 +1096,12 @@ packages:\n       zod: 3.23.6\n     dev: true\n \n-  /@hookform/resolvers@3.3.4(react-hook-form@7.51.3):\n+  /@hookform/resolvers@3.3.4(react-hook-form@7.51.4):\n     resolution: {integrity: sha512-o5cgpGOuJYrd+iMKvkttOclgwRW86EsWJZZRC23prf0uU2i48Htq4PuT73AVb9ionFyZrwYEITuOFGF+BydEtQ==}\n     peerDependencies:\n       react-hook-form: ^7.0.0\n     dependencies:\n-      react-hook-form: 7.51.3(react@18.3.1)\n+      react-hook-form: 7.51.4(react@18.3.1)\n     dev: false\n \n   /@humanwhocodes/config-array@0.11.14:\n@@ -5205,8 +5205,8 @@ packages:\n       scheduler: 0.23.2\n     dev: false\n \n-  /react-hook-form@7.51.3(react@18.3.1):\n-    resolution: {integrity: sha512-cvJ/wbHdhYx8aviSWh28w9ImjmVsb5Y05n1+FW786vEZQJV5STNM0pW6ujS+oiBecb0ARBxJFyAnXj9+GHXACQ==}\n+  /react-hook-form@7.51.4(react@18.3.1):\n+    resolution: {integrity: sha512-V14i8SEkh+V1gs6YtD0hdHYnoL4tp/HX/A45wWQN15CYr9bFRmmRdYStSO5L65lCCZRF+kYiSKhm9alqbcdiVA==}\n     engines: {node: '>=12.22.0'}\n     peerDependencies:\n       react: ^16.8.0 || ^17 || ^18",
    "output": "fix(deps): update dependency react-hook-form to v7.51.4"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 3525dc0..8e120ba 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -177,7 +177,7 @@ devDependencies:\n     version: 3.4.3\n   tsx:\n     specifier: ^4.7.2\n-    version: 4.8.1\n+    version: 4.9.0\n   typescript:\n     specifier: ^5.4.5\n     version: 5.4.5\n@@ -5777,8 +5777,8 @@ packages:\n     resolution: {integrity: sha512-AEYxH93jGFPn/a2iVAwW87VuUIkR1FVUKB77NwMF7nBTDkDrrT/Hpt/IrCJ0QXhW27jTBDcf5ZY7w6RiqTMw2Q==}\n     dev: false\n \n-  /tsx@4.8.1:\n-    resolution: {integrity: sha512-xkdE3/l+gZPHKfcZDCeCrCj2aJS5V8WFF2lPmMfj5ZAPa9RNN74XQsXA6lnPDe3uToGMCZ0ybytLvoP2rv8f5Q==}\n+  /tsx@4.9.0:\n+    resolution: {integrity: sha512-UY0UUhDPL6MkqkZU4xTEjEBOLfV+RIt4xeeJ1qwK73xai4/zveG+X6+tieILa7rjtegUW2LE4p7fw7gAoLuytA==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tsx to v4.9.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 0d62138..3525dc0 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -46,7 +46,7 @@ dependencies:\n     version: 1.0.7(@types/react-dom@18.3.0)(@types/react@18.3.1)(react-dom@18.3.1)(react@18.3.1)\n   '@t3-oss/env-nextjs':\n     specifier: ^0.10.0\n-    version: 0.10.1(typescript@5.4.5)(zod@3.23.5)\n+    version: 0.10.1(typescript@5.4.5)(zod@3.23.6)\n   '@tanstack/react-table':\n     specifier: ^8.16.0\n     version: 8.16.0(react-dom@18.3.1)(react@18.3.1)\n@@ -106,7 +106,7 @@ dependencies:\n     version: 1.0.7(tailwindcss@3.4.3)\n   zod:\n     specifier: ^3.22.4\n-    version: 3.23.5\n+    version: 3.23.6\n \n devDependencies:\n   '@faker-js/faker':\n@@ -1086,14 +1086,14 @@ packages:\n     engines: {node: '>=18.14.1'}\n     dev: true\n \n-  /@hono/zod-validator@0.2.1(hono@4.2.7)(zod@3.23.5):\n+  /@hono/zod-validator@0.2.1(hono@4.2.7)(zod@3.23.6):\n     resolution: {integrity: sha512-HFoxln7Q6JsE64qz2WBS28SD33UB2alp3aRKmcWnNLDzEL1BLsWfbdX6e1HIiUprHYTIXf5y7ax8eYidKUwyaA==}\n     peerDependencies:\n       hono: '>=3.9.0'\n       zod: ^3.19.1\n     dependencies:\n       hono: 4.2.7\n-      zod: 3.23.5\n+      zod: 3.23.6\n     dev: true\n \n   /@hookform/resolvers@3.3.4(react-hook-form@7.51.3):\n@@ -2271,7 +2271,7 @@ packages:\n       tslib: 2.6.2\n     dev: false\n \n-  /@t3-oss/env-core@0.10.1(typescript@5.4.5)(zod@3.23.5):\n+  /@t3-oss/env-core@0.10.1(typescript@5.4.5)(zod@3.23.6):\n     resolution: {integrity: sha512-GcKZiCfWks5CTxhezn9k5zWX3sMDIYf6Kaxy2Gx9YEQftFcz8hDRN56hcbylyAO3t4jQnQ5ifLawINsNgCDpOg==}\n     peerDependencies:\n       typescript: '>=5.0.0'\n@@ -2281,10 +2281,10 @@ packages:\n         optional: true\n     dependencies:\n       typescript: 5.4.5\n-      zod: 3.23.5\n+      zod: 3.23.6\n     dev: false\n \n-  /@t3-oss/env-nextjs@0.10.1(typescript@5.4.5)(zod@3.23.5):\n+  /@t3-oss/env-nextjs@0.10.1(typescript@5.4.5)(zod@3.23.6):\n     resolution: {integrity: sha512-iy2qqJLnFh1RjEWno2ZeyTu0ufomkXruUsOZludzDIroUabVvHsrSjtkHqwHp1/pgPUzN3yBRHMILW162X7x2Q==}\n     peerDependencies:\n       typescript: '>=5.0.0'\n@@ -2293,9 +2293,9 @@ packages:\n       typescript:\n         optional: true\n     dependencies:\n-      '@t3-oss/env-core': 0.10.1(typescript@5.4.5)(zod@3.23.5)\n+      '@t3-oss/env-core': 0.10.1(typescript@5.4.5)(zod@3.23.6)\n       typescript: 5.4.5\n-      zod: 3.23.5\n+      zod: 3.23.6\n     dev: false\n \n   /@tanstack/react-table@8.16.0(react-dom@18.3.1)(react@18.3.1):\n@@ -3179,7 +3179,7 @@ packages:\n     dependencies:\n       '@esbuild-kit/esm-loader': 2.6.5\n       '@hono/node-server': 1.11.0\n-      '@hono/zod-validator': 0.2.1(hono@4.2.7)(zod@3.23.5)\n+      '@hono/zod-validator': 0.2.1(hono@4.2.7)(zod@3.23.6)\n       camelcase: 7.0.1\n       chalk: 5.3.0\n       commander: 9.5.0\n@@ -3193,7 +3193,7 @@ packages:\n       minimatch: 7.4.6\n       semver: 7.6.0\n       superjson: 2.2.1\n-      zod: 3.23.5\n+      zod: 3.23.6\n     transitivePeerDependencies:\n       - supports-color\n     dev: true\n@@ -6017,5 +6017,5 @@ packages:\n     engines: {node: '>=10'}\n     dev: true\n \n-  /zod@3.23.5:\n-    resolution: {integrity: sha512-fkwiq0VIQTksNNA131rDOsVJcns0pfVUjHzLrNBiF/O/Xxb5lQyEXkhZWcJ7npWsYlvs+h0jFWXXy4X46Em1JA==}\n+  /zod@3.23.6:\n+    resolution: {integrity: sha512-RTHJlZhsRbuA8Hmp/iNL7jnfc4nZishjsanDAfEY1QpDQZCahUp3xDzl+zfweE9BklxMUcgBgS1b7Lvie/ZVwA==}",
    "output": "fix(deps): update dependency zod to v3.23.6"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex b92f24f..cbb506e 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -123,7 +123,7 @@ devDependencies:\n     version: 8.56.10\n   '@types/node':\n     specifier: ^20.12.7\n-    version: 20.12.7\n+    version: 20.12.8\n   '@types/react':\n     specifier: ^18.2.79\n     version: 18.3.1\n@@ -2338,8 +2338,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.12.7:\n-    resolution: {integrity: sha512-wq0cICSkRLVaf3UGLMGItu/PtdY7oaXaI/RVU+xliKVOtRna3PRY57ZDfztpDL0n11vfymMUnXv8QwYCO7L1wg==}\n+  /@types/node@20.12.8:\n+    resolution: {integrity: sha512-NU0rJLJnshZWdE/097cdCBbyW1h4hEg0xpovcoAQYHl8dnEyp/NAOiE45pvc+Bd1Dt+2r94v2eGFpQJ4R7g+2w==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.12.8"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 8034cdf..b92f24f 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -64,7 +64,7 @@ dependencies:\n     version: 3.6.0\n   drizzle-orm:\n     specifier: ^0.30.8\n-    version: 0.30.9(@types/react@18.3.1)(pg@8.11.5)(postgres@3.4.4)(react@18.3.1)\n+    version: 0.30.10(@types/react@18.3.1)(pg@8.11.5)(postgres@3.4.4)(react@18.3.1)\n   geist:\n     specifier: ^1.3.0\n     version: 1.3.0(next@14.3.0-canary.33)\n@@ -3198,8 +3198,8 @@ packages:\n       - supports-color\n     dev: true\n \n-  /drizzle-orm@0.30.9(@types/react@18.3.1)(pg@8.11.5)(postgres@3.4.4)(react@18.3.1):\n-    resolution: {integrity: sha512-VOiCFsexErmgqvNCOmbzmqDCZzZsHoz6SkWAjTFxsTr1AllKDbDJ2+GgedLXsXMDgpg/ljDG1zItIFeZtiO2LA==}\n+  /drizzle-orm@0.30.10(@types/react@18.3.1)(pg@8.11.5)(postgres@3.4.4)(react@18.3.1):\n+    resolution: {integrity: sha512-IRy/QmMWw9lAQHpwbUh1b8fcn27S/a9zMIzqea1WNOxK9/4EB8gIo+FZWLiPXzl2n9ixGSv8BhsLZiOppWEwBw==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=3'",
    "output": "fix(deps): update dependency drizzle-orm to v0.30.10"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 9ce7651..8034cdf 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -177,7 +177,7 @@ devDependencies:\n     version: 3.4.3\n   tsx:\n     specifier: ^4.7.2\n-    version: 4.8.0\n+    version: 4.8.1\n   typescript:\n     specifier: ^5.4.5\n     version: 5.4.5\n@@ -5777,8 +5777,8 @@ packages:\n     resolution: {integrity: sha512-AEYxH93jGFPn/a2iVAwW87VuUIkR1FVUKB77NwMF7nBTDkDrrT/Hpt/IrCJ0QXhW27jTBDcf5ZY7w6RiqTMw2Q==}\n     dev: false\n \n-  /tsx@4.8.0:\n-    resolution: {integrity: sha512-lp2y1/L03n7HUMujPgJQ/BwLDT4QEPPY5gBsDohsx54o0d0FqC8uL7QeQwv29ZVrv6S8rH8nzQ5cPn5ry4KBZA==}\n+  /tsx@4.8.1:\n+    resolution: {integrity: sha512-xkdE3/l+gZPHKfcZDCeCrCj2aJS5V8WFF2lPmMfj5ZAPa9RNN74XQsXA6lnPDe3uToGMCZ0ybytLvoP2rv8f5Q==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tsx to v4.8.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 5977802..f612710 100644\n--- a/package.json\n+++ b/package.json\n@@ -88,5 +88,5 @@\n   \"ct3aMetadata\": {\n     \"initVersion\": \"7.23.1\"\n   },\n-  \"packageManager\": \"pnpm@8.9.0\"\n+  \"packageManager\": \"pnpm@8.15.8\"\n }",
    "output": "chore(deps): update pnpm to v8.15.8"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex e97c1f7..21b6502 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -46,7 +46,7 @@ dependencies:\n     version: 1.0.7(@types/react-dom@18.3.0)(@types/react@18.3.1)(react-dom@18.3.1)(react@18.3.1)\n   '@t3-oss/env-nextjs':\n     specifier: ^0.10.0\n-    version: 0.10.1(typescript@5.4.5)(zod@3.23.4)\n+    version: 0.10.1(typescript@5.4.5)(zod@3.23.5)\n   '@tanstack/react-table':\n     specifier: ^8.16.0\n     version: 8.16.0(react-dom@18.3.1)(react@18.3.1)\n@@ -106,7 +106,7 @@ dependencies:\n     version: 1.0.7(tailwindcss@3.4.3)\n   zod:\n     specifier: ^3.22.4\n-    version: 3.23.4\n+    version: 3.23.5\n \n devDependencies:\n   '@faker-js/faker':\n@@ -879,14 +879,14 @@ packages:\n     engines: {node: '>=18.14.1'}\n     dev: true\n \n-  /@hono/zod-validator@0.2.1(hono@4.2.7)(zod@3.23.4):\n+  /@hono/zod-validator@0.2.1(hono@4.2.7)(zod@3.23.5):\n     resolution: {integrity: sha512-HFoxln7Q6JsE64qz2WBS28SD33UB2alp3aRKmcWnNLDzEL1BLsWfbdX6e1HIiUprHYTIXf5y7ax8eYidKUwyaA==}\n     peerDependencies:\n       hono: '>=3.9.0'\n       zod: ^3.19.1\n     dependencies:\n       hono: 4.2.7\n-      zod: 3.23.4\n+      zod: 3.23.5\n     dev: true\n \n   /@hookform/resolvers@3.3.4(react-hook-form@7.51.3):\n@@ -2064,7 +2064,7 @@ packages:\n       tslib: 2.6.2\n     dev: false\n \n-  /@t3-oss/env-core@0.10.1(typescript@5.4.5)(zod@3.23.4):\n+  /@t3-oss/env-core@0.10.1(typescript@5.4.5)(zod@3.23.5):\n     resolution: {integrity: sha512-GcKZiCfWks5CTxhezn9k5zWX3sMDIYf6Kaxy2Gx9YEQftFcz8hDRN56hcbylyAO3t4jQnQ5ifLawINsNgCDpOg==}\n     peerDependencies:\n       typescript: '>=5.0.0'\n@@ -2074,10 +2074,10 @@ packages:\n         optional: true\n     dependencies:\n       typescript: 5.4.5\n-      zod: 3.23.4\n+      zod: 3.23.5\n     dev: false\n \n-  /@t3-oss/env-nextjs@0.10.1(typescript@5.4.5)(zod@3.23.4):\n+  /@t3-oss/env-nextjs@0.10.1(typescript@5.4.5)(zod@3.23.5):\n     resolution: {integrity: sha512-iy2qqJLnFh1RjEWno2ZeyTu0ufomkXruUsOZludzDIroUabVvHsrSjtkHqwHp1/pgPUzN3yBRHMILW162X7x2Q==}\n     peerDependencies:\n       typescript: '>=5.0.0'\n@@ -2086,9 +2086,9 @@ packages:\n       typescript:\n         optional: true\n     dependencies:\n-      '@t3-oss/env-core': 0.10.1(typescript@5.4.5)(zod@3.23.4)\n+      '@t3-oss/env-core': 0.10.1(typescript@5.4.5)(zod@3.23.5)\n       typescript: 5.4.5\n-      zod: 3.23.4\n+      zod: 3.23.5\n     dev: false\n \n   /@tanstack/react-table@8.16.0(react-dom@18.3.1)(react@18.3.1):\n@@ -2972,7 +2972,7 @@ packages:\n     dependencies:\n       '@esbuild-kit/esm-loader': 2.6.5\n       '@hono/node-server': 1.11.0\n-      '@hono/zod-validator': 0.2.1(hono@4.2.7)(zod@3.23.4)\n+      '@hono/zod-validator': 0.2.1(hono@4.2.7)(zod@3.23.5)\n       camelcase: 7.0.1\n       chalk: 5.3.0\n       commander: 9.5.0\n@@ -2986,7 +2986,7 @@ packages:\n       minimatch: 7.4.6\n       semver: 7.6.0\n       superjson: 2.2.1\n-      zod: 3.23.4\n+      zod: 3.23.5\n     transitivePeerDependencies:\n       - supports-color\n     dev: true\n@@ -5777,5 +5777,5 @@ packages:\n     engines: {node: '>=10'}\n     dev: true\n \n-  /zod@3.23.4:\n-    resolution: {integrity: sha512-/AtWOKbBgjzEYYQRNfoGKHObgfAZag6qUJX1VbHo2PRBgS+wfWagEY2mizjfyAPcGesrJOcx/wcl0L9WnVrHFw==}\n+  /zod@3.23.5:\n+    resolution: {integrity: sha512-fkwiq0VIQTksNNA131rDOsVJcns0pfVUjHzLrNBiF/O/Xxb5lQyEXkhZWcJ7npWsYlvs+h0jFWXXy4X46Em1JA==}",
    "output": "fix(deps): update dependency zod to v3.23.5"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/app/_components/tasks-table-floating-bar.tsx b/src/app/_components/tasks-table-floating-bar.tsx\nindex d1e2d3b..7edede3 100644\n--- a/src/app/_components/tasks-table-floating-bar.tsx\n+++ b/src/app/_components/tasks-table-floating-bar.tsx\n@@ -174,7 +174,10 @@ export function TasksTableFloatingBar({ table }: TasksTableFloatingBarProps) {\n                   className=\"size-7 border\"\n                   onClick={() => {\n                     startTransition(() => {\n-                      exportTableToCSV(table, { onlySelected: true })\n+                      exportTableToCSV(table, {\n+                        excludeColumns: [\"select\", \"actions\"],\n+                        onlySelected: true,\n+                      })\n                     })\n                   }}\n                   disabled={isPending}",
    "output": "feat: update floating-bar"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 1d1d97f..5c67ecc 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -180,7 +180,7 @@ devDependencies:\n     version: 3.4.3\n   tsx:\n     specifier: ^4.7.2\n-    version: 4.7.2\n+    version: 4.7.3\n   typescript:\n     specifier: ^5.4.5\n     version: 5.4.5\n@@ -5310,8 +5310,8 @@ packages:\n     resolution: {integrity: sha512-AEYxH93jGFPn/a2iVAwW87VuUIkR1FVUKB77NwMF7nBTDkDrrT/Hpt/IrCJ0QXhW27jTBDcf5ZY7w6RiqTMw2Q==}\n     dev: false\n \n-  /tsx@4.7.2:\n-    resolution: {integrity: sha512-BCNd4kz6fz12fyrgCTEdZHGJ9fWTGeUzXmQysh0RVocDY3h4frk05ZNCXSy4kIenF7y/QnrdiVpTsyNRn6vlAw==}\n+  /tsx@4.7.3:\n+    resolution: {integrity: sha512-+fQnMqIp/jxZEXLcj6WzYy9FhcS5/Dfk8y4AtzJ6ejKcKqmfTF8Gso/jtrzDggCF2zTU20gJa6n8XqPYwDAUYQ==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:",
    "output": "chore(deps): update dependency tsx to v4.7.3"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 71de505..5db95b7 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -153,7 +153,7 @@ devDependencies:\n     version: 8.57.0\n   eslint-config-next:\n     specifier: ^14.2.1\n-    version: 14.2.2(eslint@8.57.0)(typescript@5.4.5)\n+    version: 14.2.3(eslint@8.57.0)(typescript@5.4.5)\n   eslint-config-prettier:\n     specifier: ^9.1.0\n     version: 9.1.0(eslint@8.57.0)\n@@ -972,8 +972,8 @@ packages:\n     resolution: {integrity: sha512-jr902qEpXDofr28/zOiru9iCx6w9RyatGGHswy/Ft8vQiFGC4asbPLjdhsDwWaVxRc5CibrFboTfI/WwgPw6Jg==}\n     dev: false\n \n-  /@next/eslint-plugin-next@14.2.2:\n-    resolution: {integrity: sha512-q+Ec2648JtBpKiu/FSJm8HAsFXlNvioHeBCbTP12T1SGcHYwhqHULSfQgFkPgHDu3kzNp2Kem4J54bK4rPQ5SQ==}\n+  /@next/eslint-plugin-next@14.2.3:\n+    resolution: {integrity: sha512-L3oDricIIjgj1AVnRdRor21gI7mShlSwU/1ZGHmqM3LzHhXXhdkrfeNY5zif25Bi5Dd7fiJHsbhoZCHfXYvlAw==}\n     dependencies:\n       glob: 10.3.10\n     dev: true\n@@ -3130,8 +3130,8 @@ packages:\n     engines: {node: '>=10'}\n     dev: true\n \n-  /eslint-config-next@14.2.2(eslint@8.57.0)(typescript@5.4.5):\n-    resolution: {integrity: sha512-12/uFc0KX+wUs7EDpOUGKMXBXZJiBVGdK5/m/QgXOCg2mQ0bQWoKSWNrCeOg7Vum6Kw1d1TW453W6xh+GbHquw==}\n+  /eslint-config-next@14.2.3(eslint@8.57.0)(typescript@5.4.5):\n+    resolution: {integrity: sha512-ZkNztm3Q7hjqvB1rRlOX8P9E/cXRL9ajRcs8jufEtwMfTVYRqnmtnaSu57QqHyBlovMuiB8LEzfLBkh5RYV6Fg==}\n     peerDependencies:\n       eslint: ^7.23.0 || ^8.0.0\n       typescript: '>=3.3.1'\n@@ -3139,7 +3139,7 @@ packages:\n       typescript:\n         optional: true\n     dependencies:\n-      '@next/eslint-plugin-next': 14.2.2\n+      '@next/eslint-plugin-next': 14.2.3\n       '@rushstack/eslint-patch': 1.10.2\n       '@typescript-eslint/parser': 7.2.0(eslint@8.57.0)(typescript@5.4.5)\n       eslint: 8.57.0",
    "output": "chore(deps): update dependency eslint-config-next to v14.2.3"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/.env.example b/.env.example\nindex 4e86d41..9b0cedc 100644\n--- a/.env.example\n+++ b/.env.example\n@@ -10,7 +10,7 @@\n # should be updated accordingly.\n \n # Database\n-DATABASE_URL=\"postgres://YOUR_POSTGRESSQL_URL\"\n+DATABASE_URL=\"postgres://YOUR_POSTGRESQL_URL\"\n \n # Example:\n # SERVERVAR=\"foo\"",
    "output": "chore: Update .env.example (#263)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex c9140e0..b267747 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -46,7 +46,7 @@ dependencies:\n     version: 1.0.7(@types/react-dom@18.2.25)(@types/react@18.2.79)(react-dom@18.2.0)(react@18.2.0)\n   '@t3-oss/env-nextjs':\n     specifier: ^0.10.0\n-    version: 0.10.1(typescript@5.4.5)(zod@3.23.3)\n+    version: 0.10.1(typescript@5.4.5)(zod@3.23.4)\n   '@tanstack/react-table':\n     specifier: ^8.16.0\n     version: 8.16.0(react-dom@18.2.0)(react@18.2.0)\n@@ -109,7 +109,7 @@ dependencies:\n     version: 1.0.7(tailwindcss@3.4.3)\n   zod:\n     specifier: ^3.22.4\n-    version: 3.23.3\n+    version: 3.23.4\n \n devDependencies:\n   '@faker-js/faker':\n@@ -874,14 +874,14 @@ packages:\n     engines: {node: '>=18.14.1'}\n     dev: true\n \n-  /@hono/zod-validator@0.2.1(hono@4.2.5)(zod@3.23.3):\n+  /@hono/zod-validator@0.2.1(hono@4.2.5)(zod@3.23.4):\n     resolution: {integrity: sha512-HFoxln7Q6JsE64qz2WBS28SD33UB2alp3aRKmcWnNLDzEL1BLsWfbdX6e1HIiUprHYTIXf5y7ax8eYidKUwyaA==}\n     peerDependencies:\n       hono: '>=3.9.0'\n       zod: ^3.19.1\n     dependencies:\n       hono: 4.2.5\n-      zod: 3.23.3\n+      zod: 3.23.4\n     dev: true\n \n   /@hookform/resolvers@3.3.4(react-hook-form@7.51.3):\n@@ -1885,7 +1885,7 @@ packages:\n       tslib: 2.6.2\n     dev: false\n \n-  /@t3-oss/env-core@0.10.1(typescript@5.4.5)(zod@3.23.3):\n+  /@t3-oss/env-core@0.10.1(typescript@5.4.5)(zod@3.23.4):\n     resolution: {integrity: sha512-GcKZiCfWks5CTxhezn9k5zWX3sMDIYf6Kaxy2Gx9YEQftFcz8hDRN56hcbylyAO3t4jQnQ5ifLawINsNgCDpOg==}\n     peerDependencies:\n       typescript: '>=5.0.0'\n@@ -1895,10 +1895,10 @@ packages:\n         optional: true\n     dependencies:\n       typescript: 5.4.5\n-      zod: 3.23.3\n+      zod: 3.23.4\n     dev: false\n \n-  /@t3-oss/env-nextjs@0.10.1(typescript@5.4.5)(zod@3.23.3):\n+  /@t3-oss/env-nextjs@0.10.1(typescript@5.4.5)(zod@3.23.4):\n     resolution: {integrity: sha512-iy2qqJLnFh1RjEWno2ZeyTu0ufomkXruUsOZludzDIroUabVvHsrSjtkHqwHp1/pgPUzN3yBRHMILW162X7x2Q==}\n     peerDependencies:\n       typescript: '>=5.0.0'\n@@ -1907,9 +1907,9 @@ packages:\n       typescript:\n         optional: true\n     dependencies:\n-      '@t3-oss/env-core': 0.10.1(typescript@5.4.5)(zod@3.23.3)\n+      '@t3-oss/env-core': 0.10.1(typescript@5.4.5)(zod@3.23.4)\n       typescript: 5.4.5\n-      zod: 3.23.3\n+      zod: 3.23.4\n     dev: false\n \n   /@tanstack/react-table@8.16.0(react-dom@18.2.0)(react@18.2.0):\n@@ -2764,7 +2764,7 @@ packages:\n     dependencies:\n       '@esbuild-kit/esm-loader': 2.6.5\n       '@hono/node-server': 1.11.0\n-      '@hono/zod-validator': 0.2.1(hono@4.2.5)(zod@3.23.3)\n+      '@hono/zod-validator': 0.2.1(hono@4.2.5)(zod@3.23.4)\n       camelcase: 7.0.1\n       chalk: 5.3.0\n       commander: 9.5.0\n@@ -2778,7 +2778,7 @@ packages:\n       minimatch: 7.4.6\n       semver: 7.6.0\n       superjson: 2.2.1\n-      zod: 3.23.3\n+      zod: 3.23.4\n     transitivePeerDependencies:\n       - supports-color\n     dev: true\n@@ -5574,5 +5574,5 @@ packages:\n     engines: {node: '>=10'}\n     dev: true\n \n-  /zod@3.23.3:\n-    resolution: {integrity: sha512-tPvq1B/2Yu/dh2uAIH2/BhUlUeLIUvAjr6dpL/75I0pCYefHgjhXk1o1Kob3kTU8C7yU1j396jFHlsVWFi9ogg==}\n+  /zod@3.23.4:\n+    resolution: {integrity: sha512-/AtWOKbBgjzEYYQRNfoGKHObgfAZag6qUJX1VbHo2PRBgS+wfWagEY2mizjfyAPcGesrJOcx/wcl0L9WnVrHFw==}",
    "output": "fix(deps): update dependency zod to v3.23.4"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 3fd9e94..a07735f 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -55,7 +55,7 @@ dependencies:\n     version: 0.7.0\n   clsx:\n     specifier: ^2.1.0\n-    version: 2.1.0\n+    version: 2.1.1\n   cmdk:\n     specifier: ^1.0.0\n     version: 1.0.0(@types/react-dom@18.2.25)(@types/react@18.2.79)(react-dom@18.2.0)(react@18.2.0)\n@@ -2526,8 +2526,8 @@ packages:\n     engines: {node: '>=6'}\n     dev: false\n \n-  /clsx@2.1.0:\n-    resolution: {integrity: sha512-m3iNNWpd9rl3jvvcBnu70ylMdrXt8Vlq4HYadnU5fwcOtvkSQWPmj7amUcDT2qYI7risszBjI5AUIUox9D16pg==}\n+  /clsx@2.1.1:\n+    resolution: {integrity: sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==}\n     engines: {node: '>=6'}\n     dev: false\n ",
    "output": "fix(deps): update dependency clsx to v2.1.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 33b7712..3fd9e94 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -46,7 +46,7 @@ dependencies:\n     version: 1.0.7(@types/react-dom@18.2.25)(@types/react@18.2.79)(react-dom@18.2.0)(react@18.2.0)\n   '@t3-oss/env-nextjs':\n     specifier: ^0.10.0\n-    version: 0.10.0(typescript@5.4.5)(zod@3.23.3)\n+    version: 0.10.1(typescript@5.4.5)(zod@3.23.3)\n   '@tanstack/react-table':\n     specifier: ^8.16.0\n     version: 8.16.0(react-dom@18.2.0)(react@18.2.0)\n@@ -1885,8 +1885,8 @@ packages:\n       tslib: 2.6.2\n     dev: false\n \n-  /@t3-oss/env-core@0.10.0(typescript@5.4.5)(zod@3.23.3):\n-    resolution: {integrity: sha512-2NJM7kBPYfxkvLSt0cX4UnQR3YMNOoqHKUWEEbxrqad0R1eqj1j2ZxU4HByQzYW8tBUD+kCSd00xJPoju/WJ1Q==}\n+  /@t3-oss/env-core@0.10.1(typescript@5.4.5)(zod@3.23.3):\n+    resolution: {integrity: sha512-GcKZiCfWks5CTxhezn9k5zWX3sMDIYf6Kaxy2Gx9YEQftFcz8hDRN56hcbylyAO3t4jQnQ5ifLawINsNgCDpOg==}\n     peerDependencies:\n       typescript: '>=5.0.0'\n       zod: ^3.0.0\n@@ -1898,8 +1898,8 @@ packages:\n       zod: 3.23.3\n     dev: false\n \n-  /@t3-oss/env-nextjs@0.10.0(typescript@5.4.5)(zod@3.23.3):\n-    resolution: {integrity: sha512-JMpWF8dyI3ska1wFX92An7Y7AQicRn11be0z10c3TletATvdmFJzazb28VbgAX6fKuXJRRxBoiKNGIdLWVVsig==}\n+  /@t3-oss/env-nextjs@0.10.1(typescript@5.4.5)(zod@3.23.3):\n+    resolution: {integrity: sha512-iy2qqJLnFh1RjEWno2ZeyTu0ufomkXruUsOZludzDIroUabVvHsrSjtkHqwHp1/pgPUzN3yBRHMILW162X7x2Q==}\n     peerDependencies:\n       typescript: '>=5.0.0'\n       zod: ^3.0.0\n@@ -1907,7 +1907,7 @@ packages:\n       typescript:\n         optional: true\n     dependencies:\n-      '@t3-oss/env-core': 0.10.0(typescript@5.4.5)(zod@3.23.3)\n+      '@t3-oss/env-core': 0.10.1(typescript@5.4.5)(zod@3.23.3)\n       typescript: 5.4.5\n       zod: 3.23.3\n     dev: false",
    "output": "fix(deps): update dependency @t3-oss/env-nextjs to v0.10.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/README.md b/README.md\nindex 7031cb4..eba60a6 100644\n--- a/README.md\n+++ b/README.md\n@@ -95,7 +95,7 @@ This is a shadcn table component with server-side sorting, filtering, and pagina\n \n    - **Create Files**: Create `page.tsx` and, if needed, `layout.tsx` in your app directory.\n    - **Copy Directories**: Copy `./_components` and `./_lib` directories into your project.\n-   - **Update Queries/Mutations**: Modify `./_lib/queries.ts`, `./_lib/actions.ts`, and `./_lib/mutations.ts` to match your database operations.\n+   - **Update Queries/Mutations**: Modify `./_lib/queries.ts`, `./_lib/actions.ts`, and `./_lib/client-actions.ts` to match your database operations.\n    - **Update Floating Bar**: Update `./_components/tasks-table-floating-bar.tsx` to match your table's actions (optional).\n    - **Define Table Columns**: Update `./_components/tasks-table-columns.tsx` to define column headers, actions, searchable and filterable columns.\n    - **Setup Data Fetching**: In `./page.tsx`, define `getTasksPromise`, `getTaskCountByStatus`, and `getTaskCountByPriority`.\ndiff --git a/src/app/_components/delete-tasks-dialog.tsx b/src/app/_components/delete-tasks-dialog.tsx\nindex 51a56a0..e7bb8c0 100644\n--- a/src/app/_components/delete-tasks-dialog.tsx\n+++ b/src/app/_components/delete-tasks-dialog.tsx\n@@ -17,7 +17,7 @@ import {\n   DialogTrigger,\n } from \"@/components/ui/dialog\"\n \n-import { deleteTasks } from \"../_lib/mutations\"\n+import { deleteTasks } from \"../_lib/client-actions\"\n \n interface DeleteTasksDialogProps\n   extends React.ComponentPropsWithoutRef<typeof Dialog> {\ndiff --git a/src/app/_components/tasks-table-floating-bar.tsx b/src/app/_components/tasks-table-floating-bar.tsx\nindex 0a05837..c4ad319 100644\n--- a/src/app/_components/tasks-table-floating-bar.tsx\n+++ b/src/app/_components/tasks-table-floating-bar.tsx\n@@ -24,7 +24,7 @@ import {\n } from \"@/components/ui/tooltip\"\n import { Kbd } from \"@/components/kbd\"\n \n-import { deleteTasks, updateTasks } from \"../_lib/mutations\"\n+import { deleteTasks, updateTasks } from \"../_lib/client-actions\"\n \n interface TasksTableFloatingBarProps {\n   table: Table<Task>\ndiff --git a/src/app/_lib/mutations.ts b/src/app/_lib/client-actions.ts\nsimilarity index 100%\nrename from src/app/_lib/mutations.ts\nrename to src/app/_lib/client-actions.ts",
    "output": "refactor: mutations -> client-actions"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/components/data-table/data-table-skeleton.tsx b/src/components/data-table/data-table-skeleton.tsx\nindex 59a363a..165a653 100644\n--- a/src/components/data-table/data-table-skeleton.tsx\n+++ b/src/components/data-table/data-table-skeleton.tsx\n@@ -61,7 +61,7 @@ interface DataTableSkeletonProps extends React.HTMLAttributes<HTMLDivElement> {\n   withPagination?: boolean\n \n   /**\n-   * Flag to prevent the table from shrinking to fit the content.\n+   * Flag to prevent the table cells from shrinking.\n    * @default false\n    * @type boolean | undefined\n    */\ndiff --git a/src/hooks/use-data-table.ts b/src/hooks/use-data-table.ts\nindex 2c011c1..df2b859 100644\n--- a/src/hooks/use-data-table.ts\n+++ b/src/hooks/use-data-table.ts\n@@ -52,9 +52,9 @@ interface UseDataTableProps<TData, TValue> {\n \n   /**\n    * The default sort order.\n-   * @default \"createdAt.desc\"\n+   * @default undefined\n    * @type `${Extract<keyof TData, string | number>}.${\"asc\" | \"desc\"}` | undefined\n-   * @example \"updatedAt.desc\"\n+   * @example \"createdAt.desc\"\n    */\n   defaultSort?: `${Extract<keyof TData, string | number>}.${\"asc\" | \"desc\"}`\n \n@@ -109,7 +109,7 @@ export function useDataTable<TData, TValue>({\n   columns,\n   pageCount,\n   defaultPerPage = 10,\n-  defaultSort = \"createdAt.desc\" as `${Extract<keyof TData, string | number>}.${\"asc\" | \"desc\"}`,\n+  defaultSort,\n   filterFields = [],\n   enableAdvancedFilter = false,\n }: UseDataTableProps<TData, TValue>) {",
    "output": "feat: provide defaultSort option"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex c4e332f..bfa43f4 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -46,7 +46,7 @@ dependencies:\n     version: 1.0.7(@types/react-dom@18.2.25)(@types/react@18.2.79)(react-dom@18.2.0)(react@18.2.0)\n   '@t3-oss/env-nextjs':\n     specifier: ^0.10.0\n-    version: 0.10.0(typescript@5.4.5)(zod@3.23.0)\n+    version: 0.10.0(typescript@5.4.5)(zod@3.23.3)\n   '@tanstack/react-table':\n     specifier: ^8.16.0\n     version: 8.16.0(react-dom@18.2.0)(react@18.2.0)\n@@ -109,7 +109,7 @@ dependencies:\n     version: 1.0.7(tailwindcss@3.4.3)\n   zod:\n     specifier: ^3.22.4\n-    version: 3.23.0\n+    version: 3.23.3\n \n devDependencies:\n   '@faker-js/faker':\n@@ -874,14 +874,14 @@ packages:\n     engines: {node: '>=18.14.1'}\n     dev: true\n \n-  /@hono/zod-validator@0.2.1(hono@4.2.5)(zod@3.23.0):\n+  /@hono/zod-validator@0.2.1(hono@4.2.5)(zod@3.23.3):\n     resolution: {integrity: sha512-HFoxln7Q6JsE64qz2WBS28SD33UB2alp3aRKmcWnNLDzEL1BLsWfbdX6e1HIiUprHYTIXf5y7ax8eYidKUwyaA==}\n     peerDependencies:\n       hono: '>=3.9.0'\n       zod: ^3.19.1\n     dependencies:\n       hono: 4.2.5\n-      zod: 3.23.0\n+      zod: 3.23.3\n     dev: true\n \n   /@hookform/resolvers@3.3.4(react-hook-form@7.51.3):\n@@ -1885,7 +1885,7 @@ packages:\n       tslib: 2.6.2\n     dev: false\n \n-  /@t3-oss/env-core@0.10.0(typescript@5.4.5)(zod@3.23.0):\n+  /@t3-oss/env-core@0.10.0(typescript@5.4.5)(zod@3.23.3):\n     resolution: {integrity: sha512-2NJM7kBPYfxkvLSt0cX4UnQR3YMNOoqHKUWEEbxrqad0R1eqj1j2ZxU4HByQzYW8tBUD+kCSd00xJPoju/WJ1Q==}\n     peerDependencies:\n       typescript: '>=5.0.0'\n@@ -1895,10 +1895,10 @@ packages:\n         optional: true\n     dependencies:\n       typescript: 5.4.5\n-      zod: 3.23.0\n+      zod: 3.23.3\n     dev: false\n \n-  /@t3-oss/env-nextjs@0.10.0(typescript@5.4.5)(zod@3.23.0):\n+  /@t3-oss/env-nextjs@0.10.0(typescript@5.4.5)(zod@3.23.3):\n     resolution: {integrity: sha512-JMpWF8dyI3ska1wFX92An7Y7AQicRn11be0z10c3TletATvdmFJzazb28VbgAX6fKuXJRRxBoiKNGIdLWVVsig==}\n     peerDependencies:\n       typescript: '>=5.0.0'\n@@ -1907,9 +1907,9 @@ packages:\n       typescript:\n         optional: true\n     dependencies:\n-      '@t3-oss/env-core': 0.10.0(typescript@5.4.5)(zod@3.23.0)\n+      '@t3-oss/env-core': 0.10.0(typescript@5.4.5)(zod@3.23.3)\n       typescript: 5.4.5\n-      zod: 3.23.0\n+      zod: 3.23.3\n     dev: false\n \n   /@tanstack/react-table@8.16.0(react-dom@18.2.0)(react@18.2.0):\n@@ -2764,7 +2764,7 @@ packages:\n     dependencies:\n       '@esbuild-kit/esm-loader': 2.6.5\n       '@hono/node-server': 1.11.0\n-      '@hono/zod-validator': 0.2.1(hono@4.2.5)(zod@3.23.0)\n+      '@hono/zod-validator': 0.2.1(hono@4.2.5)(zod@3.23.3)\n       camelcase: 7.0.1\n       chalk: 5.3.0\n       commander: 9.5.0\n@@ -2778,7 +2778,7 @@ packages:\n       minimatch: 7.4.6\n       semver: 7.6.0\n       superjson: 2.2.1\n-      zod: 3.23.0\n+      zod: 3.23.3\n     transitivePeerDependencies:\n       - supports-color\n     dev: true\n@@ -5574,5 +5574,5 @@ packages:\n     engines: {node: '>=10'}\n     dev: true\n \n-  /zod@3.23.0:\n-    resolution: {integrity: sha512-OFLT+LTocvabn6q76BTwVB0hExEBS0IduTr3cqZyMqEDbOnYmcU+y0tUAYbND4uwclpBGi4I4UUBGzylWpjLGA==}\n+  /zod@3.23.3:\n+    resolution: {integrity: sha512-tPvq1B/2Yu/dh2uAIH2/BhUlUeLIUvAjr6dpL/75I0pCYefHgjhXk1o1Kob3kTU8C7yU1j396jFHlsVWFi9ogg==}",
    "output": "fix(deps): update dependency zod to v3.23.3"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex eb815a2..1c89a56 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -46,7 +46,7 @@ dependencies:\n     version: 1.0.7(@types/react-dom@18.2.25)(@types/react@18.2.79)(react-dom@18.2.0)(react@18.2.0)\n   '@t3-oss/env-nextjs':\n     specifier: ^0.10.0\n-    version: 0.10.0(typescript@5.4.5)(zod@3.22.5)\n+    version: 0.10.0(typescript@5.4.5)(zod@3.23.0)\n   '@tanstack/react-table':\n     specifier: ^8.16.0\n     version: 8.16.0(react-dom@18.2.0)(react@18.2.0)\n@@ -109,7 +109,7 @@ dependencies:\n     version: 1.0.7(tailwindcss@3.4.3)\n   zod:\n     specifier: ^3.22.4\n-    version: 3.22.5\n+    version: 3.23.0\n \n devDependencies:\n   '@faker-js/faker':\n@@ -874,14 +874,14 @@ packages:\n     engines: {node: '>=18.14.1'}\n     dev: true\n \n-  /@hono/zod-validator@0.2.1(hono@4.2.5)(zod@3.22.5):\n+  /@hono/zod-validator@0.2.1(hono@4.2.5)(zod@3.23.0):\n     resolution: {integrity: sha512-HFoxln7Q6JsE64qz2WBS28SD33UB2alp3aRKmcWnNLDzEL1BLsWfbdX6e1HIiUprHYTIXf5y7ax8eYidKUwyaA==}\n     peerDependencies:\n       hono: '>=3.9.0'\n       zod: ^3.19.1\n     dependencies:\n       hono: 4.2.5\n-      zod: 3.22.5\n+      zod: 3.23.0\n     dev: true\n \n   /@hookform/resolvers@3.3.4(react-hook-form@7.51.3):\n@@ -1890,7 +1890,7 @@ packages:\n       tslib: 2.6.2\n     dev: false\n \n-  /@t3-oss/env-core@0.10.0(typescript@5.4.5)(zod@3.22.5):\n+  /@t3-oss/env-core@0.10.0(typescript@5.4.5)(zod@3.23.0):\n     resolution: {integrity: sha512-2NJM7kBPYfxkvLSt0cX4UnQR3YMNOoqHKUWEEbxrqad0R1eqj1j2ZxU4HByQzYW8tBUD+kCSd00xJPoju/WJ1Q==}\n     peerDependencies:\n       typescript: '>=5.0.0'\n@@ -1900,10 +1900,10 @@ packages:\n         optional: true\n     dependencies:\n       typescript: 5.4.5\n-      zod: 3.22.5\n+      zod: 3.23.0\n     dev: false\n \n-  /@t3-oss/env-nextjs@0.10.0(typescript@5.4.5)(zod@3.22.5):\n+  /@t3-oss/env-nextjs@0.10.0(typescript@5.4.5)(zod@3.23.0):\n     resolution: {integrity: sha512-JMpWF8dyI3ska1wFX92An7Y7AQicRn11be0z10c3TletATvdmFJzazb28VbgAX6fKuXJRRxBoiKNGIdLWVVsig==}\n     peerDependencies:\n       typescript: '>=5.0.0'\n@@ -1912,9 +1912,9 @@ packages:\n       typescript:\n         optional: true\n     dependencies:\n-      '@t3-oss/env-core': 0.10.0(typescript@5.4.5)(zod@3.22.5)\n+      '@t3-oss/env-core': 0.10.0(typescript@5.4.5)(zod@3.23.0)\n       typescript: 5.4.5\n-      zod: 3.22.5\n+      zod: 3.23.0\n     dev: false\n \n   /@tanstack/react-table@8.16.0(react-dom@18.2.0)(react@18.2.0):\n@@ -2769,7 +2769,7 @@ packages:\n     dependencies:\n       '@esbuild-kit/esm-loader': 2.6.5\n       '@hono/node-server': 1.11.0\n-      '@hono/zod-validator': 0.2.1(hono@4.2.5)(zod@3.22.5)\n+      '@hono/zod-validator': 0.2.1(hono@4.2.5)(zod@3.23.0)\n       camelcase: 7.0.1\n       chalk: 5.3.0\n       commander: 9.5.0\n@@ -2783,7 +2783,7 @@ packages:\n       minimatch: 7.4.6\n       semver: 7.6.0\n       superjson: 2.2.1\n-      zod: 3.22.5\n+      zod: 3.23.0\n     transitivePeerDependencies:\n       - supports-color\n     dev: true\n@@ -5579,5 +5579,5 @@ packages:\n     engines: {node: '>=10'}\n     dev: true\n \n-  /zod@3.22.5:\n-    resolution: {integrity: sha512-HqnGsCdVZ2xc0qWPLdO25WnseXThh0kEYKIdV5F/hTHO75hNZFp8thxSeHhiPrHZKrFTo1SOgkAj9po5bexZlw==}\n+  /zod@3.23.0:\n+    resolution: {integrity: sha512-OFLT+LTocvabn6q76BTwVB0hExEBS0IduTr3cqZyMqEDbOnYmcU+y0tUAYbND4uwclpBGi4I4UUBGzylWpjLGA==}",
    "output": "fix(deps): update dependency zod to v3.23.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 56fda3d..d5f5a85 100644\n--- a/package.json\n+++ b/package.json\n@@ -37,7 +37,7 @@\n     \"@radix-ui/react-toggle\": \"^1.0.3\",\n     \"@radix-ui/react-toggle-group\": \"^1.0.4\",\n     \"@radix-ui/react-tooltip\": \"^1.0.7\",\n-    \"@t3-oss/env-nextjs\": \"^0.9.2\",\n+    \"@t3-oss/env-nextjs\": \"^0.10.0\",\n     \"@tanstack/react-table\": \"^8.16.0\",\n     \"class-variance-authority\": \"^0.7.0\",\n     \"clsx\": \"^2.1.0\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 9e96d2a..eb815a2 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -45,8 +45,8 @@ dependencies:\n     specifier: ^1.0.7\n     version: 1.0.7(@types/react-dom@18.2.25)(@types/react@18.2.79)(react-dom@18.2.0)(react@18.2.0)\n   '@t3-oss/env-nextjs':\n-    specifier: ^0.9.2\n-    version: 0.9.2(typescript@5.4.5)(zod@3.22.5)\n+    specifier: ^0.10.0\n+    version: 0.10.0(typescript@5.4.5)(zod@3.22.5)\n   '@tanstack/react-table':\n     specifier: ^8.16.0\n     version: 8.16.0(react-dom@18.2.0)(react@18.2.0)\n@@ -1890,8 +1890,8 @@ packages:\n       tslib: 2.6.2\n     dev: false\n \n-  /@t3-oss/env-core@0.9.2(typescript@5.4.5)(zod@3.22.5):\n-    resolution: {integrity: sha512-KgWXljUTHgO3o7GMZQPAD5+P+HqpauMNNHowlm7V2b9IeMitSUpNKwG6xQrup/xARWHTdxRVIl0mSI4wCevQhQ==}\n+  /@t3-oss/env-core@0.10.0(typescript@5.4.5)(zod@3.22.5):\n+    resolution: {integrity: sha512-2NJM7kBPYfxkvLSt0cX4UnQR3YMNOoqHKUWEEbxrqad0R1eqj1j2ZxU4HByQzYW8tBUD+kCSd00xJPoju/WJ1Q==}\n     peerDependencies:\n       typescript: '>=5.0.0'\n       zod: ^3.0.0\n@@ -1903,8 +1903,8 @@ packages:\n       zod: 3.22.5\n     dev: false\n \n-  /@t3-oss/env-nextjs@0.9.2(typescript@5.4.5)(zod@3.22.5):\n-    resolution: {integrity: sha512-dklHrgKLESStNVB67Jdbu6osxDYA+xNKaPBRerlnkEvzbCccSKMvZENx6EZebJuR4snqB3/yRykNMn/bdIAyiQ==}\n+  /@t3-oss/env-nextjs@0.10.0(typescript@5.4.5)(zod@3.22.5):\n+    resolution: {integrity: sha512-JMpWF8dyI3ska1wFX92An7Y7AQicRn11be0z10c3TletATvdmFJzazb28VbgAX6fKuXJRRxBoiKNGIdLWVVsig==}\n     peerDependencies:\n       typescript: '>=5.0.0'\n       zod: ^3.0.0\n@@ -1912,7 +1912,7 @@ packages:\n       typescript:\n         optional: true\n     dependencies:\n-      '@t3-oss/env-core': 0.9.2(typescript@5.4.5)(zod@3.22.5)\n+      '@t3-oss/env-core': 0.10.0(typescript@5.4.5)(zod@3.22.5)\n       typescript: 5.4.5\n       zod: 3.22.5\n     dev: false",
    "output": "fix(deps): update dependency @t3-oss/env-nextjs to ^0.10.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 3496f2b..7173038 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -64,7 +64,7 @@ dependencies:\n     version: 3.6.0\n   drizzle-orm:\n     specifier: ^0.30.8\n-    version: 0.30.8(@types/react@18.2.79)(pg@8.11.5)(postgres@3.4.4)(react@18.2.0)\n+    version: 0.30.9(@types/react@18.2.79)(pg@8.11.5)(postgres@3.4.4)(react@18.2.0)\n   geist:\n     specifier: ^1.3.0\n     version: 1.3.0(next@14.3.0-canary.14)\n@@ -2788,8 +2788,8 @@ packages:\n       - supports-color\n     dev: true\n \n-  /drizzle-orm@0.30.8(@types/react@18.2.79)(pg@8.11.5)(postgres@3.4.4)(react@18.2.0):\n-    resolution: {integrity: sha512-9pBJA0IjnpPpzZ6s9jlS1CQAbKoBmbn2GJesPhXaVblAA/joOJ4AWWevYcqvLGj9SvThBAl7WscN8Zwgg5mnTw==}\n+  /drizzle-orm@0.30.9(@types/react@18.2.79)(pg@8.11.5)(postgres@3.4.4)(react@18.2.0):\n+    resolution: {integrity: sha512-VOiCFsexErmgqvNCOmbzmqDCZzZsHoz6SkWAjTFxsTr1AllKDbDJ2+GgedLXsXMDgpg/ljDG1zItIFeZtiO2LA==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=3'",
    "output": "fix(deps): update dependency drizzle-orm to v0.30.9"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/components/kbd.tsx b/src/components/kbd.tsx\nindex 547a773..86af5c6 100644\n--- a/src/components/kbd.tsx\n+++ b/src/components/kbd.tsx\n@@ -4,12 +4,12 @@ import { cva, type VariantProps } from \"class-variance-authority\"\n import { cn } from \"@/lib/utils\"\n \n const kbdVariants = cva(\n-  \"select-none rounded border px-1.5 py-0.5 font-mono text-[0.7rem] font-normal shadow-sm disabled:opacity-50\",\n+  \"select-none rounded border px-1.5 py-px font-mono text-[0.7rem] font-normal shadow-sm disabled:opacity-50\",\n   {\n     variants: {\n       variant: {\n-        default: \"bg-accent\",\n-        outline: \"bg-background\",\n+        default: \"bg-accent text-accent-foreground\",\n+        outline: \"bg-background text-foreground\",\n       },\n     },\n     defaultVariants: {",
    "output": "feat: update kbd"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex c65e0ff..0be47d2 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -147,7 +147,7 @@ devDependencies:\n     version: 7.4.1\n   drizzle-kit:\n     specifier: ^0.20.14\n-    version: 0.20.16\n+    version: 0.20.17\n   eslint:\n     specifier: ^8.57.0\n     version: 8.57.0\n@@ -2763,8 +2763,8 @@ packages:\n       wordwrap: 1.0.0\n     dev: true\n \n-  /drizzle-kit@0.20.16:\n-    resolution: {integrity: sha512-WoqV0XDny8mHnVoLYcUs6H3Ae1HBxeV0zi3VXG/mTahIQYfadZmIc3eRqzXjD3yxemj+GdHI1nThddmsoabdIA==}\n+  /drizzle-kit@0.20.17:\n+    resolution: {integrity: sha512-mLVDS4nXmO09wFVlzGrdshWnAL+U9eQGC5zRs6hTN6Q9arwQGWU2XnZ17I8BM8Quau8CQRx3Ms6VPgRWJFVp7Q==}\n     hasBin: true\n     dependencies:\n       '@esbuild-kit/esm-loader': 2.6.5",
    "output": "chore(deps): update dependency drizzle-kit to v0.20.17"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/README.md b/README.md\nindex c9a480b..7031cb4 100644\n--- a/README.md\n+++ b/README.md\n@@ -98,7 +98,7 @@ This is a shadcn table component with server-side sorting, filtering, and pagina\n    - **Update Queries/Mutations**: Modify `./_lib/queries.ts`, `./_lib/actions.ts`, and `./_lib/mutations.ts` to match your database operations.\n    - **Update Floating Bar**: Update `./_components/tasks-table-floating-bar.tsx` to match your table's actions (optional).\n    - **Define Table Columns**: Update `./_components/tasks-table-columns.tsx` to define column headers, actions, searchable and filterable columns.\n-   - **Setup Data Fetching**: In `./page.tsx`, define `getTasksPromise` for use in `./_components/tasks-table.tsx`.\n+   - **Setup Data Fetching**: In `./page.tsx`, define `getTasksPromise`, `getTaskCountByStatus`, and `getTaskCountByPriority`.\n    - **Fetch Data**: In `./_components/tasks-table.tsx`, consume the `getTasksPromise` promise using the `React.use` hook. The promise is passed to trigger the `suspense` boundary.\n    - **Memoize Table Columns**: In `./_components/tasks-table.tsx`, memoize columns defined in `./_components/tasks-table-columns.tsx` using `React.useMemo` hook to prevent unnecessary re-renders.\n    - **Use Data Table Hook**: In `./_components/tasks-table.tsx`, call `./hooks/useTasksTable.tsx` hook to handle server-side pagination, sorting, and filtering.\ndiff --git a/src/app/page.tsx b/src/app/page.tsx\nindex dfba088..96e5fc0 100644\n--- a/src/app/page.tsx\n+++ b/src/app/page.tsx\n@@ -28,7 +28,7 @@ export default async function IndexPage({ searchParams }: IndexPageProps) {\n   ])\n \n   return (\n-    <Shell className=\"gap-2 overflow-hidden\">\n+    <Shell className=\"gap-2\">\n       {/**\n        * The `TasksTableProvider` is use to enable some feature flags for the `TasksTable` component.\n        * Feel free to remove this, as it's not required for the `TasksTable` component to work.",
    "output": "feat: update table again"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/app/_components/tasks-table-floating-bar.tsx b/src/app/_components/tasks-table-floating-bar.tsx\nindex 87bf031..0a05837 100644\n--- a/src/app/_components/tasks-table-floating-bar.tsx\n+++ b/src/app/_components/tasks-table-floating-bar.tsx\n@@ -22,6 +22,7 @@ import {\n   TooltipContent,\n   TooltipTrigger,\n } from \"@/components/ui/tooltip\"\n+import { Kbd } from \"@/components/kbd\"\n \n import { deleteTasks, updateTasks } from \"../_lib/mutations\"\n \n@@ -71,9 +72,9 @@ export function TasksTableFloatingBar({ table }: TasksTableFloatingBarProps) {\n               </TooltipTrigger>\n               <TooltipContent className=\"flex items-center border bg-accent font-semibold text-foreground dark:bg-zinc-900\">\n                 <p className=\"mr-2\">Clear selection</p>\n-                <kbd className=\"rounded-sm border bg-background px-1 py-px text-[0.7rem]\">\n+                <Kbd abbrTitle=\"Escape\" variant=\"outline\">\n                   Esc\n-                </kbd>\n+                </Kbd>\n               </TooltipContent>\n             </Tooltip>\n           </div>\ndiff --git a/src/components/kbd.tsx b/src/components/kbd.tsx\nnew file mode 100644\nindex 0000000..547a773\n--- /dev/null\n+++ b/src/components/kbd.tsx\n@@ -0,0 +1,54 @@\n+import * as React from \"react\"\n+import { cva, type VariantProps } from \"class-variance-authority\"\n+\n+import { cn } from \"@/lib/utils\"\n+\n+const kbdVariants = cva(\n+  \"select-none rounded border px-1.5 py-0.5 font-mono text-[0.7rem] font-normal shadow-sm disabled:opacity-50\",\n+  {\n+    variants: {\n+      variant: {\n+        default: \"bg-accent\",\n+        outline: \"bg-background\",\n+      },\n+    },\n+    defaultVariants: {\n+      variant: \"default\",\n+    },\n+  }\n+)\n+\n+export interface KbdProps\n+  extends React.ComponentPropsWithoutRef<\"kbd\">,\n+    VariantProps<typeof kbdVariants> {\n+  /**\n+   * The title of the `abbr` element inside the `kbd` element.\n+   * @default undefined\n+   * @type string | undefined\n+   * @example title=\"Command\"\n+   */\n+  abbrTitle?: string\n+}\n+\n+const Kbd = React.forwardRef<HTMLUnknownElement, KbdProps>(\n+  ({ abbrTitle, children, className, variant, ...props }, ref) => {\n+    return (\n+      <kbd\n+        className={cn(kbdVariants({ variant, className }))}\n+        ref={ref}\n+        {...props}\n+      >\n+        {abbrTitle ? (\n+          <abbr title={abbrTitle} className=\"no-underline\">\n+            {children}\n+          </abbr>\n+        ) : (\n+          children\n+        )}\n+      </kbd>\n+    )\n+  }\n+)\n+Kbd.displayName = \"Kbd\"\n+\n+export { Kbd }",
    "output": "feat: update table"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex ccafbf7..5fcd7a5 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -147,7 +147,7 @@ devDependencies:\n     version: 7.4.1\n   drizzle-kit:\n     specifier: ^0.20.14\n-    version: 0.20.15\n+    version: 0.20.16\n   eslint:\n     specifier: ^8.57.0\n     version: 8.57.0\n@@ -869,8 +869,8 @@ packages:\n     resolution: {integrity: sha512-9TANp6GPoMtYzQdt54kfAyMmz1+osLlXdg2ENroU7zzrtflTLrrC/lgrIfaSe+Wu0b89GKccT7vxXA0MoAIO+Q==}\n     dev: false\n \n-  /@hono/node-server@1.10.1:\n-    resolution: {integrity: sha512-5BKW25JH5PQKPDkTcIgv3yNUPtOAbnnjFFgWvIxxAY/B/ZNeYjjWoAeDmqhIiCgOAJ3Tauuw+0G+VainhuZRYQ==}\n+  /@hono/node-server@1.11.0:\n+    resolution: {integrity: sha512-TLIJq9TMtD1NEG1mVoqNUn1Ita0qSaB5XboZErjFBcO/GJYXwWY4dVdTi9G0lbxtu0x+hJXDItcLaFHb7rlFTw==}\n     engines: {node: '>=18.14.1'}\n     dev: true\n \n@@ -2763,12 +2763,12 @@ packages:\n       wordwrap: 1.0.0\n     dev: true\n \n-  /drizzle-kit@0.20.15:\n-    resolution: {integrity: sha512-thjJxrmt3WBRgi1+4C/VzTGCyJm75MHTnckM0dwjaTl5p+oeuK8nhf6mRUzv3Eksr7K+J/mmwhdXeTZIS631eA==}\n+  /drizzle-kit@0.20.16:\n+    resolution: {integrity: sha512-WoqV0XDny8mHnVoLYcUs6H3Ae1HBxeV0zi3VXG/mTahIQYfadZmIc3eRqzXjD3yxemj+GdHI1nThddmsoabdIA==}\n     hasBin: true\n     dependencies:\n       '@esbuild-kit/esm-loader': 2.6.5\n-      '@hono/node-server': 1.10.1\n+      '@hono/node-server': 1.11.0\n       '@hono/zod-validator': 0.2.1(hono@4.2.5)(zod@3.22.5)\n       camelcase: 7.0.1\n       chalk: 5.3.0",
    "output": "chore(deps): update dependency drizzle-kit to v0.20.16"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 95bea4e..ccafbf7 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -103,7 +103,7 @@ dependencies:\n     version: 1.4.41(react-dom@18.2.0)(react@18.2.0)\n   tailwind-merge:\n     specifier: ^2.2.2\n-    version: 2.2.2\n+    version: 2.3.0\n   tailwindcss-animate:\n     specifier: ^1.0.7\n     version: 1.0.7(tailwindcss@3.4.3)\n@@ -5209,8 +5209,8 @@ packages:\n     resolution: {integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==}\n     engines: {node: '>= 0.4'}\n \n-  /tailwind-merge@2.2.2:\n-    resolution: {integrity: sha512-tWANXsnmJzgw6mQ07nE3aCDkCK4QdT3ThPMCzawoYA2Pws7vSTCvz3Vrjg61jVUGfFZPJzxEP+NimbcW+EdaDw==}\n+  /tailwind-merge@2.3.0:\n+    resolution: {integrity: sha512-vkYrLpIP+lgR0tQCG6AP7zZXCTLc1Lnv/CCRT3BqJ9CZ3ui2++GPaGb1x/ILsINIMSYqqvrpqjUFsMNLlW99EA==}\n     dependencies:\n       '@babel/runtime': 7.24.4\n     dev: false",
    "output": "fix(deps): update dependency tailwind-merge to v2.3.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex c57f9f9..95bea4e 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -147,7 +147,7 @@ devDependencies:\n     version: 7.4.1\n   drizzle-kit:\n     specifier: ^0.20.14\n-    version: 0.20.14\n+    version: 0.20.15\n   eslint:\n     specifier: ^8.57.0\n     version: 8.57.0\n@@ -380,12 +380,6 @@ packages:\n       '@babel/helper-validator-identifier': 7.22.20\n       to-fast-properties: 2.0.0\n \n-  /@drizzle-team/studio@0.0.39:\n-    resolution: {integrity: sha512-c5Hkm7MmQC2n5qAsKShjQrHoqlfGslB8+qWzsGGZ+2dHMRTNG60UuzalF0h0rvBax5uzPXuGkYLGaQ+TUX3yMw==}\n-    dependencies:\n-      superjson: 2.2.1\n-    dev: true\n-\n   /@esbuild-kit/core-utils@3.3.2:\n     resolution: {integrity: sha512-sPRAnw9CdSsRmEtnsl2WXWdyquogVpB3yZ3dgwJfe8zrOzTsV7cJvmwrKVa+0ma5BoiGJ+BoqkMvawbayKUsqQ==}\n     dependencies:\n@@ -875,6 +869,21 @@ packages:\n     resolution: {integrity: sha512-9TANp6GPoMtYzQdt54kfAyMmz1+osLlXdg2ENroU7zzrtflTLrrC/lgrIfaSe+Wu0b89GKccT7vxXA0MoAIO+Q==}\n     dev: false\n \n+  /@hono/node-server@1.10.1:\n+    resolution: {integrity: sha512-5BKW25JH5PQKPDkTcIgv3yNUPtOAbnnjFFgWvIxxAY/B/ZNeYjjWoAeDmqhIiCgOAJ3Tauuw+0G+VainhuZRYQ==}\n+    engines: {node: '>=18.14.1'}\n+    dev: true\n+\n+  /@hono/zod-validator@0.2.1(hono@4.2.5)(zod@3.22.5):\n+    resolution: {integrity: sha512-HFoxln7Q6JsE64qz2WBS28SD33UB2alp3aRKmcWnNLDzEL1BLsWfbdX6e1HIiUprHYTIXf5y7ax8eYidKUwyaA==}\n+    peerDependencies:\n+      hono: '>=3.9.0'\n+      zod: ^3.19.1\n+    dependencies:\n+      hono: 4.2.5\n+      zod: 3.22.5\n+    dev: true\n+\n   /@hookform/resolvers@3.3.4(react-hook-form@7.51.3):\n     resolution: {integrity: sha512-o5cgpGOuJYrd+iMKvkttOclgwRW86EsWJZZRC23prf0uU2i48Htq4PuT73AVb9ionFyZrwYEITuOFGF+BydEtQ==}\n     peerDependencies:\n@@ -2754,12 +2763,13 @@ packages:\n       wordwrap: 1.0.0\n     dev: true\n \n-  /drizzle-kit@0.20.14:\n-    resolution: {integrity: sha512-0fHv3YIEaUcSVPSGyaaBfOi9bmpajjhbJNdPsRMIUvYdLVxBu9eGjH8mRc3Qk7HVmEidFc/lhG1YyJhoXrn5yA==}\n+  /drizzle-kit@0.20.15:\n+    resolution: {integrity: sha512-thjJxrmt3WBRgi1+4C/VzTGCyJm75MHTnckM0dwjaTl5p+oeuK8nhf6mRUzv3Eksr7K+J/mmwhdXeTZIS631eA==}\n     hasBin: true\n     dependencies:\n-      '@drizzle-team/studio': 0.0.39\n       '@esbuild-kit/esm-loader': 2.6.5\n+      '@hono/node-server': 1.10.1\n+      '@hono/zod-validator': 0.2.1(hono@4.2.5)(zod@3.22.5)\n       camelcase: 7.0.1\n       chalk: 5.3.0\n       commander: 9.5.0\n@@ -2768,9 +2778,11 @@ packages:\n       esbuild-register: 3.5.0(esbuild@0.19.12)\n       glob: 8.1.0\n       hanji: 0.0.5\n+      hono: 4.2.5\n       json-diff: 0.9.0\n       minimatch: 7.4.6\n       semver: 7.6.0\n+      superjson: 2.2.1\n       zod: 3.22.5\n     transitivePeerDependencies:\n       - supports-color\n@@ -3778,6 +3790,11 @@ packages:\n     resolution: {integrity: sha512-2bsegYkkHO+h/9MGbn6KWcE45cHZgPANo5LXF7EvWdT0yT2EguSVO1nDgU5c8+ZOPwp2vMNa7YFsJhVcDR9Sdg==}\n     dev: true\n \n+  /hono@4.2.5:\n+    resolution: {integrity: sha512-uonJD3i/yy005kQ7bPZRVfG3rejYJwyPqBmPoUGijS4UB/qM+YlrZ7xzSWy+ByDu9buGHUG+f+SKzz03Y6V1Kw==}\n+    engines: {node: '>=16.0.0'}\n+    dev: true\n+\n   /ignore@5.3.1:\n     resolution: {integrity: sha512-5Fytz/IraMjqpwfd34ke28PTVMjZjJG2MPn5t7OE4eUCUNf8BAa7b5WUS9/Qvr6mwOQS7Mk6vdsMno5he+T8Xw==}\n     engines: {node: '>= 4'}",
    "output": "chore(deps): update dependency drizzle-kit to v0.20.15"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/hooks/use-data-table.ts b/src/hooks/use-data-table.ts\nindex 0a8d377..4eef40f 100644\n--- a/src/hooks/use-data-table.ts\n+++ b/src/hooks/use-data-table.ts\n@@ -46,17 +46,17 @@ interface UseDataTableProps<TData, TValue> {\n    * The default number of rows per page.\n    * @default 10\n    * @type number | undefined\n-   * @example 10\n+   * @example 20\n    */\n   defaultPerPage?: number\n \n   /**\n    * The default sort order.\n    * @default \"createdAt.desc\"\n-   * @type string | undefined\n-   * @example \"createdAt.desc\"\n+   * @type `${Extract<keyof TData, string | number>}.${\"asc\" | \"desc\"}` | undefined\n+   * @example \"updatedAt.desc\"\n    */\n-  defaultSort?: string\n+  defaultSort?: `${Extract<keyof TData, string | number>}.${\"asc\" | \"desc\"}`\n \n   /**\n    * Defines filter fields for the table. Supports both dynamic faceted filters and search filters.\n@@ -109,7 +109,7 @@ export function useDataTable<TData, TValue>({\n   columns,\n   pageCount,\n   defaultPerPage = 10,\n-  defaultSort = \"createdAt.desc\",\n+  defaultSort = \"createdAt.desc\" as `${Extract<keyof TData, string | number>}.${\"asc\" | \"desc\"}`,\n   filterFields = [],\n   enableAdvancedFilter = false,\n }: UseDataTableProps<TData, TValue>) {",
    "output": "feat: update use-data-table agin"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/app/_components/tasks-table.tsx b/src/app/_components/tasks-table.tsx\nindex b12f1ef..a7706a3 100644\n--- a/src/app/_components/tasks-table.tsx\n+++ b/src/app/_components/tasks-table.tsx\n@@ -31,8 +31,11 @@ export function TasksTable({ tasksPromise }: TasksTableProps) {\n     data,\n     columns,\n     pageCount,\n+    // optional props\n     filterFields,\n     enableAdvancedFilter,\n+    defaultPerPage: 10,\n+    defaultSort: \"createdAt.desc\",\n   })\n \n   return (\ndiff --git a/src/hooks/use-data-table.ts b/src/hooks/use-data-table.ts\nindex 6eb4b1d..0a8d377 100644\n--- a/src/hooks/use-data-table.ts\n+++ b/src/hooks/use-data-table.ts\n@@ -42,6 +42,22 @@ interface UseDataTableProps<TData, TValue> {\n    */\n   pageCount: number\n \n+  /**\n+   * The default number of rows per page.\n+   * @default 10\n+   * @type number | undefined\n+   * @example 10\n+   */\n+  defaultPerPage?: number\n+\n+  /**\n+   * The default sort order.\n+   * @default \"createdAt.desc\"\n+   * @type string | undefined\n+   * @example \"createdAt.desc\"\n+   */\n+  defaultSort?: string\n+\n   /**\n    * Defines filter fields for the table. Supports both dynamic faceted filters and search filters.\n    * - Faceted filters are rendered when `options` are provided for a filter field.\n@@ -84,14 +100,16 @@ interface UseDataTableProps<TData, TValue> {\n \n const schema = z.object({\n   page: z.coerce.number().default(1),\n-  per_page: z.coerce.number().default(10),\n-  sort: z.string().optional().default(\"createdAt.desc\"),\n+  per_page: z.coerce.number().optional(),\n+  sort: z.string().optional(),\n })\n \n export function useDataTable<TData, TValue>({\n   data,\n   columns,\n   pageCount,\n+  defaultPerPage = 10,\n+  defaultSort = \"createdAt.desc\",\n   filterFields = [],\n   enableAdvancedFilter = false,\n }: UseDataTableProps<TData, TValue>) {\n@@ -100,9 +118,10 @@ export function useDataTable<TData, TValue>({\n   const searchParams = useSearchParams()\n \n   // Search params\n-  const { page, per_page, sort } = schema.parse(\n-    Object.fromEntries(searchParams)\n-  )\n+  const search = schema.parse(Object.fromEntries(searchParams))\n+  const page = search.page\n+  const perPage = search.per_page ?? defaultPerPage\n+  const sort = search.sort ?? defaultSort\n   const [column, order] = sort?.split(\".\") ?? []\n \n   // Memoize computation of searchableColumns and filterableColumns\n@@ -171,7 +190,7 @@ export function useDataTable<TData, TValue>({\n   const [{ pageIndex, pageSize }, setPagination] =\n     React.useState<PaginationState>({\n       pageIndex: page - 1,\n-      pageSize: per_page,\n+      pageSize: perPage,\n     })\n \n   const pagination = React.useMemo(",
    "output": "feat: add defaultPerPage and defaultSort props for useDataTable"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 53ca1cd..0b83c3b 100644\n--- a/package.json\n+++ b/package.json\n@@ -87,5 +87,5 @@\n   \"ct3aMetadata\": {\n     \"initVersion\": \"7.23.1\"\n   },\n-  \"packageManager\": \"pnpm@9.0.2\"\n+  \"packageManager\": \"pnpm@9.0.4\"\n }",
    "output": "chore(deps): update pnpm to v9.0.4"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 860b274..ca61e13 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -119,7 +119,7 @@ importers:\n         version: 0.5.1\n       '@types/eslint':\n         specifier: ^8.56.9\n-        version: 8.56.9\n+        version: 8.56.10\n       '@types/node':\n         specifier: ^20.12.7\n         version: 20.12.7\n@@ -1153,8 +1153,8 @@ packages:\n   '@total-typescript/ts-reset@0.5.1':\n     resolution: {integrity: sha512-AqlrT8YA1o7Ff5wPfMOL0pvL+1X+sw60NN6CcOCqs658emD6RfiXhF7Gu9QcfKBH7ELY2nInLhKSCWVoNL70MQ==}\n \n-  '@types/eslint@8.56.9':\n-    resolution: {integrity: sha512-W4W3KcqzjJ0sHg2vAq9vfml6OhsJ53TcUjUqfzzZf/EChUtwspszj/S0pzMxnfRcO55/iGq47dscXw71Fxc4Zg==}\n+  '@types/eslint@8.56.10':\n+    resolution: {integrity: sha512-Shavhk87gCtY2fhXDctcfS3e6FdxWkCx1iUZ9eEUbh7rTqlZT0/IzOkCOVt0fCjcFuZ9FPYfuezTBImfHCDBGQ==}\n \n   '@types/estree@1.0.5':\n     resolution: {integrity: sha512-/kYRxGDLWzHOB7q+wtSUQlFrtcdUccpfy+X+9iMBpHK8QLLhx2wIPYuS5DYtR9Wa/YlZAbIovy7qVdB1Aq6Lyw==}\n@@ -4051,7 +4051,7 @@ snapshots:\n \n   '@total-typescript/ts-reset@0.5.1': {}\n \n-  '@types/eslint@8.56.9':\n+  '@types/eslint@8.56.10':\n     dependencies:\n       '@types/estree': 1.0.5\n       '@types/json-schema': 7.0.15",
    "output": "chore(deps): update dependency @types/eslint to v8.56.10"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 1451c30..853959b 100644\n--- a/package.json\n+++ b/package.json\n@@ -87,5 +87,5 @@\n   \"ct3aMetadata\": {\n     \"initVersion\": \"7.23.1\"\n   },\n-  \"packageManager\": \"pnpm@9.0.1\"\n+  \"packageManager\": \"pnpm@9.0.2\"\n }",
    "output": "chore(deps): update pnpm to v9.0.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex b523b2a..02ea271 100644\n--- a/package.json\n+++ b/package.json\n@@ -87,5 +87,5 @@\n   \"ct3aMetadata\": {\n     \"initVersion\": \"7.23.1\"\n   },\n-  \"packageManager\": \"pnpm@9.0.0\"\n+  \"packageManager\": \"pnpm@9.0.1\"\n }",
    "output": "chore(deps): update pnpm to v9.0.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 7a9b205..eb3f985 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -82,7 +82,7 @@ dependencies:\n     version: 18.2.0\n   react-day-picker:\n     specifier: ^8.10.0\n-    version: 8.10.0(date-fns@3.6.0)(react@18.2.0)\n+    version: 8.10.1(date-fns@3.6.0)(react@18.2.0)\n   react-dom:\n     specifier: 18.2.0\n     version: 18.2.0(react@18.2.0)\n@@ -4710,8 +4710,8 @@ packages:\n   /queue-microtask@1.2.3:\n     resolution: {integrity: sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==}\n \n-  /react-day-picker@8.10.0(date-fns@3.6.0)(react@18.2.0):\n-    resolution: {integrity: sha512-mz+qeyrOM7++1NCb1ARXmkjMkzWVh2GL9YiPbRjKe0zHccvekk4HE+0MPOZOrosn8r8zTHIIeOUXTmXRqmkRmg==}\n+  /react-day-picker@8.10.1(date-fns@3.6.0)(react@18.2.0):\n+    resolution: {integrity: sha512-TMx7fNbhLk15eqcMt+7Z7S2KF7mfTId/XJDjKE8f+IUcFn0l08/kI4FiYTL/0yuOLmEcbR4Fwe3GJf/NiiMnPA==}\n     peerDependencies:\n       date-fns: ^2.28.0 || ^3.0.0\n       react: ^16.8.0 || ^17.0.0 || ^18.0.0",
    "output": "fix(deps): update dependency react-day-picker to v8.10.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 99d8c3b..e52e2b2 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -165,7 +165,7 @@ devDependencies:\n     version: 3.2.5\n   prettier-plugin-tailwindcss:\n     specifier: ^0.5.11\n-    version: 0.5.13(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.2.5)\n+    version: 0.5.14(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.2.5)\n   rimraf:\n     specifier: ^5.0.5\n     version: 5.0.5\n@@ -4632,8 +4632,8 @@ packages:\n     engines: {node: '>= 0.8.0'}\n     dev: true\n \n-  /prettier-plugin-tailwindcss@0.5.13(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.2.5):\n-    resolution: {integrity: sha512-2tPWHCFNC+WRjAC4SIWQNSOdcL1NNkydXim8w7TDqlZi+/ulZYz2OouAI6qMtkggnPt7lGamboj6LcTMwcCvoQ==}\n+  /prettier-plugin-tailwindcss@0.5.14(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.2.5):\n+    resolution: {integrity: sha512-Puaz+wPUAhFp8Lo9HuciYKM2Y2XExESjeT+9NQoVFXZsPPnc9VYss2SpxdQ6vbatmt8/4+SN0oe0I1cPDABg9Q==}\n     engines: {node: '>=14.21.3'}\n     peerDependencies:\n       '@ianvs/prettier-plugin-sort-imports': '*'",
    "output": "chore(deps): update dependency prettier-plugin-tailwindcss to v0.5.14"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/.github/ISSUE_TEMPLATE/config.yml b/.github/ISSUE_TEMPLATE/config.yml\nindex 59324e7..15af75b 100644\n--- a/.github/ISSUE_TEMPLATE/config.yml\n+++ b/.github/ISSUE_TEMPLATE/config.yml\n@@ -1,3 +1,6 @@\n+# This template is heavily inspired by the shadcn-ui/ui repository.\n+# See: https://github.com/shadcn-ui/ui/blob/main/.github/ISSUE_TEMPLATE/config.yml\n+\n blank_issues_enabled: false\n contact_links:\n   - name: General questions\ndiff --git a/.github/ISSUE_TEMPLATE/feature_request.yml b/.github/ISSUE_TEMPLATE/feature_request.yml\nindex dd7bcfd..0a0555e 100644\n--- a/.github/ISSUE_TEMPLATE/feature_request.yml\n+++ b/.github/ISSUE_TEMPLATE/feature_request.yml\n@@ -2,7 +2,7 @@\n # See: https://github.com/shadcn-ui/ui/blob/main/.github/ISSUE_TEMPLATE/feature_request.yml\n \n name: \"Feature request\"\n-description: Feature request for shadcn-table\n+description: Create a feature request for shadcn-table\n title: \"[feat]: \"\n labels: [\"\u2728 enhancement\"]\n body:\n@@ -15,7 +15,7 @@ body:\n     id: feature-description\n     attributes:\n       label: Feature description\n-      description: Tell us about your feature request\n+      description: Tell us about your feature request.\n       placeholder: \"I think this feature would be great because...\"\n       value: \"Describe your feature request...\"\n     validations:",
    "output": "feat: update github issues"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex d3f1b86..f43d7d0 100644\n--- a/package.json\n+++ b/package.json\n@@ -87,5 +87,5 @@\n   \"ct3aMetadata\": {\n     \"initVersion\": \"7.23.1\"\n   },\n-  \"packageManager\": \"pnpm@8.15.6\"\n+  \"packageManager\": \"pnpm@8.15.7\"\n }",
    "output": "chore(deps): update pnpm to v8.15.7"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 02397b9..3e4df09 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -43,7 +43,7 @@ dependencies:\n     version: 0.9.2(typescript@5.4.5)(zod@3.22.4)\n   '@tanstack/react-table':\n     specifier: ^8.13.2\n-    version: 8.15.3(react-dom@18.2.0)(react@18.2.0)\n+    version: 8.16.0(react-dom@18.2.0)(react@18.2.0)\n   class-variance-authority:\n     specifier: ^0.7.0\n     version: 0.7.0\n@@ -1858,20 +1858,20 @@ packages:\n       zod: 3.22.4\n     dev: false\n \n-  /@tanstack/react-table@8.15.3(react-dom@18.2.0)(react@18.2.0):\n-    resolution: {integrity: sha512-aocQ4WpWiAh7R+yxNp+DGQYXeVACh5lv2kk96DjYgFiHDCB0cOFoYMT/pM6eDOzeMXR9AvPoLeumTgq8/0qX+w==}\n+  /@tanstack/react-table@8.16.0(react-dom@18.2.0)(react@18.2.0):\n+    resolution: {integrity: sha512-rKRjnt8ostqN2fercRVOIH/dq7MAmOENCMvVlKx6P9Iokhh6woBGnIZEkqsY/vEJf1jN3TqLOb34xQGLVRuhAg==}\n     engines: {node: '>=12'}\n     peerDependencies:\n       react: '>=16.8'\n       react-dom: '>=16.8'\n     dependencies:\n-      '@tanstack/table-core': 8.15.3\n+      '@tanstack/table-core': 8.16.0\n       react: 18.2.0\n       react-dom: 18.2.0(react@18.2.0)\n     dev: false\n \n-  /@tanstack/table-core@8.15.3:\n-    resolution: {integrity: sha512-wOgV0HfEvuMOv8RlqdR9MdNNqq0uyvQtP39QOvGlggHvIObOE4exS+D5LGO8LZ3LUXxId2IlUKcHDHaGujWhUg==}\n+  /@tanstack/table-core@8.16.0:\n+    resolution: {integrity: sha512-dCG8vQGk4js5v88/k83tTedWOwjGnIyONrKpHpfmSJB8jwFHl8GSu1sBBxbtACVAPtAQgwNxl0rw1d3RqRM1Tg==}\n     engines: {node: '>=12'}\n     dev: false\n ",
    "output": "fix(deps): update dependency @tanstack/react-table to v8.16.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 4a1b08a..02397b9 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -7,7 +7,7 @@ settings:\n dependencies:\n   '@hookform/resolvers':\n     specifier: ^3.3.4\n-    version: 3.3.4(react-hook-form@7.51.2)\n+    version: 3.3.4(react-hook-form@7.51.3)\n   '@radix-ui/react-checkbox':\n     specifier: ^1.0.4\n     version: 1.0.4(@types/react-dom@18.2.25)(@types/react@18.2.77)(react-dom@18.2.0)(react@18.2.0)\n@@ -88,7 +88,7 @@ dependencies:\n     version: 18.2.0(react@18.2.0)\n   react-hook-form:\n     specifier: ^7.51.2\n-    version: 7.51.2(react@18.2.0)\n+    version: 7.51.3(react@18.2.0)\n   server-only:\n     specifier: ^0.0.1\n     version: 0.0.1\n@@ -875,12 +875,12 @@ packages:\n     resolution: {integrity: sha512-9TANp6GPoMtYzQdt54kfAyMmz1+osLlXdg2ENroU7zzrtflTLrrC/lgrIfaSe+Wu0b89GKccT7vxXA0MoAIO+Q==}\n     dev: false\n \n-  /@hookform/resolvers@3.3.4(react-hook-form@7.51.2):\n+  /@hookform/resolvers@3.3.4(react-hook-form@7.51.3):\n     resolution: {integrity: sha512-o5cgpGOuJYrd+iMKvkttOclgwRW86EsWJZZRC23prf0uU2i48Htq4PuT73AVb9ionFyZrwYEITuOFGF+BydEtQ==}\n     peerDependencies:\n       react-hook-form: ^7.0.0\n     dependencies:\n-      react-hook-form: 7.51.2(react@18.2.0)\n+      react-hook-form: 7.51.3(react@18.2.0)\n     dev: false\n \n   /@humanwhocodes/config-array@0.11.14:\n@@ -4759,8 +4759,8 @@ packages:\n       scheduler: 0.23.0\n     dev: false\n \n-  /react-hook-form@7.51.2(react@18.2.0):\n-    resolution: {integrity: sha512-y++lwaWjtzDt/XNnyGDQy6goHskFualmDlf+jzEZvjvz6KWDf7EboL7pUvRCzPTJd0EOPpdekYaQLEvvG6m6HA==}\n+  /react-hook-form@7.51.3(react@18.2.0):\n+    resolution: {integrity: sha512-cvJ/wbHdhYx8aviSWh28w9ImjmVsb5Y05n1+FW786vEZQJV5STNM0pW6ujS+oiBecb0ARBxJFyAnXj9+GHXACQ==}\n     engines: {node: '>=12.22.0'}\n     peerDependencies:\n       react: ^16.8.0 || ^17 || ^18",
    "output": "fix(deps): update dependency react-hook-form to v7.51.3"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 256aa7f..4a1b08a 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -58,7 +58,7 @@ dependencies:\n     version: 3.6.0\n   drizzle-orm:\n     specifier: ^0.30.0\n-    version: 0.30.7(@types/react@18.2.77)(pg@8.11.5)(postgres@3.4.4)(react@18.2.0)\n+    version: 0.30.8(@types/react@18.2.77)(pg@8.11.5)(postgres@3.4.4)(react@18.2.0)\n   geist:\n     specifier: ^1.2.2\n     version: 1.3.0(next@14.2.0-canary.64)\n@@ -2725,8 +2725,8 @@ packages:\n       - supports-color\n     dev: true\n \n-  /drizzle-orm@0.30.7(@types/react@18.2.77)(pg@8.11.5)(postgres@3.4.4)(react@18.2.0):\n-    resolution: {integrity: sha512-9qefSZQlu2fO2qv24piHyWFWcxcOY15//0v4j8qomMqaxzipNoG+fUBrQ7Ftk7PY7APRbRdn/nkEXWxiI4a8mw==}\n+  /drizzle-orm@0.30.8(@types/react@18.2.77)(pg@8.11.5)(postgres@3.4.4)(react@18.2.0):\n+    resolution: {integrity: sha512-9pBJA0IjnpPpzZ6s9jlS1CQAbKoBmbn2GJesPhXaVblAA/joOJ4AWWevYcqvLGj9SvThBAl7WscN8Zwgg5mnTw==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=3'",
    "output": "fix(deps): update dependency drizzle-orm to v0.30.8"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex e992633..a45bc89 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -117,7 +117,7 @@ devDependencies:\n     version: 0.5.1\n   '@types/eslint':\n     specifier: ^8.56.5\n-    version: 8.56.7\n+    version: 8.56.9\n   '@types/node':\n     specifier: ^20.11.24\n     version: 20.12.7\n@@ -1879,8 +1879,8 @@ packages:\n     resolution: {integrity: sha512-AqlrT8YA1o7Ff5wPfMOL0pvL+1X+sw60NN6CcOCqs658emD6RfiXhF7Gu9QcfKBH7ELY2nInLhKSCWVoNL70MQ==}\n     dev: true\n \n-  /@types/eslint@8.56.7:\n-    resolution: {integrity: sha512-SjDvI/x3zsZnOkYZ3lCt9lOZWZLB2jIlNKz+LBgCtDurK0JZcwucxYHn1w2BJkD34dgX9Tjnak0txtq4WTggEA==}\n+  /@types/eslint@8.56.9:\n+    resolution: {integrity: sha512-W4W3KcqzjJ0sHg2vAq9vfml6OhsJ53TcUjUqfzzZf/EChUtwspszj/S0pzMxnfRcO55/iGq47dscXw71Fxc4Zg==}\n     dependencies:\n       '@types/estree': 1.0.5\n       '@types/json-schema': 7.0.15",
    "output": "chore(deps): update dependency @types/eslint to v8.56.9"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 46be384..d021df7 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -120,7 +120,7 @@ devDependencies:\n     version: 8.56.7\n   '@types/node':\n     specifier: ^20.11.24\n-    version: 20.12.6\n+    version: 20.12.7\n   '@types/react':\n     specifier: ^18.2.63\n     version: 18.2.75\n@@ -1897,8 +1897,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.12.6:\n-    resolution: {integrity: sha512-3KurE8taB8GCvZBPngVbp0lk5CKi8M9f9k1rsADh0Evdz5SzJ+Q+Hx9uHoFGsLnLnd1xmkDQr2hVhlA0Mn0lKQ==}\n+  /@types/node@20.12.7:\n+    resolution: {integrity: sha512-wq0cICSkRLVaf3UGLMGItu/PtdY7oaXaI/RVU+xliKVOtRna3PRY57ZDfztpDL0n11vfymMUnXv8QwYCO7L1wg==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.12.7"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 191a5e5..8ccc018 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -120,7 +120,7 @@ devDependencies:\n     version: 8.56.7\n   '@types/node':\n     specifier: ^20.11.24\n-    version: 20.12.5\n+    version: 20.12.6\n   '@types/react':\n     specifier: ^18.2.63\n     version: 18.2.74\n@@ -1897,8 +1897,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.12.5:\n-    resolution: {integrity: sha512-BD+BjQ9LS/D8ST9p5uqBxghlN+S42iuNxjsUGjeZobe/ciXzk2qb1B6IXc6AnRLS+yFJRpN2IPEHMzwspfDJNw==}\n+  /@types/node@20.12.6:\n+    resolution: {integrity: sha512-3KurE8taB8GCvZBPngVbp0lk5CKi8M9f9k1rsADh0Evdz5SzJ+Q+Hx9uHoFGsLnLnd1xmkDQr2hVhlA0Mn0lKQ==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.12.6"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/README.md b/README.md\nindex 8ea103a..cd84514 100644\n--- a/README.md\n+++ b/README.md\n@@ -1,6 +1,6 @@\n # [Shadcn Table](https://table.sadmn.com)\n \n-This is a Shadcn table component with server-side sorting, filtering, and pagination. It is bootstrapped with `create-t3-app`.\n+This is a shadcn table component with server-side sorting, filtering, and pagination. It is bootstrapped with `create-t3-app`.\n \n [![Shadcn Table](./public/images/screenshot.png)](https://table.sadmn.com)\n \ndiff --git a/package.json b/package.json\nindex 56f45bf..063d833 100644\n--- a/package.json\n+++ b/package.json\n@@ -14,14 +14,14 @@\n     \"format:write\": \"prettier --write \\\"**/*.{ts,tsx,mdx}\\\" --cache\",\n     \"format:check\": \"prettier --check \\\"**/*.{ts,tsx,mdx}\\\" --cache\",\n     \"check\": \"pnpm lint && pnpm typecheck && pnpm format:check\",\n+    \"shadcn:add\": \"pnpm dlx shadcn-ui@latest add\",\n     \"db:generate\": \"dotenv drizzle-kit generate:pg\",\n     \"db:introspect\": \"dotenv drizzle-kit introspect:pg\",\n     \"db:push\": \"dotenv drizzle-kit push:pg\",\n     \"db:migrate\": \"dotenv tsx src/db/migrate.ts\",\n     \"db:drop-migration\": \"drizzle-kit drop\",\n     \"db:seed\": \"dotenv tsx src/db/seed.ts\",\n-    \"db:studio\": \"dotenv drizzle-kit studio\",\n-    \"shadcn:add\": \"pnpm dlx shadcn-ui@latest add\"\n+    \"db:studio\": \"dotenv drizzle-kit studio\"\n   },\n   \"dependencies\": {\n     \"@hookform/resolvers\": \"^3.3.4\",\n@@ -61,6 +61,7 @@\n   \"devDependencies\": {\n     \"@faker-js/faker\": \"^8.4.1\",\n     \"@ianvs/prettier-plugin-sort-imports\": \"^4.1.1\",\n+    \"@total-typescript/ts-reset\": \"^0.5.1\",\n     \"@types/eslint\": \"^8.56.5\",\n     \"@types/node\": \"^20.11.24\",\n     \"@types/react\": \"^18.2.63\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 37a9c78..944b697 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -112,6 +112,9 @@ devDependencies:\n   '@ianvs/prettier-plugin-sort-imports':\n     specifier: ^4.1.1\n     version: 4.2.1(prettier@3.2.5)\n+  '@total-typescript/ts-reset':\n+    specifier: ^0.5.1\n+    version: 0.5.1\n   '@types/eslint':\n     specifier: ^8.56.5\n     version: 8.56.7\n@@ -1869,6 +1872,10 @@ packages:\n     engines: {node: '>=12'}\n     dev: false\n \n+  /@total-typescript/ts-reset@0.5.1:\n+    resolution: {integrity: sha512-AqlrT8YA1o7Ff5wPfMOL0pvL+1X+sw60NN6CcOCqs658emD6RfiXhF7Gu9QcfKBH7ELY2nInLhKSCWVoNL70MQ==}\n+    dev: true\n+\n   /@types/eslint@8.56.7:\n     resolution: {integrity: sha512-SjDvI/x3zsZnOkYZ3lCt9lOZWZLB2jIlNKz+LBgCtDurK0JZcwucxYHn1w2BJkD34dgX9Tjnak0txtq4WTggEA==}\n     dependencies:\ndiff --git a/reset.d.ts b/reset.d.ts\nnew file mode 100644\nindex 0000000..e547e84\n--- /dev/null\n+++ b/reset.d.ts\n@@ -0,0 +1 @@\n+import \"@total-typescript/ts-reset\"",
    "output": "feat: add ts-reset"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 1908c2d..8848381 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -67,7 +67,7 @@ dependencies:\n     version: 3.0.6\n   nanoid:\n     specifier: ^5.0.6\n-    version: 5.0.6\n+    version: 5.0.7\n   next:\n     specifier: 14.2.0-canary.61\n     version: 14.2.0-canary.61(@babel/core@7.24.0)(react-dom@18.2.0)(react@18.2.0)\n@@ -4260,8 +4260,8 @@ packages:\n     engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1}\n     hasBin: true\n \n-  /nanoid@5.0.6:\n-    resolution: {integrity: sha512-rRq0eMHoGZxlvaFOUdK1Ev83Bd1IgzzR+WJ3IbDJ7QOSdAxYjlurSPqFs9s4lJg29RT6nPwizFtJhQS6V5xgiA==}\n+  /nanoid@5.0.7:\n+    resolution: {integrity: sha512-oLxFY2gd2IqnjcYyOXD8XGCftpGtZP2AbHbOkthDkvRywH5ayNtPVy9YlOPcHckXzbLTCHpkb7FB+yuxKV13pQ==}\n     engines: {node: ^18 || >=20}\n     hasBin: true\n     dev: false",
    "output": "fix(deps): update dependency nanoid to v5.0.7"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex bb80172..0eb50fa 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -117,7 +117,7 @@ devDependencies:\n     version: 8.56.7\n   '@types/node':\n     specifier: ^20.11.24\n-    version: 20.12.4\n+    version: 20.12.5\n   '@types/react':\n     specifier: ^18.2.63\n     version: 18.2.74\n@@ -1887,8 +1887,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.12.4:\n-    resolution: {integrity: sha512-E+Fa9z3wSQpzgYQdYmme5X3OTuejnnTx88A6p6vkkJosR3KBz+HpE3kqNm98VE6cfLFcISx7zW7MsJkH6KwbTw==}\n+  /@types/node@20.12.5:\n+    resolution: {integrity: sha512-BD+BjQ9LS/D8ST9p5uqBxghlN+S42iuNxjsUGjeZobe/ciXzk2qb1B6IXc6AnRLS+yFJRpN2IPEHMzwspfDJNw==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.12.5"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/app/_components/tasks-table.tsx b/src/app/_components/tasks-table.tsx\nindex ca59b36..2242cae 100644\n--- a/src/app/_components/tasks-table.tsx\n+++ b/src/app/_components/tasks-table.tsx\n@@ -6,7 +6,6 @@ import { useDataTable } from \"@/hooks/use-data-table\"\n import { DataTableAdvancedToolbar } from \"@/components/data-table/advanced/data-table-advanced-toolbar\"\n import { DataTable } from \"@/components/data-table/data-table\"\n import { DataTableToolbar } from \"@/components/data-table/data-table-toolbar\"\n-import { DateRangePicker } from \"@/components/date-range-picker\"\n \n import { type getTasks } from \"../_lib/queries\"\n import { filterFields, getColumns } from \"./tasks-table-columns\"\n@@ -38,11 +37,6 @@ export function TasksTable({ tasksPromise }: TasksTableProps) {\n \n   return (\n     <div className=\"w-full space-y-2.5 overflow-auto\">\n-      <DateRangePicker\n-        triggerSize=\"sm\"\n-        triggerClassName=\"ml-auto w-56 sm:w-60\"\n-        align=\"end\"\n-      />\n       {enableAdvancedFilter ? (\n         <DataTableAdvancedToolbar table={table} filterFields={filterFields}>\n           <TasksTableToolbarActions table={table} />\ndiff --git a/src/app/page.tsx b/src/app/page.tsx\nindex 7ad00f4..b07317a 100644\n--- a/src/app/page.tsx\n+++ b/src/app/page.tsx\n@@ -2,6 +2,7 @@ import * as React from \"react\"\n import type { SearchParams } from \"@/types\"\n \n import { DataTableSkeleton } from \"@/components/data-table/data-table-skeleton\"\n+import { DateRangePicker } from \"@/components/date-range-picker\"\n import { Shell } from \"@/components/shell\"\n \n import { TasksTable } from \"./_components/tasks-table\"\n@@ -19,8 +20,22 @@ export default function IndexPage({ searchParams }: IndexPageProps) {\n   const tasksPromise = getTasks(search)\n \n   return (\n-    <Shell>\n+    <Shell className=\"gap-2\">\n+      {/**\n+       * The `TasksTableProvider` is use to enable some feature flags for the `TasksTable` component.\n+       * Feel free to remove this, as it's not required for the `TasksTable` component to work.\n+       */}\n       <TasksTableProvider>\n+        {/**\n+         * The `DateRangePicker` component is used to render the date range picker UI.\n+         * It is used to filter the tasks based on the selected date range it was created at.\n+         * The business logic for filtering the tasks based on the selected date range is handled inside the component.\n+         */}\n+        <DateRangePicker\n+          triggerSize=\"sm\"\n+          triggerClassName=\"ml-auto w-56 sm:w-60\"\n+          align=\"end\"\n+        />\n         <React.Suspense\n           fallback={\n             <DataTableSkeleton",
    "output": "feat: add better comments"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/app/_lib/queries.ts b/src/app/_lib/queries.ts\nindex d8d5b0c..f436c82 100644\n--- a/src/app/_lib/queries.ts\n+++ b/src/app/_lib/queries.ts\n@@ -33,7 +33,7 @@ export async function getTasks({\n       \"desc\",\n     ]) as [keyof Task | undefined, \"asc\" | \"desc\" | undefined]\n \n-    // Filter tasks by date range\n+    // Convert the date strings to Date objects\n     const fromDay = from ? new Date(from) : undefined\n     const toDay = to ? new Date(to) : undefined\n \n@@ -66,11 +66,7 @@ export async function getTasks({\n             // Filter by createdAt\n             fromDay && toDay\n               ? and(gte(tasks.createdAt, fromDay), lte(tasks.createdAt, toDay))\n-              : fromDay\n-                ? gte(tasks.createdAt, fromDay)\n-                : toDay\n-                  ? lte(tasks.createdAt, toDay)\n-                  : undefined\n+              : undefined\n           )\n         : or(\n             // Filter tasks by title\n@@ -99,11 +95,7 @@ export async function getTasks({\n             // Filter by createdAt\n             fromDay && toDay\n               ? and(gte(tasks.createdAt, fromDay), lte(tasks.createdAt, toDay))\n-              : fromDay\n-                ? gte(tasks.createdAt, fromDay)\n-                : toDay\n-                  ? lte(tasks.createdAt, toDay)\n-                  : undefined\n+              : undefined\n           )\n \n     // Transaction is used to ensure both queries are executed in a single transaction",
    "output": "feat: update get-tasks query"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 7c4bd4e..95ec42d 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -168,7 +168,7 @@ devDependencies:\n     version: 3.4.3\n   tsx:\n     specifier: ^4.7.1\n-    version: 4.7.1\n+    version: 4.7.2\n   typescript:\n     specifier: ^5.3.3\n     version: 5.4.3\n@@ -5270,13 +5270,13 @@ packages:\n     resolution: {integrity: sha512-AEYxH93jGFPn/a2iVAwW87VuUIkR1FVUKB77NwMF7nBTDkDrrT/Hpt/IrCJ0QXhW27jTBDcf5ZY7w6RiqTMw2Q==}\n     dev: false\n \n-  /tsx@4.7.1:\n-    resolution: {integrity: sha512-8d6VuibXHtlN5E3zFkgY8u4DX7Y3Z27zvvPKVmLon/D4AjuKzarkUBTLDBgj9iTQ0hg5xM7c/mYiRVM+HETf0g==}\n+  /tsx@4.7.2:\n+    resolution: {integrity: sha512-BCNd4kz6fz12fyrgCTEdZHGJ9fWTGeUzXmQysh0RVocDY3h4frk05ZNCXSy4kIenF7y/QnrdiVpTsyNRn6vlAw==}\n     engines: {node: '>=18.0.0'}\n     hasBin: true\n     dependencies:\n       esbuild: 0.19.12\n-      get-tsconfig: 4.7.2\n+      get-tsconfig: 4.7.3\n     optionalDependencies:\n       fsevents: 2.3.3\n     dev: true",
    "output": "chore(deps): update dependency tsx to v4.7.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 7aee002..1140f19 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -117,7 +117,7 @@ devDependencies:\n     version: 8.56.7\n   '@types/node':\n     specifier: ^20.11.24\n-    version: 20.12.3\n+    version: 20.12.4\n   '@types/react':\n     specifier: ^18.2.63\n     version: 18.2.74\n@@ -1887,8 +1887,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.12.3:\n-    resolution: {integrity: sha512-sD+ia2ubTeWrOu+YMF+MTAB7E+O7qsMqAbMfW7DG3K1URwhZ5hN1pLlRVGbf4wDFzSfikL05M17EyorS86jShw==}\n+  /@types/node@20.12.4:\n+    resolution: {integrity: sha512-E+Fa9z3wSQpzgYQdYmme5X3OTuejnnTx88A6p6vkkJosR3KBz+HpE3kqNm98VE6cfLFcISx7zW7MsJkH6KwbTw==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.12.4"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/components/data-table/advanced/data-table-filter-item.tsx b/src/components/data-table/advanced/data-table-filter-item.tsx\nindex b2b4028..398cca0 100644\n--- a/src/components/data-table/advanced/data-table-filter-item.tsx\n+++ b/src/components/data-table/advanced/data-table-filter-item.tsx\n@@ -132,7 +132,10 @@ export function DataTableFilterItem<TData>({\n                   <span className=\"text-foreground\">: </span>\n                   {selectedValues.size > 2\n                     ? `${selectedValues.size} selected`\n-                    : filterValues.join(\", \")}\n+                    : selectedOption.options\n+                        .filter((item) => selectedValues.has(item.value))\n+                        .map((item) => item.label)\n+                        .join(\", \")}\n                 </span>\n               )\n             : value.length > 0 && (\ndiff --git a/src/components/date-range-picker.tsx b/src/components/date-range-picker.tsx\nindex 360f133..708a6ad 100644\n--- a/src/components/date-range-picker.tsx\n+++ b/src/components/date-range-picker.tsx\n@@ -96,8 +96,6 @@ export function DateRangePicker({\n     to,\n   })\n \n-  console.log({ date })\n-\n   // Update query string\n   React.useEffect(() => {\n     const newSearchParams = new URLSearchParams(searchParams)\ndiff --git a/src/hooks/use-data-table.ts b/src/hooks/use-data-table.ts\nindex 2a92406..6eb4b1d 100644\n--- a/src/hooks/use-data-table.ts\n+++ b/src/hooks/use-data-table.ts\n@@ -46,6 +46,8 @@ interface UseDataTableProps<TData, TValue> {\n    * Defines filter fields for the table. Supports both dynamic faceted filters and search filters.\n    * - Faceted filters are rendered when `options` are provided for a filter field.\n    * - Otherwise, search filters are rendered.\n+   *\n+   * The indie filter field `value` represents the corresponding column name in the database table.\n    * @default []\n    * @type { label: string, value: keyof TData, placeholder?: string, options?: { label: string, value: string, icon?: React.ComponentType<{ className?: string }> }[] }[]\n    * @example\n@@ -54,7 +56,6 @@ interface UseDataTableProps<TData, TValue> {\n    * const filterFields = [\n    *   { label: \"Title\", value: \"title\", placeholder: \"Search titles\" }\n    * ];\n-   *\n    * // Render a faceted filter\n    * const filterFields = [\n    *   {",
    "output": "fix: advanced-filter options"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex eca7867..7aee002 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -58,7 +58,7 @@ dependencies:\n     version: 3.6.0\n   drizzle-orm:\n     specifier: ^0.30.0\n-    version: 0.30.6(@types/react@18.2.74)(pg@8.11.5)(postgres@3.4.4)(react@18.2.0)\n+    version: 0.30.7(@types/react@18.2.74)(pg@8.11.5)(postgres@3.4.4)(react@18.2.0)\n   geist:\n     specifier: ^1.2.2\n     version: 1.3.0(next@14.2.0-canary.54)\n@@ -2715,8 +2715,8 @@ packages:\n       - supports-color\n     dev: true\n \n-  /drizzle-orm@0.30.6(@types/react@18.2.74)(pg@8.11.5)(postgres@3.4.4)(react@18.2.0):\n-    resolution: {integrity: sha512-8RgNUmY7J03GRuRgBV5SaJNbYgLVPjdSWNS/bRkIMIHt2TFCA439lJsNpqYX8asyKMqkw8ceBiamUnCIXZIt9w==}\n+  /drizzle-orm@0.30.7(@types/react@18.2.74)(pg@8.11.5)(postgres@3.4.4)(react@18.2.0):\n+    resolution: {integrity: sha512-9qefSZQlu2fO2qv24piHyWFWcxcOY15//0v4j8qomMqaxzipNoG+fUBrQ7Ftk7PY7APRbRdn/nkEXWxiI4a8mw==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=3'\n@@ -2730,7 +2730,7 @@ packages:\n       '@types/pg': '*'\n       '@types/react': '>=18'\n       '@types/sql.js': '*'\n-      '@vercel/postgres': '*'\n+      '@vercel/postgres': '>=0.8.0'\n       '@xata.io/client': '*'\n       better-sqlite3: '>=7'\n       bun-types: '*'",
    "output": "fix(deps): update dependency drizzle-orm to v0.30.7"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/app/_components/tasks-table-provider.tsx b/src/app/_components/tasks-table-provider.tsx\nindex 380c9bb..74f01c9 100644\n--- a/src/app/_components/tasks-table-provider.tsx\n+++ b/src/app/_components/tasks-table-provider.tsx\n@@ -1,9 +1,8 @@\n \"use client\"\n \n import * as React from \"react\"\n-import { LapTimerIcon, MixIcon, SquareIcon } from \"@radix-ui/react-icons\"\n+import { MixIcon, SquareIcon } from \"@radix-ui/react-icons\"\n \n-import { DateRangePicker } from \"@/components/date-range-picker\"\n import { ToggleButton } from \"@/components/toggle-button\"\n \n interface TasksTableContextProps {\n@@ -31,7 +30,6 @@ export function useTasksTable() {\n export function TasksTableProvider({ children }: React.PropsWithChildren) {\n   const [enableAdvancedFilter, setEnableAdvancedFilter] = React.useState(false)\n   const [showFloatingBar, setShowFloatingBar] = React.useState(false)\n-  const [showDateRangeFilter, setShowDateRangeFilter] = React.useState(false)\n \n   return (\n     <TasksTableContext.Provider\n@@ -59,22 +57,7 @@ export function TasksTableProvider({ children }: React.PropsWithChildren) {\n           <SquareIcon className=\"mr-2 size-4 shrink-0\" aria-hidden=\"true\" />\n           Floating bar\n         </ToggleButton>\n-        <ToggleButton\n-          onClick={() => setShowDateRangeFilter(!showDateRangeFilter)}\n-          tooltipTitle=\"Toggle date range filter\"\n-          tooltipDescription=\"A filter to filter rows by date range.\"\n-        >\n-          <LapTimerIcon className=\"mr-2 size-4 shrink-0\" aria-hidden=\"true\" />\n-          Date range filter\n-        </ToggleButton>\n       </div>\n-      {showDateRangeFilter ? (\n-        <DateRangePicker\n-          triggerSize=\"sm\"\n-          triggerClassName=\"ml-auto w-60\"\n-          align=\"end\"\n-        />\n-      ) : null}\n       {children}\n     </TasksTableContext.Provider>\n   )\ndiff --git a/src/app/_components/tasks-table.tsx b/src/app/_components/tasks-table.tsx\nindex d700cf5..e143382 100644\n--- a/src/app/_components/tasks-table.tsx\n+++ b/src/app/_components/tasks-table.tsx\n@@ -6,6 +6,7 @@ import { useDataTable } from \"@/hooks/use-data-table\"\n import { DataTableAdvancedToolbar } from \"@/components/data-table/advanced/data-table-advanced-toolbar\"\n import { DataTable } from \"@/components/data-table/data-table\"\n import { DataTableToolbar } from \"@/components/data-table/data-table-toolbar\"\n+import { DateRangePicker } from \"@/components/date-range-picker\"\n \n import { type getTasks } from \"../_lib/queries\"\n import {\n@@ -42,6 +43,11 @@ export function TasksTable({ tasksPromise }: TasksTableProps) {\n \n   return (\n     <div className=\"w-full space-y-2.5 overflow-auto\">\n+      <DateRangePicker\n+        triggerSize=\"sm\"\n+        triggerClassName=\"ml-auto w-56 sm:w-60\"\n+        align=\"end\"\n+      />\n       {enableAdvancedFilter ? (\n         <DataTableAdvancedToolbar\n           table={table}",
    "output": "feat: update tasks-table"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex fc09f1c..d94428b 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -58,7 +58,7 @@ dependencies:\n     version: 3.6.0\n   drizzle-orm:\n     specifier: ^0.30.0\n-    version: 0.30.6(@types/react@18.2.74)(pg@8.11.4)(postgres@3.4.4)(react@18.2.0)\n+    version: 0.30.6(@types/react@18.2.74)(pg@8.11.5)(postgres@3.4.4)(react@18.2.0)\n   geist:\n     specifier: ^1.2.2\n     version: 1.3.0(next@14.2.0-canary.52)\n@@ -153,7 +153,7 @@ devDependencies:\n     version: 3.15.1(tailwindcss@3.4.3)\n   pg:\n     specifier: ^8.11.3\n-    version: 8.11.4\n+    version: 8.11.5\n   postcss:\n     specifier: ^8.4.35\n     version: 8.4.38\n@@ -2715,7 +2715,7 @@ packages:\n       - supports-color\n     dev: true\n \n-  /drizzle-orm@0.30.6(@types/react@18.2.74)(pg@8.11.4)(postgres@3.4.4)(react@18.2.0):\n+  /drizzle-orm@0.30.6(@types/react@18.2.74)(pg@8.11.5)(postgres@3.4.4)(react@18.2.0):\n     resolution: {integrity: sha512-8RgNUmY7J03GRuRgBV5SaJNbYgLVPjdSWNS/bRkIMIHt2TFCA439lJsNpqYX8asyKMqkw8ceBiamUnCIXZIt9w==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n@@ -2796,7 +2796,7 @@ packages:\n         optional: true\n     dependencies:\n       '@types/react': 18.2.74\n-      pg: 8.11.4\n+      pg: 8.11.5\n       postgres: 3.4.4\n       react: 18.2.0\n     dev: false\n@@ -4482,19 +4482,19 @@ packages:\n     requiresBuild: true\n     optional: true\n \n-  /pg-connection-string@2.6.3:\n-    resolution: {integrity: sha512-77FxhhKJQH+xJx6tDqkhhMa0nZvv3U1HYLDQgwZxZafVD583++O5LXn5oo5HaQZ0vXwYcZA1koYAJM3JvD6Gtw==}\n+  /pg-connection-string@2.6.4:\n+    resolution: {integrity: sha512-v+Z7W/0EO707aNMaAEfiGnGL9sxxumwLl2fJvCQtMn9Fxsg+lPpPkdcyBSv/KFgpGdYkMfn+EI1Or2EHjpgLCA==}\n \n   /pg-int8@1.0.1:\n     resolution: {integrity: sha512-WCtabS6t3c8SkpDBUlb1kjOs7l66xsGdKpIPZsg4wR+B3+u9UAum2odSsF9tnvxg80h4ZxLWMy4pRjOsFIqQpw==}\n     engines: {node: '>=4.0.0'}\n \n-  /pg-pool@3.6.2(pg@8.11.4):\n+  /pg-pool@3.6.2(pg@8.11.5):\n     resolution: {integrity: sha512-Htjbg8BlwXqSBQ9V8Vjtc+vzf/6fVUuak/3/XXKA9oxZprwW3IMDQTGHP+KDmVL7rtd+R1QjbnCFPuTHm3G4hg==}\n     peerDependencies:\n       pg: '>=8.0'\n     dependencies:\n-      pg: 8.11.4\n+      pg: 8.11.5\n \n   /pg-protocol@1.6.1:\n     resolution: {integrity: sha512-jPIlvgoD63hrEuihvIg+tJhoGjUsLPn6poJY9N5CnlPd91c2T18T/9zBtLxZSb1EhYxBRoZJtzScCaWlYLtktg==}\n@@ -4509,8 +4509,8 @@ packages:\n       postgres-date: 1.0.7\n       postgres-interval: 1.2.0\n \n-  /pg@8.11.4:\n-    resolution: {integrity: sha512-pWb7JKPxGk1UFbtq7jQ0m3IfPpb7LLACCEyN8/u9DYEom+Q/BSKy+4TRl4+Hh003AOYhppB/z+QK87/hx/bk0w==}\n+  /pg@8.11.5:\n+    resolution: {integrity: sha512-jqgNHSKL5cbDjFlHyYsCXmQDrfIX/3RsNwYqpd4N0Kt8niLuNoRNH+aazv6cOd43gPh9Y4DjQCtb+X0MH0Hvnw==}\n     engines: {node: '>= 8.0.0'}\n     peerDependencies:\n       pg-native: '>=3.0.1'\n@@ -4518,8 +4518,8 @@ packages:\n       pg-native:\n         optional: true\n     dependencies:\n-      pg-connection-string: 2.6.3\n-      pg-pool: 3.6.2(pg@8.11.4)\n+      pg-connection-string: 2.6.4\n+      pg-pool: 3.6.2(pg@8.11.5)\n       pg-protocol: 1.6.1\n       pg-types: 2.2.0\n       pgpass: 1.0.5",
    "output": "chore(deps): update dependency pg to v8.11.5"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 54937a2..fc09f1c 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -117,7 +117,7 @@ devDependencies:\n     version: 8.56.7\n   '@types/node':\n     specifier: ^20.11.24\n-    version: 20.12.2\n+    version: 20.12.3\n   '@types/react':\n     specifier: ^18.2.63\n     version: 18.2.74\n@@ -1887,8 +1887,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.12.2:\n-    resolution: {integrity: sha512-zQ0NYO87hyN6Xrclcqp7f8ZbXNbRfoGWNcMvHTPQp9UUrwI0mI7XBz+cu7/W6/VClYo2g63B0cjull/srU7LgQ==}\n+  /@types/node@20.12.3:\n+    resolution: {integrity: sha512-sD+ia2ubTeWrOu+YMF+MTAB7E+O7qsMqAbMfW7DG3K1URwhZ5hN1pLlRVGbf4wDFzSfikL05M17EyorS86jShw==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.12.3"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex a1e6bd3..e251d20 100644\n--- a/package.json\n+++ b/package.json\n@@ -83,5 +83,5 @@\n   \"ct3aMetadata\": {\n     \"initVersion\": \"7.23.1\"\n   },\n-  \"packageManager\": \"pnpm@8.15.5\"\n+  \"packageManager\": \"pnpm@8.15.6\"\n }",
    "output": "chore(deps): update pnpm to v8.15.6"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 41c5d44..51d7e24 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -108,7 +108,7 @@ devDependencies:\n     version: 4.2.1(prettier@3.2.5)\n   '@types/eslint':\n     specifier: ^8.56.5\n-    version: 8.56.6\n+    version: 8.56.7\n   '@types/node':\n     specifier: ^20.11.24\n     version: 20.12.2\n@@ -1863,8 +1863,8 @@ packages:\n     engines: {node: '>=12'}\n     dev: false\n \n-  /@types/eslint@8.56.6:\n-    resolution: {integrity: sha512-ymwc+qb1XkjT/gfoQwxIeHZ6ixH23A+tCT2ADSA/DPVKzAjwYkTXBMCQ/f6fe4wEa85Lhp26VPeUxI7wMhAi7A==}\n+  /@types/eslint@8.56.7:\n+    resolution: {integrity: sha512-SjDvI/x3zsZnOkYZ3lCt9lOZWZLB2jIlNKz+LBgCtDurK0JZcwucxYHn1w2BJkD34dgX9Tjnak0txtq4WTggEA==}\n     dependencies:\n       '@types/estree': 1.0.5\n       '@types/json-schema': 7.0.15",
    "output": "chore(deps): update dependency @types/eslint to v8.56.7"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 868b96a..976e953 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -105,7 +105,7 @@ devDependencies:\n     version: 8.56.6\n   '@types/node':\n     specifier: ^20.11.24\n-    version: 20.11.30\n+    version: 20.12.2\n   '@types/react':\n     specifier: ^18.2.63\n     version: 18.2.73\n@@ -1867,8 +1867,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.11.30:\n-    resolution: {integrity: sha512-dHM6ZxwlmuZaRmUPfv1p+KrdD1Dci04FbdEm/9wEMouFqxYoFl5aMkt0VMAUtYRQDyYvD41WJLukhq/ha3YuTw==}\n+  /@types/node@20.12.2:\n+    resolution: {integrity: sha512-zQ0NYO87hyN6Xrclcqp7f8ZbXNbRfoGWNcMvHTPQp9UUrwI0mI7XBz+cu7/W6/VClYo2g63B0cjull/srU7LgQ==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.12.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/app/_components/tasks-table.tsx b/src/app/_components/tasks-table.tsx\nindex 6a162c3..c3bc5be 100644\n--- a/src/app/_components/tasks-table.tsx\n+++ b/src/app/_components/tasks-table.tsx\n@@ -40,7 +40,7 @@ export function TasksTable({ tasksPromise }: TasksTableProps) {\n     pageCount,\n     searchableColumns,\n     filterableColumns,\n-    enableAdvancedFilter: !enableAdvancedFilter,\n+    enableAdvancedFilter,\n   })\n \n   return (\n@@ -49,7 +49,7 @@ export function TasksTable({ tasksPromise }: TasksTableProps) {\n       columns={columns}\n       searchableColumns={searchableColumns}\n       filterableColumns={filterableColumns}\n-      enableAdvancedFilter={!enableAdvancedFilter}\n+      enableAdvancedFilter={enableAdvancedFilter}\n       floatingBar={\n         showFloatingBar ? <TasksTableFloatingBar table={table} /> : null\n       }",
    "output": "fix: remove flag"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/components/data-table/advanced/data-table-filter-item.tsx b/src/components/data-table/advanced/data-table-filter-item.tsx\nindex 6489d1d..51076d9 100644\n--- a/src/components/data-table/advanced/data-table-filter-item.tsx\n+++ b/src/components/data-table/advanced/data-table-filter-item.tsx\n@@ -89,28 +89,10 @@ export function DataTableFilterItem<TData>({\n     [searchParams]\n   )\n \n-  // Update query string (key=value~operator)\n-  React.useEffect(() => {\n-    if (selectedOption.items.length > 0) return\n-\n-    const newSearchParams = createQueryString({\n-      [String(selectedOption.value)]:\n-        debounceValue.length > 0\n-          ? `${debounceValue}~${selectedOperator?.value}`\n-          : null,\n-    })\n-    router.push(`${pathname}?${newSearchParams}`)\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\n-  }, [\n-    debounceValue,\n-    selectedOperator?.value,\n-    selectedOption.items.length,\n-    selectedOption.value,\n-  ])\n-\n-  // Update query string (key=value1.value2.value3~operator)\n+  // Update query string\n   React.useEffect(() => {\n     if (selectedOption.items.length > 0) {\n+      // key=value1.value2.value3~operator\n       const newSearchParams = createQueryString({\n         [String(selectedOption.value)]:\n           filterValues.length > 0\n@@ -118,15 +100,19 @@ export function DataTableFilterItem<TData>({\n             : null,\n       })\n       router.push(`${pathname}?${newSearchParams}`)\n+    } else {\n+      // key=value~operator\n+      const newSearchParams = createQueryString({\n+        [String(selectedOption.value)]:\n+          debounceValue.length > 0\n+            ? `${debounceValue}~${selectedOperator?.value}`\n+            : null,\n+      })\n+      router.push(`${pathname}?${newSearchParams}`)\n     }\n \n     // eslint-disable-next-line react-hooks/exhaustive-deps\n-  }, [\n-    filterValues,\n-    selectedOperator?.value,\n-    selectedOption.items.length,\n-    selectedOption.value,\n-  ])\n+  }, [selectedOption, debounceValue])\n \n   return (\n     <Popover open={open} onOpenChange={setOpen}>",
    "output": "fix: cleanup filters"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 80bda4c..f5af22f 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -43,7 +43,7 @@ dependencies:\n     version: 0.9.2(typescript@5.4.3)(zod@3.22.4)\n   '@tanstack/react-table':\n     specifier: ^8.13.2\n-    version: 8.15.2(react-dom@18.2.0)(react@18.2.0)\n+    version: 8.15.3(react-dom@18.2.0)(react@18.2.0)\n   class-variance-authority:\n     specifier: ^0.7.0\n     version: 0.7.0\n@@ -1862,20 +1862,20 @@ packages:\n       zod: 3.22.4\n     dev: false\n \n-  /@tanstack/react-table@8.15.2(react-dom@18.2.0)(react@18.2.0):\n-    resolution: {integrity: sha512-IJyTmCc2LWaRPjA8vK0kPkdrcs2MM0neCoXS3cazg8X3OkWt/bsJh6ieuK8jbQ1Gi0dxwvNlGCW2AVYOaxCbNA==}\n+  /@tanstack/react-table@8.15.3(react-dom@18.2.0)(react@18.2.0):\n+    resolution: {integrity: sha512-aocQ4WpWiAh7R+yxNp+DGQYXeVACh5lv2kk96DjYgFiHDCB0cOFoYMT/pM6eDOzeMXR9AvPoLeumTgq8/0qX+w==}\n     engines: {node: '>=12'}\n     peerDependencies:\n       react: '>=16.8'\n       react-dom: '>=16.8'\n     dependencies:\n-      '@tanstack/table-core': 8.15.2\n+      '@tanstack/table-core': 8.15.3\n       react: 18.2.0\n       react-dom: 18.2.0(react@18.2.0)\n     dev: false\n \n-  /@tanstack/table-core@8.15.2:\n-    resolution: {integrity: sha512-OIBS4seJSr+J70rSLon8taWxcaGozMEu5B2CrNBwRG0gZbSbW6FtsE+neJHynl6Bqy7wN5HqaUZz67V1ysCq9w==}\n+  /@tanstack/table-core@8.15.3:\n+    resolution: {integrity: sha512-wOgV0HfEvuMOv8RlqdR9MdNNqq0uyvQtP39QOvGlggHvIObOE4exS+D5LGO8LZ3LUXxId2IlUKcHDHaGujWhUg==}\n     engines: {node: '>=12'}\n     dev: false\n ",
    "output": "fix(deps): update dependency @tanstack/react-table to v8.15.3"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 0e4953a..80bda4c 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -55,7 +55,7 @@ dependencies:\n     version: 1.0.0(@types/react-dom@18.2.23)(@types/react@18.2.73)(react-dom@18.2.0)(react@18.2.0)\n   drizzle-orm:\n     specifier: ^0.30.0\n-    version: 0.30.5(@types/react@18.2.73)(pg@8.11.3)(postgres@3.4.4)(react@18.2.0)\n+    version: 0.30.6(@types/react@18.2.73)(pg@8.11.3)(postgres@3.4.4)(react@18.2.0)\n   geist:\n     specifier: ^1.2.2\n     version: 1.3.0(next@14.2.0-canary.47)\n@@ -2725,11 +2725,12 @@ packages:\n       - supports-color\n     dev: true\n \n-  /drizzle-orm@0.30.5(@types/react@18.2.73)(pg@8.11.3)(postgres@3.4.4)(react@18.2.0):\n-    resolution: {integrity: sha512-oImmwGpe1jTWvhPkpsnramZA8m/lE8krTj7Ws7KHSFCMshMXmcZWX2g2Ki793PQOBmwI50KYzWJ9yNKKhWYLyA==}\n+  /drizzle-orm@0.30.6(@types/react@18.2.73)(pg@8.11.3)(postgres@3.4.4)(react@18.2.0):\n+    resolution: {integrity: sha512-8RgNUmY7J03GRuRgBV5SaJNbYgLVPjdSWNS/bRkIMIHt2TFCA439lJsNpqYX8asyKMqkw8ceBiamUnCIXZIt9w==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=3'\n+      '@electric-sql/pglite': '>=0.1.1'\n       '@libsql/client': '*'\n       '@neondatabase/serverless': '>=0.1'\n       '@op-engineering/op-sqlite': '>=2'\n@@ -2757,6 +2758,8 @@ packages:\n         optional: true\n       '@cloudflare/workers-types':\n         optional: true\n+      '@electric-sql/pglite':\n+        optional: true\n       '@libsql/client':\n         optional: true\n       '@neondatabase/serverless':",
    "output": "fix(deps): update dependency drizzle-orm to v0.30.6"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 0bbdb16..0e4953a 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -43,7 +43,7 @@ dependencies:\n     version: 0.9.2(typescript@5.4.3)(zod@3.22.4)\n   '@tanstack/react-table':\n     specifier: ^8.13.2\n-    version: 8.15.0(react-dom@18.2.0)(react@18.2.0)\n+    version: 8.15.2(react-dom@18.2.0)(react@18.2.0)\n   class-variance-authority:\n     specifier: ^0.7.0\n     version: 0.7.0\n@@ -1862,20 +1862,20 @@ packages:\n       zod: 3.22.4\n     dev: false\n \n-  /@tanstack/react-table@8.15.0(react-dom@18.2.0)(react@18.2.0):\n-    resolution: {integrity: sha512-8K4RSROUtXUtfiezV6Ehl8z99axFrkQnxXi0vjWBJv3Tsm5x4EyrgXI7d2tOOMoANykKZLB6S1sGZGemoMRt7Q==}\n+  /@tanstack/react-table@8.15.2(react-dom@18.2.0)(react@18.2.0):\n+    resolution: {integrity: sha512-IJyTmCc2LWaRPjA8vK0kPkdrcs2MM0neCoXS3cazg8X3OkWt/bsJh6ieuK8jbQ1Gi0dxwvNlGCW2AVYOaxCbNA==}\n     engines: {node: '>=12'}\n     peerDependencies:\n       react: '>=16.8'\n       react-dom: '>=16.8'\n     dependencies:\n-      '@tanstack/table-core': 8.14.0\n+      '@tanstack/table-core': 8.15.2\n       react: 18.2.0\n       react-dom: 18.2.0(react@18.2.0)\n     dev: false\n \n-  /@tanstack/table-core@8.14.0:\n-    resolution: {integrity: sha512-wDhpKJahGHWhmRt4RxtV3pES63CoeadljGWS/xeS9OJr1HBl2NB+OO44ht3sxDH5j5TRDAbQzC0NvSlsUfn7lQ==}\n+  /@tanstack/table-core@8.15.2:\n+    resolution: {integrity: sha512-OIBS4seJSr+J70rSLon8taWxcaGozMEu5B2CrNBwRG0gZbSbW6FtsE+neJHynl6Bqy7wN5HqaUZz67V1ysCq9w==}\n     engines: {node: '>=12'}\n     dev: false\n ",
    "output": "fix(deps): update dependency @tanstack/react-table to v8.15.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/.github/ISSUE_TEMPLATE/bug_report.yml b/.github/ISSUE_TEMPLATE/bug_report.yml\nindex 50af999..a2c9e57 100644\n--- a/.github/ISSUE_TEMPLATE/bug_report.yml\n+++ b/.github/ISSUE_TEMPLATE/bug_report.yml\n@@ -2,9 +2,9 @@\n # See: https://github.com/juliusmarminge/acme-corp/blob/main/.github/ISSUE_TEMPLATE/bug_report.yml\n # See: https://github.com/shadcn-ui/ui/blob/main/.github/ISSUE_TEMPLATE/feature_request.yml\n \n-name: \ud83d\udc1e Bug Report\n+name: Bug report\n description: Create a bug report to help us improve\n-title: \"bug: \"\n+title: \"[bug]: \"\n labels: [\"\ud83d\udc1e\u2754 unconfirmed bug\"]\n body:\n   - type: textarea\ndiff --git a/CONTRIBUTING.md b/CONTRIBUTING.md\nindex d1b8074..46a2771 100644\n--- a/CONTRIBUTING.md\n+++ b/CONTRIBUTING.md\n@@ -1,21 +1,9 @@\n # Contributing Guide\n \n-Thank you for investing your time in contributing to our project! Any contribution you make will be reflected on [shadcn-table](<[table.sadmn.com](https://github.com/sadmann7/shadcn-table)>) :sparkles:.\n-\n-Read our [Code of Conduct](./CODE_OF_CONDUCT.md) to keep our community approachable and respectable.\n+Thank you for investing your time in contributing to our project! Any contribution you make will be reflected on [shadcn-table](<[table.sadmn.com](https://github.com/sadmann7/shadcn-table)>).\n \n In this guide you will get an overview of the contribution workflow from opening an issue, creating a PR, reviewing, and merging the PR.\n \n-## New contributor guide\n-\n-To get an overview of the project, read the [README](README.md). Here are some resources to help you get started with open source contributions:\n-\n-- [How to Contribute to Open Source](https://opensource.guide/how-to-contribute/)\n-- [Understanding the GitHub flow](https://guides.github.com/introduction/flow/)\n-\n-- [GitHub Help Documentation](https://help.github.com/)\n-- [GitHub Flavored Markdown](https://guides.github.com/features/mastering-markdown/)\n-\n ## Getting started\n \n ### Fork the repository",
    "output": "chore: update issue templates, and add contributing.md"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/.github/DISCUSSION_TEMPLATE/features-request.yml b/.github/DISCUSSION_TEMPLATE/features-request.yml\nnew file mode 100644\nindex 0000000..ab6d9cf\n--- /dev/null\n+++ b/.github/DISCUSSION_TEMPLATE/features-request.yml\n@@ -0,0 +1,25 @@\n+title: \"[features]: \"\n+labels: [\"Features Request\"]\n+body:\n+  - type: markdown\n+    attributes:\n+      value: |\n+        ### Thanks for taking the time to create a feature request! Please search open/closed requests before submitting, as the feature or a similar one may have already been requested.\n+\n+  - type: textarea\n+    id: feature-description\n+    attributes:\n+      label: Description\n+      description: Tell us about your feature request\n+      placeholder: \"A dashboard for an e-commerce website showing sales, orders, and customers...\"\n+    validations:\n+      required: true\n+\n+  - type: input\n+    id: feature-example-url\n+    attributes:\n+      label: Example\n+      description: Link to an example of the feature\n+      placeholder: ex. https://example.com\n+    validations:\n+      required: false",
    "output": "chore: add feature request"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex e5041e4..7a2f0c5 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -153,7 +153,7 @@ devDependencies:\n     version: 3.2.5\n   prettier-plugin-tailwindcss:\n     specifier: ^0.5.11\n-    version: 0.5.12(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.2.5)\n+    version: 0.5.13(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.2.5)\n   tailwindcss:\n     specifier: ^3.4.1\n     version: 3.4.1\n@@ -4656,14 +4656,15 @@ packages:\n     engines: {node: '>= 0.8.0'}\n     dev: true\n \n-  /prettier-plugin-tailwindcss@0.5.12(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.2.5):\n-    resolution: {integrity: sha512-o74kiDBVE73oHW+pdkFSluHBL3cYEvru5YgEqNkBMFF7Cjv+w1vI565lTlfoJT4VLWDe0FMtZ7FkE/7a4pMXSQ==}\n+  /prettier-plugin-tailwindcss@0.5.13(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.2.5):\n+    resolution: {integrity: sha512-2tPWHCFNC+WRjAC4SIWQNSOdcL1NNkydXim8w7TDqlZi+/ulZYz2OouAI6qMtkggnPt7lGamboj6LcTMwcCvoQ==}\n     engines: {node: '>=14.21.3'}\n     peerDependencies:\n       '@ianvs/prettier-plugin-sort-imports': '*'\n       '@prettier/plugin-pug': '*'\n       '@shopify/prettier-plugin-liquid': '*'\n       '@trivago/prettier-plugin-sort-imports': '*'\n+      '@zackad/prettier-plugin-twig-melody': '*'\n       prettier: ^3.0\n       prettier-plugin-astro: '*'\n       prettier-plugin-css-order: '*'\n@@ -4675,7 +4676,6 @@ packages:\n       prettier-plugin-sort-imports: '*'\n       prettier-plugin-style-order: '*'\n       prettier-plugin-svelte: '*'\n-      prettier-plugin-twig-melody: '*'\n     peerDependenciesMeta:\n       '@ianvs/prettier-plugin-sort-imports':\n         optional: true\n@@ -4685,6 +4685,8 @@ packages:\n         optional: true\n       '@trivago/prettier-plugin-sort-imports':\n         optional: true\n+      '@zackad/prettier-plugin-twig-melody':\n+        optional: true\n       prettier-plugin-astro:\n         optional: true\n       prettier-plugin-css-order:\n@@ -4705,8 +4707,6 @@ packages:\n         optional: true\n       prettier-plugin-svelte:\n         optional: true\n-      prettier-plugin-twig-melody:\n-        optional: true\n     dependencies:\n       '@ianvs/prettier-plugin-sort-imports': 4.2.1(prettier@3.2.5)\n       prettier: 3.2.5",
    "output": "chore(deps): update dependency prettier-plugin-tailwindcss to v0.5.13"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex f5dd474..32f16e6 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -55,7 +55,7 @@ dependencies:\n     version: 1.0.0(@types/react-dom@18.2.22)(@types/react@18.2.72)(react-dom@18.2.0)(react@18.2.0)\n   drizzle-orm:\n     specifier: ^0.30.0\n-    version: 0.30.4(@types/react@18.2.72)(pg@8.11.3)(postgres@3.4.4)(react@18.2.0)\n+    version: 0.30.5(@types/react@18.2.72)(pg@8.11.3)(postgres@3.4.4)(react@18.2.0)\n   geist:\n     specifier: ^1.2.2\n     version: 1.3.0(next@14.2.0-canary.44)\n@@ -2725,8 +2725,8 @@ packages:\n       - supports-color\n     dev: true\n \n-  /drizzle-orm@0.30.4(@types/react@18.2.72)(pg@8.11.3)(postgres@3.4.4)(react@18.2.0):\n-    resolution: {integrity: sha512-kWoSMGbrOFkmkAweLTFtHJMpN+nwhx89q0mLELqT2aEU+1szNV8jrnBmJwZ0WGNp7J7yQn/ezEtxBI/qzTSElQ==}\n+  /drizzle-orm@0.30.5(@types/react@18.2.72)(pg@8.11.3)(postgres@3.4.4)(react@18.2.0):\n+    resolution: {integrity: sha512-oImmwGpe1jTWvhPkpsnramZA8m/lE8krTj7Ws7KHSFCMshMXmcZWX2g2Ki793PQOBmwI50KYzWJ9yNKKhWYLyA==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=3'",
    "output": "fix(deps): update dependency drizzle-orm to v0.30.5"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex e806005..460c86f 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -58,7 +58,7 @@ dependencies:\n     version: 0.30.4(@types/react@18.2.70)(pg@8.11.3)(postgres@3.4.4)(react@18.2.0)\n   geist:\n     specifier: ^1.2.2\n-    version: 1.2.2(next@14.2.0-canary.43)\n+    version: 1.3.0(next@14.2.0-canary.43)\n   million:\n     specifier: ^3.0.4\n     version: 3.0.6\n@@ -3579,10 +3579,10 @@ packages:\n     resolution: {integrity: sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==}\n     dev: true\n \n-  /geist@1.2.2(next@14.2.0-canary.43):\n-    resolution: {integrity: sha512-uRDrxhvdnPwWJmh+K5+/5LXSKwvJzaYCl9tDXgiBi4hj7hB4K7+n/WLcvJMFs5btvyn0r9OSwCd1s6CmqAsxEw==}\n+  /geist@1.3.0(next@14.2.0-canary.43):\n+    resolution: {integrity: sha512-IoGBfcqVEYB4bEwsfHd35jF4+X9LHRPYZymHL4YOltHSs9LJa24DYs1Z7rEMQ/lsEvaAIc61Y9aUxgcJaQ8lrg==}\n     peerDependencies:\n-      next: '>=13.2.0 <15'\n+      next: '>=13.2.0 <15.0.0-0'\n     dependencies:\n       next: 14.2.0-canary.43(@babel/core@7.24.0)(react-dom@18.2.0)(react@18.2.0)\n     dev: false",
    "output": "fix(deps): update dependency geist to v1.3.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 43994a2..b884c92 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -40,7 +40,7 @@ dependencies:\n     version: 0.9.2(typescript@5.4.3)(zod@3.22.4)\n   '@tanstack/react-table':\n     specifier: ^8.13.2\n-    version: 8.14.0(react-dom@18.2.0)(react@18.2.0)\n+    version: 8.15.0(react-dom@18.2.0)(react@18.2.0)\n   class-variance-authority:\n     specifier: ^0.7.0\n     version: 0.7.0\n@@ -1828,12 +1828,12 @@ packages:\n       zod: 3.22.4\n     dev: false\n \n-  /@tanstack/react-table@8.14.0(react-dom@18.2.0)(react@18.2.0):\n-    resolution: {integrity: sha512-l9iwO99oz/azy5RT5VkVRsHHuy7o//fiXgLxzl3fad8qf7Bj+9ihsfmE6Q+BNjH4wHbxZkahwxtb3ngGq9FQxA==}\n+  /@tanstack/react-table@8.15.0(react-dom@18.2.0)(react@18.2.0):\n+    resolution: {integrity: sha512-8K4RSROUtXUtfiezV6Ehl8z99axFrkQnxXi0vjWBJv3Tsm5x4EyrgXI7d2tOOMoANykKZLB6S1sGZGemoMRt7Q==}\n     engines: {node: '>=12'}\n     peerDependencies:\n-      react: '>=16'\n-      react-dom: '>=16'\n+      react: '>=16.8'\n+      react-dom: '>=16.8'\n     dependencies:\n       '@tanstack/table-core': 8.14.0\n       react: 18.2.0",
    "output": "fix(deps): update dependency @tanstack/react-table to v8.15.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 79b0ae7..df83492 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -52,7 +52,7 @@ dependencies:\n     version: 1.0.0(@types/react-dom@18.2.22)(@types/react@18.2.67)(react-dom@18.2.0)(react@18.2.0)\n   drizzle-orm:\n     specifier: ^0.30.0\n-    version: 0.30.4(@types/react@18.2.67)(pg@8.11.3)(postgres@3.4.3)(react@18.2.0)\n+    version: 0.30.4(@types/react@18.2.67)(pg@8.11.3)(postgres@3.4.4)(react@18.2.0)\n   geist:\n     specifier: ^1.2.2\n     version: 1.2.2(next@14.2.0-canary.35)\n@@ -70,7 +70,7 @@ dependencies:\n     version: 0.3.0(react-dom@18.2.0)(react@18.2.0)\n   postgres:\n     specifier: ^3.4.3\n-    version: 3.4.3\n+    version: 3.4.4\n   react:\n     specifier: 18.2.0\n     version: 18.2.0\n@@ -2695,7 +2695,7 @@ packages:\n       - supports-color\n     dev: true\n \n-  /drizzle-orm@0.30.4(@types/react@18.2.67)(pg@8.11.3)(postgres@3.4.3)(react@18.2.0):\n+  /drizzle-orm@0.30.4(@types/react@18.2.67)(pg@8.11.3)(postgres@3.4.4)(react@18.2.0):\n     resolution: {integrity: sha512-kWoSMGbrOFkmkAweLTFtHJMpN+nwhx89q0mLELqT2aEU+1szNV8jrnBmJwZ0WGNp7J7yQn/ezEtxBI/qzTSElQ==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n@@ -2774,7 +2774,7 @@ packages:\n     dependencies:\n       '@types/react': 18.2.67\n       pg: 8.11.3\n-      postgres: 3.4.3\n+      postgres: 3.4.4\n       react: 18.2.0\n     dev: false\n \n@@ -4613,8 +4613,8 @@ packages:\n     dependencies:\n       xtend: 4.0.2\n \n-  /postgres@3.4.3:\n-    resolution: {integrity: sha512-iHJn4+M9vbTdHSdDzNkC0crHq+1CUdFhx+YqCE+SqWxPjm+Zu63jq7yZborOBF64c8pc58O5uMudyL1FQcHacA==}\n+  /postgres@3.4.4:\n+    resolution: {integrity: sha512-IbyN+9KslkqcXa8AO9fxpk97PA4pzewvpi2B3Dwy9u4zpV32QicaEdgmF3eSQUzdRk7ttDHQejNgAEr4XoeH4A==}\n     engines: {node: '>=12'}\n     dev: false\n ",
    "output": "fix(deps): update dependency postgres to v3.4.4"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 3d8bc8f..bab0734 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -82,7 +82,7 @@ dependencies:\n     version: 0.0.1\n   sonner:\n     specifier: ^1.4.3\n-    version: 1.4.32(react-dom@18.2.0)(react@18.2.0)\n+    version: 1.4.41(react-dom@18.2.0)(react@18.2.0)\n   tailwind-merge:\n     specifier: ^2.2.1\n     version: 2.2.2\n@@ -4949,8 +4949,8 @@ packages:\n     engines: {node: '>=8'}\n     dev: true\n \n-  /sonner@1.4.32(react-dom@18.2.0)(react@18.2.0):\n-    resolution: {integrity: sha512-MYdvJgx2wM8a7fnzZr7KWZJY2ukSoqh7fsshZYEVljTSuJKNesMgfQ95+kyduGh6t500wxvLm6jjffxB4M58ZA==}\n+  /sonner@1.4.41(react-dom@18.2.0)(react@18.2.0):\n+    resolution: {integrity: sha512-uG511ggnnsw6gcn/X+YKkWPo5ep9il9wYi3QJxHsYe7yTZ4+cOd1wuodOUmOpFuXL+/RE3R04LczdNCDygTDgQ==}\n     peerDependencies:\n       react: ^18.0.0\n       react-dom: ^18.0.0",
    "output": "fix(deps): update dependency sonner to v1.4.41"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 53cd6f3..8ecb98e 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -120,7 +120,7 @@ devDependencies:\n     version: 7.3.0(eslint@8.57.0)(typescript@5.4.3)\n   autoprefixer:\n     specifier: ^10.4.18\n-    version: 10.4.18(postcss@8.4.37)\n+    version: 10.4.19(postcss@8.4.37)\n   dotenv-cli:\n     specifier: ^7.3.0\n     version: 7.4.1\n@@ -2272,15 +2272,15 @@ packages:\n     resolution: {integrity: sha512-OH/2E5Fg20h2aPrbe+QL8JZQFko0YZaF+j4mnQ7BGhfavO7OpSLa8a0y9sBwomHdSbkhTS8TQNayBfnW5DwbvQ==}\n     dev: true\n \n-  /autoprefixer@10.4.18(postcss@8.4.37):\n-    resolution: {integrity: sha512-1DKbDfsr6KUElM6wg+0zRNkB/Q7WcKYAaK+pzXn+Xqmszm/5Xa9coeNdtP88Vi+dPzZnMjhge8GIV49ZQkDa+g==}\n+  /autoprefixer@10.4.19(postcss@8.4.37):\n+    resolution: {integrity: sha512-BaENR2+zBZ8xXhM4pUaKUxlVdxZ0EZhjvbopwnXmxRUfqDmwSpC2lAi/QXvx7NRdPCo1WKEcEF6mV64si1z4Ew==}\n     engines: {node: ^10 || ^12 || >=14}\n     hasBin: true\n     peerDependencies:\n       postcss: ^8.1.0\n     dependencies:\n       browserslist: 4.23.0\n-      caniuse-lite: 1.0.30001594\n+      caniuse-lite: 1.0.30001599\n       fraction.js: 4.3.7\n       normalize-range: 0.1.2\n       picocolors: 1.0.0\n@@ -2336,8 +2336,8 @@ packages:\n     engines: {node: ^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7}\n     hasBin: true\n     dependencies:\n-      caniuse-lite: 1.0.30001594\n-      electron-to-chromium: 1.4.692\n+      caniuse-lite: 1.0.30001599\n+      electron-to-chromium: 1.4.713\n       node-releases: 2.0.14\n       update-browserslist-db: 1.0.13(browserslist@4.23.0)\n \n@@ -2383,6 +2383,10 @@ packages:\n \n   /caniuse-lite@1.0.30001594:\n     resolution: {integrity: sha512-VblSX6nYqyJVs8DKFMldE2IVCJjZ225LW00ydtUWwh5hk9IfkTOffO6r8gJNsH0qqqeAF8KrbMYA2VEwTlGW5g==}\n+    dev: false\n+\n+  /caniuse-lite@1.0.30001599:\n+    resolution: {integrity: sha512-LRAQHZ4yT1+f9LemSMeqdMpMxZcc4RMWdj4tiFe3G8tNkWK+E58g+/tzotb5cU6TbcVJLr4fySiAW7XmxQvZQA==}\n \n   /chalk@2.4.2:\n     resolution: {integrity: sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==}\n@@ -2781,8 +2785,8 @@ packages:\n   /eastasianwidth@0.2.0:\n     resolution: {integrity: sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==}\n \n-  /electron-to-chromium@1.4.692:\n-    resolution: {integrity: sha512-d5rZRka9n2Y3MkWRN74IoAsxR0HK3yaAt7T50e3iT9VZmCCQDT3geXUO5ZRMhDToa1pkCeQXuNo+0g+NfDOVPA==}\n+  /electron-to-chromium@1.4.713:\n+    resolution: {integrity: sha512-vDarADhwntXiULEdmWd77g2dV6FrNGa8ecAC29MZ4TwPut2fvosD0/5sJd1qWNNe8HcJFAC+F5Lf9jW1NPtWmw==}\n \n   /emoji-regex@8.0.0:\n     resolution: {integrity: sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==}",
    "output": "chore(deps): update dependency autoprefixer to v10.4.19"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex e30b9ae..353fe06 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -82,7 +82,7 @@ dependencies:\n     version: 0.0.1\n   sonner:\n     specifier: ^1.4.3\n-    version: 1.4.3(react-dom@18.2.0)(react@18.2.0)\n+    version: 1.4.32(react-dom@18.2.0)(react@18.2.0)\n   tailwind-merge:\n     specifier: ^2.2.1\n     version: 2.2.2\n@@ -4949,8 +4949,8 @@ packages:\n     engines: {node: '>=8'}\n     dev: true\n \n-  /sonner@1.4.3(react-dom@18.2.0)(react@18.2.0):\n-    resolution: {integrity: sha512-SArYlHbkjqRuLiR0iGY2ZSr09oOrxw081ZZkQPfXrs8aZQLIBOLOdzTYxGJB5yIZ7qL56UEPmrX1YqbODwG0Lw==}\n+  /sonner@1.4.32(react-dom@18.2.0)(react@18.2.0):\n+    resolution: {integrity: sha512-MYdvJgx2wM8a7fnzZr7KWZJY2ukSoqh7fsshZYEVljTSuJKNesMgfQ95+kyduGh6t500wxvLm6jjffxB4M58ZA==}\n     peerDependencies:\n       react: ^18.0.0\n       react-dom: ^18.0.0",
    "output": "fix(deps): update dependency sonner to v1.4.32"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 215023b..e30b9ae 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -40,7 +40,7 @@ dependencies:\n     version: 0.9.2(typescript@5.4.2)(zod@3.22.4)\n   '@tanstack/react-table':\n     specifier: ^8.13.2\n-    version: 8.13.2(react-dom@18.2.0)(react@18.2.0)\n+    version: 8.14.0(react-dom@18.2.0)(react@18.2.0)\n   class-variance-authority:\n     specifier: ^0.7.0\n     version: 0.7.0\n@@ -1828,20 +1828,20 @@ packages:\n       zod: 3.22.4\n     dev: false\n \n-  /@tanstack/react-table@8.13.2(react-dom@18.2.0)(react@18.2.0):\n-    resolution: {integrity: sha512-b6mR3mYkjRtJ443QZh9sc7CvGTce81J35F/XMr0OoWbx0KIM7TTTdyNP2XKObvkLpYnLpCrYDwI3CZnLezWvpg==}\n+  /@tanstack/react-table@8.14.0(react-dom@18.2.0)(react@18.2.0):\n+    resolution: {integrity: sha512-l9iwO99oz/azy5RT5VkVRsHHuy7o//fiXgLxzl3fad8qf7Bj+9ihsfmE6Q+BNjH4wHbxZkahwxtb3ngGq9FQxA==}\n     engines: {node: '>=12'}\n     peerDependencies:\n       react: '>=16'\n       react-dom: '>=16'\n     dependencies:\n-      '@tanstack/table-core': 8.13.2\n+      '@tanstack/table-core': 8.14.0\n       react: 18.2.0\n       react-dom: 18.2.0(react@18.2.0)\n     dev: false\n \n-  /@tanstack/table-core@8.13.2:\n-    resolution: {integrity: sha512-/2saD1lWBUV6/uNAwrsg2tw58uvMJ07bO2F1IWMxjFRkJiXKQRuc3Oq2aufeobD3873+4oIM/DRySIw7+QsPPw==}\n+  /@tanstack/table-core@8.14.0:\n+    resolution: {integrity: sha512-wDhpKJahGHWhmRt4RxtV3pES63CoeadljGWS/xeS9OJr1HBl2NB+OO44ht3sxDH5j5TRDAbQzC0NvSlsUfn7lQ==}\n     engines: {node: '>=12'}\n     dev: false\n ",
    "output": "fix(deps): update dependency @tanstack/react-table to v8.14.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex f696afc..cf9da17 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -52,7 +52,7 @@ dependencies:\n     version: 1.0.0(@types/react-dom@18.2.22)(@types/react@18.2.67)(react-dom@18.2.0)(react@18.2.0)\n   drizzle-orm:\n     specifier: ^0.30.0\n-    version: 0.30.3(@types/react@18.2.67)(pg@8.11.3)(postgres@3.4.3)(react@18.2.0)\n+    version: 0.30.4(@types/react@18.2.67)(pg@8.11.3)(postgres@3.4.3)(react@18.2.0)\n   geist:\n     specifier: ^1.2.2\n     version: 1.2.2(next@14.2.0-canary.30)\n@@ -2675,8 +2675,8 @@ packages:\n       - supports-color\n     dev: true\n \n-  /drizzle-orm@0.30.3(@types/react@18.2.67)(pg@8.11.3)(postgres@3.4.3)(react@18.2.0):\n-    resolution: {integrity: sha512-tmIUPy71Ca7BUD5M7Tn9bvXESDWoj66d6lTdKCdf30V26xDFFjbx7DMamhOiWU+H1fflBk5rCdtGyt2SiFPgRg==}\n+  /drizzle-orm@0.30.4(@types/react@18.2.67)(pg@8.11.3)(postgres@3.4.3)(react@18.2.0):\n+    resolution: {integrity: sha512-kWoSMGbrOFkmkAweLTFtHJMpN+nwhx89q0mLELqT2aEU+1szNV8jrnBmJwZ0WGNp7J7yQn/ezEtxBI/qzTSElQ==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=3'\n@@ -2690,6 +2690,7 @@ packages:\n       '@types/react': '>=18'\n       '@types/sql.js': '*'\n       '@vercel/postgres': '*'\n+      '@xata.io/client': '*'\n       better-sqlite3: '>=7'\n       bun-types: '*'\n       expo-sqlite: '>=13.2.0'\n@@ -2726,6 +2727,8 @@ packages:\n         optional: true\n       '@vercel/postgres':\n         optional: true\n+      '@xata.io/client':\n+        optional: true\n       better-sqlite3:\n         optional: true\n       bun-types:",
    "output": "fix(deps): update dependency drizzle-orm to v0.30.4"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 99b143e..8fcd906 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -105,7 +105,7 @@ devDependencies:\n     version: 8.56.6\n   '@types/node':\n     specifier: ^20.11.24\n-    version: 20.11.29\n+    version: 20.11.30\n   '@types/react':\n     specifier: ^18.2.63\n     version: 18.2.67\n@@ -1855,8 +1855,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.11.29:\n-    resolution: {integrity: sha512-P99thMkD/1YkCvAtOd6/zGedKNA0p2fj4ZpjCzcNiSCBWgm3cNRTBfa/qjFnsKkkojxu4vVLtWpesnZ9+ap+gA==}\n+  /@types/node@20.11.30:\n+    resolution: {integrity: sha512-dHM6ZxwlmuZaRmUPfv1p+KrdD1Dci04FbdEm/9wEMouFqxYoFl5aMkt0VMAUtYRQDyYvD41WJLukhq/ha3YuTw==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.11.30"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 4fb7ed1..99b143e 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -102,7 +102,7 @@ devDependencies:\n     version: 4.2.1(prettier@3.2.5)\n   '@types/eslint':\n     specifier: ^8.56.5\n-    version: 8.56.5\n+    version: 8.56.6\n   '@types/node':\n     specifier: ^20.11.24\n     version: 20.11.29\n@@ -1837,8 +1837,8 @@ packages:\n     engines: {node: '>=12'}\n     dev: false\n \n-  /@types/eslint@8.56.5:\n-    resolution: {integrity: sha512-u5/YPJHo1tvkSF2CE0USEkxon82Z5DBy2xR+qfyYNszpX9qcs4sT6uq2kBbj4BXY1+DBGDPnrhMZV3pKWGNukw==}\n+  /@types/eslint@8.56.6:\n+    resolution: {integrity: sha512-ymwc+qb1XkjT/gfoQwxIeHZ6ixH23A+tCT2ADSA/DPVKzAjwYkTXBMCQ/f6fe4wEa85Lhp26VPeUxI7wMhAi7A==}\n     dependencies:\n       '@types/estree': 1.0.5\n       '@types/json-schema': 7.0.15",
    "output": "chore(deps): update dependency @types/eslint to v8.56.6"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex dd6d923..b3f15ee 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -52,7 +52,7 @@ dependencies:\n     version: 1.0.0(@types/react-dom@18.2.22)(@types/react@18.2.67)(react-dom@18.2.0)(react@18.2.0)\n   drizzle-orm:\n     specifier: ^0.30.0\n-    version: 0.30.1(@types/react@18.2.67)(pg@8.11.3)(postgres@3.4.3)(react@18.2.0)\n+    version: 0.30.3(@types/react@18.2.67)(pg@8.11.3)(postgres@3.4.3)(react@18.2.0)\n   geist:\n     specifier: ^1.2.2\n     version: 1.2.2(next@14.2.0-canary.28)\n@@ -2675,8 +2675,8 @@ packages:\n       - supports-color\n     dev: true\n \n-  /drizzle-orm@0.30.1(@types/react@18.2.67)(pg@8.11.3)(postgres@3.4.3)(react@18.2.0):\n-    resolution: {integrity: sha512-5P6CXl4XyWtDDiYOX/jYOJp1HTUmBlXRAwaq+muUOgaSykMEy5sJesCxceMT0oCGvxeWkKfSXo5owLnfKwCIdw==}\n+  /drizzle-orm@0.30.3(@types/react@18.2.67)(pg@8.11.3)(postgres@3.4.3)(react@18.2.0):\n+    resolution: {integrity: sha512-tmIUPy71Ca7BUD5M7Tn9bvXESDWoj66d6lTdKCdf30V26xDFFjbx7DMamhOiWU+H1fflBk5rCdtGyt2SiFPgRg==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=3'",
    "output": "fix(deps): update dependency drizzle-orm to v0.30.3"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex f76c537..8a3391c 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -105,7 +105,7 @@ devDependencies:\n     version: 8.56.5\n   '@types/node':\n     specifier: ^20.11.24\n-    version: 20.11.28\n+    version: 20.11.29\n   '@types/react':\n     specifier: ^18.2.63\n     version: 18.2.67\n@@ -1855,8 +1855,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.11.28:\n-    resolution: {integrity: sha512-M/GPWVS2wLkSkNHVeLkrF2fD5Lx5UC4PxA0uZcKc6QqbIQUJyW1jVjueJYi1z8n0I5PxYrtpnPnWglE+y9A0KA==}\n+  /@types/node@20.11.29:\n+    resolution: {integrity: sha512-P99thMkD/1YkCvAtOd6/zGedKNA0p2fj4ZpjCzcNiSCBWgm3cNRTBfa/qjFnsKkkojxu4vVLtWpesnZ9+ap+gA==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.11.29"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex cab40a2..0b83025 100644\n--- a/package.json\n+++ b/package.json\n@@ -81,5 +81,5 @@\n   \"ct3aMetadata\": {\n     \"initVersion\": \"7.23.1\"\n   },\n-  \"packageManager\": \"pnpm@8.15.4\"\n+  \"packageManager\": \"pnpm@8.15.5\"\n }",
    "output": "chore(deps): update pnpm to v8.15.5"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 54e5f1b..85a479f 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -85,7 +85,7 @@ dependencies:\n     version: 1.4.3(react-dom@18.2.0)(react@18.2.0)\n   tailwind-merge:\n     specifier: ^2.2.1\n-    version: 2.2.1\n+    version: 2.2.2\n   tailwindcss-animate:\n     specifier: ^1.0.7\n     version: 1.0.7(tailwindcss@3.4.1)\n@@ -5015,8 +5015,8 @@ packages:\n     resolution: {integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==}\n     engines: {node: '>= 0.4'}\n \n-  /tailwind-merge@2.2.1:\n-    resolution: {integrity: sha512-o+2GTLkthfa5YUt4JxPfzMIpQzZ3adD1vLVkvKE1Twl9UAhGsEbIZhHHZVRttyW177S8PDJI3bTQNaebyofK3Q==}\n+  /tailwind-merge@2.2.2:\n+    resolution: {integrity: sha512-tWANXsnmJzgw6mQ07nE3aCDkCK4QdT3ThPMCzawoYA2Pws7vSTCvz3Vrjg61jVUGfFZPJzxEP+NimbcW+EdaDw==}\n     dependencies:\n       '@babel/runtime': 7.24.0\n     dev: false",
    "output": "fix(deps): update dependency tailwind-merge to v2.2.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex e76a012..7057b0c 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -99,7 +99,7 @@ devDependencies:\n     version: 8.4.1\n   '@ianvs/prettier-plugin-sort-imports':\n     specifier: ^4.1.1\n-    version: 4.2.0(prettier@3.2.5)\n+    version: 4.2.1(prettier@3.2.5)\n   '@types/eslint':\n     specifier: ^8.56.5\n     version: 8.56.5\n@@ -150,7 +150,7 @@ devDependencies:\n     version: 3.2.5\n   prettier-plugin-tailwindcss:\n     specifier: ^0.5.11\n-    version: 0.5.12(@ianvs/prettier-plugin-sort-imports@4.2.0)(prettier@3.2.5)\n+    version: 0.5.12(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.2.5)\n   tailwindcss:\n     specifier: ^3.4.1\n     version: 3.4.1\n@@ -870,8 +870,8 @@ packages:\n     resolution: {integrity: sha512-6EwiSjwWYP7pTckG6I5eyFANjPhmPjUX9JRLUSfNPC7FX7zK9gyZAfUEaECL6ALTpGX5AjnBq3C9XmVWPitNpw==}\n     dev: true\n \n-  /@ianvs/prettier-plugin-sort-imports@4.2.0(prettier@3.2.5):\n-    resolution: {integrity: sha512-WemEN61+hI4sQs+Ndp7TJAG5pMl7pY+tVAw+kt+Lj8vbgxRZaFQ8bU9nhjH2C45G9AABqFOQnY6j9drFGMmkyA==}\n+  /@ianvs/prettier-plugin-sort-imports@4.2.1(prettier@3.2.5):\n+    resolution: {integrity: sha512-NKN1LVFWUDGDGr3vt+6Ey3qPeN/163uR1pOPAlkWpgvAqgxQ6kSdUf1F0it8aHUtKRUzEGcK38Wxd07O61d7+Q==}\n     peerDependencies:\n       '@vue/compiler-sfc': 2.7.x || 3.x\n       prettier: 2 || 3\n@@ -4522,7 +4522,7 @@ packages:\n     engines: {node: '>= 0.8.0'}\n     dev: true\n \n-  /prettier-plugin-tailwindcss@0.5.12(@ianvs/prettier-plugin-sort-imports@4.2.0)(prettier@3.2.5):\n+  /prettier-plugin-tailwindcss@0.5.12(@ianvs/prettier-plugin-sort-imports@4.2.1)(prettier@3.2.5):\n     resolution: {integrity: sha512-o74kiDBVE73oHW+pdkFSluHBL3cYEvru5YgEqNkBMFF7Cjv+w1vI565lTlfoJT4VLWDe0FMtZ7FkE/7a4pMXSQ==}\n     engines: {node: '>=14.21.3'}\n     peerDependencies:\n@@ -4574,7 +4574,7 @@ packages:\n       prettier-plugin-twig-melody:\n         optional: true\n     dependencies:\n-      '@ianvs/prettier-plugin-sort-imports': 4.2.0(prettier@3.2.5)\n+      '@ianvs/prettier-plugin-sort-imports': 4.2.1(prettier@3.2.5)\n       prettier: 3.2.5\n     dev: true\n ",
    "output": "chore(deps): update dependency @ianvs/prettier-plugin-sort-imports to v4.2.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 0549a62..05dfa2e 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -105,7 +105,7 @@ devDependencies:\n     version: 8.56.5\n   '@types/node':\n     specifier: ^20.11.24\n-    version: 20.11.27\n+    version: 20.11.28\n   '@types/react':\n     specifier: ^18.2.63\n     version: 18.2.66\n@@ -1855,8 +1855,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.11.27:\n-    resolution: {integrity: sha512-qyUZfMnCg1KEz57r7pzFtSGt49f6RPkPBis3Vo4PbS7roQEDn22hiHzl/Lo1q4i4hDEgBJmBF/NTNg2XR0HbFg==}\n+  /@types/node@20.11.28:\n+    resolution: {integrity: sha512-M/GPWVS2wLkSkNHVeLkrF2fD5Lx5UC4PxA0uZcKc6QqbIQUJyW1jVjueJYi1z8n0I5PxYrtpnPnWglE+y9A0KA==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.11.28"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/components/ui/toggle.tsx b/src/components/ui/toggle.tsx\ndeleted file mode 100644\nindex c50c273..0000000\n--- a/src/components/ui/toggle.tsx\n+++ /dev/null\n@@ -1,45 +0,0 @@\n-\"use client\"\n-\n-import * as React from \"react\"\n-import * as TogglePrimitive from \"@radix-ui/react-toggle\"\n-import { cva, type VariantProps } from \"class-variance-authority\"\n-\n-import { cn } from \"@/lib/utils\"\n-\n-const toggleVariants = cva(\n-  \"inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground\",\n-  {\n-    variants: {\n-      variant: {\n-        default: \"bg-transparent\",\n-        outline:\n-          \"border border-input bg-transparent shadow-sm hover:bg-accent hover:text-accent-foreground\",\n-      },\n-      size: {\n-        default: \"h-9 px-3\",\n-        sm: \"h-8 px-2\",\n-        lg: \"h-10 px-3\",\n-      },\n-    },\n-    defaultVariants: {\n-      variant: \"default\",\n-      size: \"default\",\n-    },\n-  }\n-)\n-\n-const Toggle = React.forwardRef<\n-  React.ElementRef<typeof TogglePrimitive.Root>,\n-  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n-    VariantProps<typeof toggleVariants>\n->(({ className, variant, size, ...props }, ref) => (\n-  <TogglePrimitive.Root\n-    ref={ref}\n-    className={cn(toggleVariants({ variant, size, className }))}\n-    {...props}\n-  />\n-))\n-\n-Toggle.displayName = TogglePrimitive.Root.displayName\n-\n-export { Toggle, toggleVariants }",
    "output": "fix: typeerror"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/app/_components/tasks-table.tsx b/src/app/_components/tasks-table.tsx\nindex e4192c4..8c088ed 100644\n--- a/src/app/_components/tasks-table.tsx\n+++ b/src/app/_components/tasks-table.tsx\n@@ -49,8 +49,8 @@ export function TasksTable({ tasksPromise }: TasksTableProps) {\n     React.useState<React.ReactNode | null>(null)\n \n   return (\n-    <div className=\"space-y-4\">\n-      <div className=\"flex w-fit items-center justify-center space-x-4 rounded-md border p-4\">\n+    <div className=\"space-y-4 overflow-hidden\">\n+      <div className=\"flex w-fit items-center justify-center space-x-4 overflow-x-auto rounded-md border p-4\">\n         <div className=\"flex items-center space-x-2\">\n           <Switch\n             id={`advanced-filter-${id}`}",
    "output": "fix: overflow issue"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/components/data-table/advanced/data-table-advanced-filter-item.tsx b/src/components/data-table/advanced/data-table-advanced-filter-item.tsx\nindex 529820b..57e9c6d 100644\n--- a/src/components/data-table/advanced/data-table-advanced-filter-item.tsx\n+++ b/src/components/data-table/advanced/data-table-advanced-filter-item.tsx\n@@ -138,8 +138,8 @@ export function DataTableAdvancedFilterItem<TData>({\n           )}\n         </Button>\n       </PopoverTrigger>\n-      <PopoverContent className=\"w-60 space-y-1 p-1.5 text-xs\" align=\"start\">\n-        <div className=\"flex items-center space-x-1 px-1 pt-0.5\">\n+      <PopoverContent className=\"w-60 space-y-1.5 p-2 text-xs\" align=\"start\">\n+        <div className=\"flex items-center space-x-1 pl-1 pr-0.5\">\n           <div className=\"flex flex-1 items-center space-x-1\">\n             <div className=\"capitalize\">{selectedOption.label}</div>\n             <Select onValueChange={(value) => setFilterVariety(value)}>",
    "output": "chore: sync"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 8b8dc09..780ac58 100644\n--- a/package.json\n+++ b/package.json\n@@ -46,6 +46,7 @@\n     \"postgres\": \"^3.4.3\",\n     \"react\": \"18.2.0\",\n     \"react-dom\": \"18.2.0\",\n+    \"server-only\": \"^0.0.1\",\n     \"sonner\": \"^1.4.3\",\n     \"tailwind-merge\": \"^2.2.1\",\n     \"tailwindcss-animate\": \"^1.0.7\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 9c4706c..49089e4 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -71,6 +71,9 @@ dependencies:\n   react-dom:\n     specifier: 18.2.0\n     version: 18.2.0(react@18.2.0)\n+  server-only:\n+    specifier: ^0.0.1\n+    version: 0.0.1\n   sonner:\n     specifier: ^1.4.3\n     version: 1.4.3(react-dom@18.2.0)(react@18.2.0)\n@@ -4732,6 +4735,10 @@ packages:\n       lru-cache: 6.0.0\n     dev: true\n \n+  /server-only@0.0.1:\n+    resolution: {integrity: sha512-qepMx2JxAa5jjfzxG79yPPq+8BuFToHd1hm7kI+Z4zAq1ftQiP7HcxMhDDItrbtwVeLg/cY2JnKnrcFkmiswNA==}\n+    dev: false\n+\n   /set-function-length@1.2.1:\n     resolution: {integrity: sha512-j4t6ccc+VsKwYHso+kElc5neZpjtq9EnRICFZtWyBsLojhmeF/ZBd/elqm22WJh/BziDe/SBiOeAt0m2mfLD0g==}\n     engines: {node: '>= 0.4'}\ndiff --git a/src/app/_lib/queries.ts b/src/app/_lib/queries.ts\nindex b541369..8a2def6 100644\n--- a/src/app/_lib/queries.ts\n+++ b/src/app/_lib/queries.ts\n@@ -1,4 +1,4 @@\n-\"use server\"\n+import \"server-only\"\n \n import { unstable_noStore as noStore } from \"next/cache\"\n import { db } from \"@/db\"\n@@ -10,10 +10,10 @@ import { filterColumn } from \"@/lib/filter-column\"\n \n import { type getTasksSchema } from \"./validations\"\n \n-export async function getTasks(search: z.infer<typeof getTasksSchema>) {\n+export async function getTasks(input: z.infer<typeof getTasksSchema>) {\n   noStore()\n   try {\n-    const { page, per_page, sort, title, status, priority, operator } = search\n+    const { page, per_page, sort, title, status, priority, operator } = input\n \n     // Offset to paginate the results\n     const offset = (page - 1) * per_page\n@@ -83,7 +83,7 @@ export async function getTasks(search: z.infer<typeof getTasksSchema>) {\n \n       const count = await tx\n         .select({\n-          count: sql<number>`count(${tasks.id})`.mapWith(Number),\n+          count: sql`count(*)`.mapWith(Number),\n         })\n         .from(tasks)\n         .where(",
    "output": "chore: add server-only"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex d840dc9..dd8a6b9 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -90,7 +90,7 @@ devDependencies:\n     version: 8.4.1\n   '@ianvs/prettier-plugin-sort-imports':\n     specifier: ^4.1.1\n-    version: 4.1.1(prettier@3.2.5)\n+    version: 4.2.0(prettier@3.2.5)\n   '@types/eslint':\n     specifier: ^8.56.5\n     version: 8.56.5\n@@ -141,7 +141,7 @@ devDependencies:\n     version: 3.2.5\n   prettier-plugin-tailwindcss:\n     specifier: ^0.5.11\n-    version: 0.5.12(@ianvs/prettier-plugin-sort-imports@4.1.1)(prettier@3.2.5)\n+    version: 0.5.12(@ianvs/prettier-plugin-sort-imports@4.2.0)(prettier@3.2.5)\n   tailwindcss:\n     specifier: ^3.4.1\n     version: 3.4.1\n@@ -861,10 +861,10 @@ packages:\n     resolution: {integrity: sha512-6EwiSjwWYP7pTckG6I5eyFANjPhmPjUX9JRLUSfNPC7FX7zK9gyZAfUEaECL6ALTpGX5AjnBq3C9XmVWPitNpw==}\n     dev: true\n \n-  /@ianvs/prettier-plugin-sort-imports@4.1.1(prettier@3.2.5):\n-    resolution: {integrity: sha512-kJhXq63ngpTQ2dxgf5GasbPJWsJA3LgoOdd7WGhpUSzLgLgI4IsIzYkbJf9kmpOHe7Vdm/o3PcRA3jmizXUuAQ==}\n+  /@ianvs/prettier-plugin-sort-imports@4.2.0(prettier@3.2.5):\n+    resolution: {integrity: sha512-WemEN61+hI4sQs+Ndp7TJAG5pMl7pY+tVAw+kt+Lj8vbgxRZaFQ8bU9nhjH2C45G9AABqFOQnY6j9drFGMmkyA==}\n     peerDependencies:\n-      '@vue/compiler-sfc': '>=3.0.0'\n+      '@vue/compiler-sfc': 2.7.x || 3.x\n       prettier: 2 || 3\n     peerDependenciesMeta:\n       '@vue/compiler-sfc':\n@@ -4465,7 +4465,7 @@ packages:\n     engines: {node: '>= 0.8.0'}\n     dev: true\n \n-  /prettier-plugin-tailwindcss@0.5.12(@ianvs/prettier-plugin-sort-imports@4.1.1)(prettier@3.2.5):\n+  /prettier-plugin-tailwindcss@0.5.12(@ianvs/prettier-plugin-sort-imports@4.2.0)(prettier@3.2.5):\n     resolution: {integrity: sha512-o74kiDBVE73oHW+pdkFSluHBL3cYEvru5YgEqNkBMFF7Cjv+w1vI565lTlfoJT4VLWDe0FMtZ7FkE/7a4pMXSQ==}\n     engines: {node: '>=14.21.3'}\n     peerDependencies:\n@@ -4517,7 +4517,7 @@ packages:\n       prettier-plugin-twig-melody:\n         optional: true\n     dependencies:\n-      '@ianvs/prettier-plugin-sort-imports': 4.1.1(prettier@3.2.5)\n+      '@ianvs/prettier-plugin-sort-imports': 4.2.0(prettier@3.2.5)\n       prettier: 3.2.5\n     dev: true\n ",
    "output": "chore(deps): update dependency @ianvs/prettier-plugin-sort-imports to v4.2.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex b71e6fe..e51c7be 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -96,7 +96,7 @@ devDependencies:\n     version: 8.56.5\n   '@types/node':\n     specifier: ^20.11.24\n-    version: 20.11.26\n+    version: 20.11.27\n   '@types/react':\n     specifier: ^18.2.63\n     version: 18.2.65\n@@ -1798,8 +1798,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.11.26:\n-    resolution: {integrity: sha512-YwOMmyhNnAWijOBQweOJnQPl068Oqd4K3OFbTc6AHJwzweUwwWG3GIFY74OKks2PJUDkQPeddOQES9mLn1CTEQ==}\n+  /@types/node@20.11.27:\n+    resolution: {integrity: sha512-qyUZfMnCg1KEz57r7pzFtSGt49f6RPkPBis3Vo4PbS7roQEDn22hiHzl/Lo1q4i4hDEgBJmBF/NTNg2XR0HbFg==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.11.27"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 6bedb42..eef2dd4 100644\n--- a/package.json\n+++ b/package.json\n@@ -42,7 +42,7 @@\n     \"million\": \"^3.0.4\",\n     \"nanoid\": \"^5.0.6\",\n     \"next\": \"14.2.0-canary.19\",\n-    \"next-themes\": \"^0.2.1\",\n+    \"next-themes\": \"^0.3.0\",\n     \"postgres\": \"^3.4.3\",\n     \"react\": \"18.2.0\",\n     \"react-dom\": \"18.2.0\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 43e9574..5a537e9 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -60,8 +60,8 @@ dependencies:\n     specifier: 14.2.0-canary.19\n     version: 14.2.0-canary.19(@babel/core@7.24.0)(react-dom@18.2.0)(react@18.2.0)\n   next-themes:\n-    specifier: ^0.2.1\n-    version: 0.2.1(next@14.2.0-canary.19)(react-dom@18.2.0)(react@18.2.0)\n+    specifier: ^0.3.0\n+    version: 0.3.0(react-dom@18.2.0)(react@18.2.0)\n   postgres:\n     specifier: ^3.4.3\n     version: 3.4.3\n@@ -4082,14 +4082,12 @@ packages:\n     resolution: {integrity: sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==}\n     dev: true\n \n-  /next-themes@0.2.1(next@14.2.0-canary.19)(react-dom@18.2.0)(react@18.2.0):\n-    resolution: {integrity: sha512-B+AKNfYNIzh0vqQQKqQItTS8evEouKD7H5Hj3kmuPERwddR2TxvDSFZuTj6T7Jfn1oyeUyJMydPl1Bkxkh0W7A==}\n+  /next-themes@0.3.0(react-dom@18.2.0)(react@18.2.0):\n+    resolution: {integrity: sha512-/QHIrsYpd6Kfk7xakK4svpDI5mmXP0gfvCoJdGpZQ2TOrQZmsW0QxjaiLn8wbIKjtm4BTSqLoix4lxYYOnLJ/w==}\n     peerDependencies:\n-      next: '*'\n-      react: '*'\n-      react-dom: '*'\n+      react: ^16.8 || ^17 || ^18\n+      react-dom: ^16.8 || ^17 || ^18\n     dependencies:\n-      next: 14.2.0-canary.19(@babel/core@7.24.0)(react-dom@18.2.0)(react@18.2.0)\n       react: 18.2.0\n       react-dom: 18.2.0(react@18.2.0)\n     dev: false",
    "output": "fix(deps): update dependency next-themes to ^0.3.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex d461811..445ed07 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -129,7 +129,7 @@ devDependencies:\n     version: 9.1.0(eslint@8.57.0)\n   eslint-plugin-tailwindcss:\n     specifier: ^3.14.3\n-    version: 3.15.0(tailwindcss@3.4.1)\n+    version: 3.15.1(tailwindcss@3.4.1)\n   pg:\n     specifier: ^8.11.3\n     version: 8.11.3\n@@ -3174,8 +3174,8 @@ packages:\n       string.prototype.matchall: 4.0.10\n     dev: true\n \n-  /eslint-plugin-tailwindcss@3.15.0(tailwindcss@3.4.1):\n-    resolution: {integrity: sha512-mRs8OGJMxkCl8cD0wGjr9NbcRYJCN3D1TfgmIGb1L+3opqYyTT1jjVau1s6SUdVJqci3EfbxG60TJQtgqfEtTw==}\n+  /eslint-plugin-tailwindcss@3.15.1(tailwindcss@3.4.1):\n+    resolution: {integrity: sha512-4RXRMIaMG07C2TBEW1k0VM4+dDazz1kxcZhkK4zirvmHGZTA4jnlSO2kq5mamuSPi+Wo17dh2SlC8IyFBuCd7Q==}\n     engines: {node: '>=12.13.0'}\n     peerDependencies:\n       tailwindcss: ^3.4.0",
    "output": "chore(deps): update dependency eslint-plugin-tailwindcss to v3.15.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 79c89a9..e241365 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -96,7 +96,7 @@ devDependencies:\n     version: 8.56.5\n   '@types/node':\n     specifier: ^20.11.24\n-    version: 20.11.25\n+    version: 20.11.26\n   '@types/react':\n     specifier: ^18.2.63\n     version: 18.2.64\n@@ -1798,8 +1798,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.11.25:\n-    resolution: {integrity: sha512-TBHyJxk2b7HceLVGFcpAUjsa5zIdsPWlR6XHfyGzd0SFu+/NFgQgMAl96MSDZgQDvJAvV6BKsFOrt6zIL09JDw==}\n+  /@types/node@20.11.26:\n+    resolution: {integrity: sha512-YwOMmyhNnAWijOBQweOJnQPl068Oqd4K3OFbTc6AHJwzweUwwWG3GIFY74OKks2PJUDkQPeddOQES9mLn1CTEQ==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.11.26"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex fd3fd37..ca00b0c 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -129,7 +129,7 @@ devDependencies:\n     version: 9.1.0(eslint@8.57.0)\n   eslint-plugin-tailwindcss:\n     specifier: ^3.14.3\n-    version: 3.14.3(tailwindcss@3.4.1)\n+    version: 3.15.0(tailwindcss@3.4.1)\n   pg:\n     specifier: ^8.11.3\n     version: 8.11.3\n@@ -3174,8 +3174,8 @@ packages:\n       string.prototype.matchall: 4.0.10\n     dev: true\n \n-  /eslint-plugin-tailwindcss@3.14.3(tailwindcss@3.4.1):\n-    resolution: {integrity: sha512-1MKT8CrVuqVJleHxb7ICHsF2QwO0G+VJ28athTtlcOkccp0qmwK7nCUa1C9paCZ+VVgQU4fonsjLz/wUxoMHJQ==}\n+  /eslint-plugin-tailwindcss@3.15.0(tailwindcss@3.4.1):\n+    resolution: {integrity: sha512-mRs8OGJMxkCl8cD0wGjr9NbcRYJCN3D1TfgmIGb1L+3opqYyTT1jjVau1s6SUdVJqci3EfbxG60TJQtgqfEtTw==}\n     engines: {node: '>=12.13.0'}\n     peerDependencies:\n       tailwindcss: ^3.4.0",
    "output": "chore(deps): update dependency eslint-plugin-tailwindcss to v3.15.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/README.md b/README.md\nindex 87e0d94..01a470f 100644\n--- a/README.md\n+++ b/README.md\n@@ -108,7 +108,7 @@ Follow the deployment guides for [Vercel](https://create.t3.gg/en/deployment/ver\n 3. Configure your Environment Variables\n    Then set up the Database URL, for this example, we're using PlanetScale MySQL2 Database. Our schemas will also be made using this.\n \n-4. Database Actions: For this you can use any ORM of your choice, but for the sake of this particular example, we're using [Drizzle ORM](https://orm.drizzle.team) and [Neon](https://planetscale.com).\n+4. Database Actions: For this you can use any ORM of your choice, but for the sake of this particular example, we're using [Drizzle ORM](https://orm.drizzle.team) and [Neon](https://neon.tech/).\n \n    As an example, lets use the `tasks` table.\n ",
    "output": "docs: updade neon link (#101)"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex b5cb070..29ec9d7 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -114,7 +114,7 @@ devDependencies:\n     version: 10.4.18(postcss@8.4.35)\n   dotenv-cli:\n     specifier: ^7.3.0\n-    version: 7.4.0\n+    version: 7.4.1\n   drizzle-kit:\n     specifier: ^0.20.14\n     version: 0.20.14\n@@ -2569,8 +2569,8 @@ packages:\n       esutils: 2.0.3\n     dev: true\n \n-  /dotenv-cli@7.4.0:\n-    resolution: {integrity: sha512-fZGFOGCC5rEz1OJ0Pp+1LN8y78ClMcyXDmBEmjvJwqCqZVsPHcQ85bLCh5hZ4Bqotw4dptXOLvvw0vxm2MD30g==}\n+  /dotenv-cli@7.4.1:\n+    resolution: {integrity: sha512-fE1aywjRrWGxV3miaiUr3d2zC/VAiuzEGghi+QzgIA9fEf/M5hLMaRSXb4IxbUAwGmaLi0IozdZddnVU96acag==}\n     hasBin: true\n     dependencies:\n       cross-spawn: 7.0.3",
    "output": "chore(deps): update dependency dotenv-cli to v7.4.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex ac78e7e..b5cb070 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -52,7 +52,7 @@ dependencies:\n     version: 1.2.2(next@14.2.0-canary.11)\n   million:\n     specifier: ^3.0.4\n-    version: 3.0.5\n+    version: 3.0.6\n   nanoid:\n     specifier: ^5.0.6\n     version: 5.0.6\n@@ -813,11 +813,6 @@ packages:\n     engines: {node: ^14.17.0 || ^16.13.0 || >=18.0.0, npm: '>=6.14.13'}\n     dev: true\n \n-  /@fastify/busboy@2.1.1:\n-    resolution: {integrity: sha512-vBZP4NlzfOlerQTnba4aqZoMhE/a9HY7HRqoOPaETQcSQuWEIyZMHGfVu6w9wGtGK5fED5qRs2DteVCjOH60sA==}\n-    engines: {node: '>=14'}\n-    dev: false\n-\n   /@floating-ui/core@1.6.0:\n     resolution: {integrity: sha512-PcF++MykgmTj3CIyOQbKA/hDzOAiqI3mhuoN44WRCopIs1sgoDoU4oty4Jtqaj/y3oDU6fnVSm4QG0a3t5i0+g==}\n     dependencies:\n@@ -4009,16 +4004,16 @@ packages:\n       braces: 3.0.2\n       picomatch: 2.3.1\n \n-  /million@3.0.5:\n-    resolution: {integrity: sha512-4Ti0exibWnQGAyaxeuPEfW5gltQ23gK8rdRColorUMIS6sKXdsTKEaTg1R3X00fmJwonRWmTJQg3PeWAm/lvDw==}\n+  /million@3.0.6:\n+    resolution: {integrity: sha512-OLjRVASGOZdyZw2ctBSSOu5kb9PaxafqkueqVvw0iQtUUnTLVRk1EmtqcNAtJWCIm8wn+WGRpDbnp+5Hi8//Kg==}\n     hasBin: true\n     dependencies:\n       '@babel/core': 7.24.0\n       '@babel/types': 7.24.0\n       '@rollup/pluginutils': 5.1.0\n       kleur: 4.1.5\n-      undici: 6.7.0\n-      unplugin: 1.8.1\n+      undici: 6.7.1\n+      unplugin: 1.9.0\n     transitivePeerDependencies:\n       - rollup\n       - supports-color\n@@ -5156,15 +5151,14 @@ packages:\n     resolution: {integrity: sha512-JlCMO+ehdEIKqlFxk6IfVoAUVmgz7cU7zD/h9XZ0qzeosSHmUJVOzSQvvYSYWXkFXC+IfLKSIffhv0sVZup6pA==}\n     dev: true\n \n-  /undici@6.7.0:\n-    resolution: {integrity: sha512-IcWssIyDN1gk6Mcae44q04oRoWTKrW8OKz0effVK1xdWwAgMPnfpxhn9RXUSL5JlwSikO18R7Ibk7Nukz6kxWA==}\n+  /undici@6.7.1:\n+    resolution: {integrity: sha512-+Wtb9bAQw6HYWzCnxrPTMVEV3Q1QjYanI0E4q02ehReMuquQdLTEFEYbfs7hcImVYKcQkWSwT6buEmSVIiDDtQ==}\n     engines: {node: '>=18.0'}\n-    dependencies:\n-      '@fastify/busboy': 2.1.1\n     dev: false\n \n-  /unplugin@1.8.1:\n-    resolution: {integrity: sha512-NDAvOEnZmeSRRmjfD0FoLzfve2/9lqceO5bR4J/2V72zphnFdq7UYo3fg6F1y1HfZEaSHa+7bZgbEN+z5x8ZDQ==}\n+  /unplugin@1.9.0:\n+    resolution: {integrity: sha512-14PslvMY3gNbXnQtNIRB566Q057L5Fe7f5LDEamxVi0QQVxoz5hrveBwwZLcKyHtZ09ysmipxRRj5Lv+BGz2Iw==}\n+    engines: {node: '>=14.0.0'}\n     dependencies:\n       acorn: 8.11.3\n       chokidar: 3.6.0",
    "output": "fix(deps): update dependency million to v3.0.6"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex c42c8ad..ccb22cc 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -46,7 +46,7 @@ dependencies:\n     version: 1.0.0(@types/react-dom@18.2.21)(@types/react@18.2.64)(react-dom@18.2.0)(react@18.2.0)\n   drizzle-orm:\n     specifier: ^0.30.0\n-    version: 0.30.0(@types/react@18.2.64)(pg@8.11.3)(postgres@3.4.3)(react@18.2.0)\n+    version: 0.30.1(@types/react@18.2.64)(pg@8.11.3)(postgres@3.4.3)(react@18.2.0)\n   geist:\n     specifier: ^1.2.2\n     version: 1.2.2(next@14.2.0-canary.9)\n@@ -2623,13 +2623,14 @@ packages:\n       - supports-color\n     dev: true\n \n-  /drizzle-orm@0.30.0(@types/react@18.2.64)(pg@8.11.3)(postgres@3.4.3)(react@18.2.0):\n-    resolution: {integrity: sha512-SupNouCdvosjzQpLinqnyIu7bBfsUKiaWXfUZ0IyDtwK8rWa2zQ4AOWCda86VJVxgb8xZ1l8vKvlLHyTBalB/g==}\n+  /drizzle-orm@0.30.1(@types/react@18.2.64)(pg@8.11.3)(postgres@3.4.3)(react@18.2.0):\n+    resolution: {integrity: sha512-5P6CXl4XyWtDDiYOX/jYOJp1HTUmBlXRAwaq+muUOgaSykMEy5sJesCxceMT0oCGvxeWkKfSXo5owLnfKwCIdw==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=3'\n       '@libsql/client': '*'\n       '@neondatabase/serverless': '>=0.1'\n+      '@op-engineering/op-sqlite': '>=2'\n       '@opentelemetry/api': ^1.4.1\n       '@planetscale/database': '>=1'\n       '@types/better-sqlite3': '*'\n@@ -2657,6 +2658,8 @@ packages:\n         optional: true\n       '@neondatabase/serverless':\n         optional: true\n+      '@op-engineering/op-sqlite':\n+        optional: true\n       '@opentelemetry/api':\n         optional: true\n       '@planetscale/database':",
    "output": "fix(deps): update dependency drizzle-orm to v0.30.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/db/schema.ts b/src/db/schema.ts\nindex 541c4bc..0f062c4 100644\n--- a/src/db/schema.ts\n+++ b/src/db/schema.ts\n@@ -1,30 +1,28 @@\n import { pgTable } from \"@/db/utils\"\n import { pgEnum, varchar } from \"drizzle-orm/pg-core\"\n \n+import { databasePrefix } from \"@/lib/constants\"\n import { createId } from \"@/lib/utils\"\n \n-/**\n- * This is an example of how to use the multi-project schema feature of Drizzle ORM. Use the same\n- * database instance for multiple projects.\n- *\n- * @see https://orm.drizzle.team/docs/goodies#multi-project-schema\n- */\n-\n-export const statusEnum = pgEnum(\"shadcn_status\", [\n+export const statusEnum = pgEnum(`${databasePrefix}_status`, [\n   \"todo\",\n   \"in-progress\",\n   \"done\",\n   \"canceled\",\n ])\n \n-export const labelEnum = pgEnum(\"shadcn_label\", [\n+export const labelEnum = pgEnum(`${databasePrefix}_label`, [\n   \"bug\",\n   \"feature\",\n   \"enhancement\",\n   \"documentation\",\n ])\n \n-export const priorityEnum = pgEnum(\"shadcn_priority\", [\"low\", \"medium\", \"high\"])\n+export const priorityEnum = pgEnum(`${databasePrefix}_priority`, [\n+  \"low\",\n+  \"medium\",\n+  \"high\",\n+])\n \n export const tasks = pgTable(\"tasks\", {\n   id: varchar(\"id\", { length: 128 })\ndiff --git a/src/db/utils.ts b/src/db/utils.ts\nindex 09098e8..6837185 100644\n--- a/src/db/utils.ts\n+++ b/src/db/utils.ts\n@@ -2,4 +2,10 @@ import { pgTableCreator } from \"drizzle-orm/pg-core\"\n \n import { databasePrefix } from \"@/lib/constants\"\n \n+/**\n+ * This lets us use the multi-project schema feature of Drizzle ORM. So the same\n+ * database instance can be used for multiple projects.\n+ *\n+ * @see https://orm.drizzle.team/docs/goodies#multi-project-schema\n+ */\n export const pgTable = pgTableCreator((name) => `${databasePrefix}_${name}`)",
    "output": "refactor: stuffs"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 6d55d33..77b131f 100644\n--- a/package.json\n+++ b/package.json\n@@ -37,7 +37,7 @@\n     \"class-variance-authority\": \"^0.7.0\",\n     \"clsx\": \"^2.1.0\",\n     \"cmdk\": \"^0.2.1\",\n-    \"drizzle-orm\": \"^0.29.4\",\n+    \"drizzle-orm\": \"^0.30.0\",\n     \"geist\": \"^1.2.2\",\n     \"million\": \"^3.0.4\",\n     \"nanoid\": \"^5.0.6\",\ndiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 2bc2fc6..d6d4d05 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -45,8 +45,8 @@ dependencies:\n     specifier: ^0.2.1\n     version: 0.2.1(@types/react@18.2.64)(react-dom@18.2.0)(react@18.2.0)\n   drizzle-orm:\n-    specifier: ^0.29.4\n-    version: 0.29.5(@types/react@18.2.64)(pg@8.11.3)(postgres@3.4.3)(react@18.2.0)\n+    specifier: ^0.30.0\n+    version: 0.30.0(@types/react@18.2.64)(pg@8.11.3)(postgres@3.4.3)(react@18.2.0)\n   geist:\n     specifier: ^1.2.2\n     version: 1.2.2(next@14.2.0-canary.6)\n@@ -2806,8 +2806,8 @@ packages:\n       - supports-color\n     dev: true\n \n-  /drizzle-orm@0.29.5(@types/react@18.2.64)(pg@8.11.3)(postgres@3.4.3)(react@18.2.0):\n-    resolution: {integrity: sha512-jS3+uyzTz4P0Y2CICx8FmRQ1eplURPaIMWDn/yq6k4ShRFj9V7vlJk67lSf2kyYPzQ60GkkNGXcJcwrxZ6QCRw==}\n+  /drizzle-orm@0.30.0(@types/react@18.2.64)(pg@8.11.3)(postgres@3.4.3)(react@18.2.0):\n+    resolution: {integrity: sha512-SupNouCdvosjzQpLinqnyIu7bBfsUKiaWXfUZ0IyDtwK8rWa2zQ4AOWCda86VJVxgb8xZ1l8vKvlLHyTBalB/g==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=3'",
    "output": "fix(deps): update dependency drizzle-orm to ^0.30.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex f45e085..2bc2fc6 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -114,7 +114,7 @@ devDependencies:\n     version: 10.4.18(postcss@8.4.35)\n   dotenv-cli:\n     specifier: ^7.3.0\n-    version: 7.3.0\n+    version: 7.4.0\n   drizzle-kit:\n     specifier: ^0.20.14\n     version: 0.20.14\n@@ -2757,8 +2757,8 @@ packages:\n       esutils: 2.0.3\n     dev: true\n \n-  /dotenv-cli@7.3.0:\n-    resolution: {integrity: sha512-314CA4TyK34YEJ6ntBf80eUY+t1XaFLyem1k9P0sX1gn30qThZ5qZr/ZwE318gEnzyYP9yj9HJk6SqwE0upkfw==}\n+  /dotenv-cli@7.4.0:\n+    resolution: {integrity: sha512-fZGFOGCC5rEz1OJ0Pp+1LN8y78ClMcyXDmBEmjvJwqCqZVsPHcQ85bLCh5hZ4Bqotw4dptXOLvvw0vxm2MD30g==}\n     hasBin: true\n     dependencies:\n       cross-spawn: 7.0.3",
    "output": "chore(deps): update dependency dotenv-cli to v7.4.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/app/_lib/validations.ts b/src/app/_lib/validations.ts\nindex d668cf6..16d059d 100644\n--- a/src/app/_lib/validations.ts\n+++ b/src/app/_lib/validations.ts\n@@ -1,7 +1,7 @@\n import { tasks } from \"@/db/schema\"\n import * as z from \"zod\"\n \n-export const getTasksSchema = z.object({\n+export const searchParamsSchema = z.object({\n   page: z.coerce.number().default(1),\n   per_page: z.coerce.number().default(10),\n   sort: z.string().optional(),\n@@ -11,6 +11,8 @@ export const getTasksSchema = z.object({\n   operator: z.string().optional(),\n })\n \n+export const getTasksSchema = searchParamsSchema\n+\n export const updateTaskLabelSchema = z.object({\n   id: z.string(),\n   label: z.enum(tasks.label.enumValues),\ndiff --git a/src/app/page.tsx b/src/app/page.tsx\nindex 9cbab9d..7ee763b 100644\n--- a/src/app/page.tsx\n+++ b/src/app/page.tsx\n@@ -6,14 +6,14 @@ import { Shell } from \"@/components/shell\"\n \n import { TasksTable } from \"./_components/tasks-table\"\n import { getTasks } from \"./_lib/queries\"\n-import { getTasksSchema } from \"./_lib/validations\"\n+import { searchParamsSchema } from \"./_lib/validations\"\n \n export interface IndexPageProps {\n   searchParams: SearchParams\n }\n \n export default function IndexPage({ searchParams }: IndexPageProps) {\n-  const search = getTasksSchema.parse(searchParams)\n+  const search = searchParamsSchema.parse(searchParams)\n \n   const tasksPromise = getTasks(search)\n ",
    "output": "chore: rename"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex eb6c2b7..3e1ae77 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -46,7 +46,7 @@ dependencies:\n     version: 0.2.1(@types/react@18.2.64)(react-dom@18.2.0)(react@18.2.0)\n   drizzle-orm:\n     specifier: ^0.29.4\n-    version: 0.29.4(@types/react@18.2.64)(pg@8.11.3)(postgres@3.4.3)(react@18.2.0)\n+    version: 0.29.5(@types/react@18.2.64)(pg@8.11.3)(postgres@3.4.3)(react@18.2.0)\n   geist:\n     specifier: ^1.2.2\n     version: 1.2.2(next@14.2.0-canary.6)\n@@ -2806,8 +2806,8 @@ packages:\n       - supports-color\n     dev: true\n \n-  /drizzle-orm@0.29.4(@types/react@18.2.64)(pg@8.11.3)(postgres@3.4.3)(react@18.2.0):\n-    resolution: {integrity: sha512-ZnSM8TAxFhzH7p1s3+w3pRE/eKaOeNkH9SKitm717pubDVVcV2I0BCDBPGKV+pe02+wMfw37ntlTcCyo2rA3IA==}\n+  /drizzle-orm@0.29.5(@types/react@18.2.64)(pg@8.11.3)(postgres@3.4.3)(react@18.2.0):\n+    resolution: {integrity: sha512-jS3+uyzTz4P0Y2CICx8FmRQ1eplURPaIMWDn/yq6k4ShRFj9V7vlJk67lSf2kyYPzQ60GkkNGXcJcwrxZ6QCRw==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=3'",
    "output": "fix(deps): update dependency drizzle-orm to v0.29.5"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 5912e61..7be1868 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -141,7 +141,7 @@ devDependencies:\n     version: 3.2.5\n   prettier-plugin-tailwindcss:\n     specifier: ^0.5.11\n-    version: 0.5.11(@ianvs/prettier-plugin-sort-imports@4.1.1)(prettier@3.2.5)\n+    version: 0.5.12(@ianvs/prettier-plugin-sort-imports@4.1.1)(prettier@3.2.5)\n   tailwindcss:\n     specifier: ^3.4.1\n     version: 3.4.1\n@@ -4652,8 +4652,8 @@ packages:\n     engines: {node: '>= 0.8.0'}\n     dev: true\n \n-  /prettier-plugin-tailwindcss@0.5.11(@ianvs/prettier-plugin-sort-imports@4.1.1)(prettier@3.2.5):\n-    resolution: {integrity: sha512-AvI/DNyMctyyxGOjyePgi/gqj5hJYClZ1avtQvLlqMT3uDZkRbi4HhGUpok3DRzv9z7Lti85Kdj3s3/1CeNI0w==}\n+  /prettier-plugin-tailwindcss@0.5.12(@ianvs/prettier-plugin-sort-imports@4.1.1)(prettier@3.2.5):\n+    resolution: {integrity: sha512-o74kiDBVE73oHW+pdkFSluHBL3cYEvru5YgEqNkBMFF7Cjv+w1vI565lTlfoJT4VLWDe0FMtZ7FkE/7a4pMXSQ==}\n     engines: {node: '>=14.21.3'}\n     peerDependencies:\n       '@ianvs/prettier-plugin-sort-imports': '*'\n@@ -4668,6 +4668,7 @@ packages:\n       prettier-plugin-marko: '*'\n       prettier-plugin-organize-attributes: '*'\n       prettier-plugin-organize-imports: '*'\n+      prettier-plugin-sort-imports: '*'\n       prettier-plugin-style-order: '*'\n       prettier-plugin-svelte: '*'\n       prettier-plugin-twig-melody: '*'\n@@ -4694,6 +4695,8 @@ packages:\n         optional: true\n       prettier-plugin-organize-imports:\n         optional: true\n+      prettier-plugin-sort-imports:\n+        optional: true\n       prettier-plugin-style-order:\n         optional: true\n       prettier-plugin-svelte:",
    "output": "chore(deps): update dependency prettier-plugin-tailwindcss to v0.5.12"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 1275b65..0eb9cc5 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -96,7 +96,7 @@ devDependencies:\n     version: 8.56.5\n   '@types/node':\n     specifier: ^20.11.24\n-    version: 20.11.24\n+    version: 20.11.25\n   '@types/react':\n     specifier: ^18.2.63\n     version: 18.2.63\n@@ -1988,8 +1988,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.11.24:\n-    resolution: {integrity: sha512-Kza43ewS3xoLgCEpQrsT+xRo/EJej1y0kVYGiLFE1NEODXGzTfwiC6tXTLMQskn1X4/Rjlh0MQUvx9W+L9long==}\n+  /@types/node@20.11.25:\n+    resolution: {integrity: sha512-TBHyJxk2b7HceLVGFcpAUjsa5zIdsPWlR6XHfyGzd0SFu+/NFgQgMAl96MSDZgQDvJAvV6BKsFOrt6zIL09JDw==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.11.25"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 93ae89d..dc1a899 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -52,7 +52,7 @@ dependencies:\n     version: 1.2.2(next@14.2.0-canary.2)\n   million:\n     specifier: ^3.0.4\n-    version: 3.0.4\n+    version: 3.0.5\n   nanoid:\n     specifier: ^5.0.6\n     version: 5.0.6\n@@ -4189,8 +4189,8 @@ packages:\n       braces: 3.0.2\n       picomatch: 2.3.1\n \n-  /million@3.0.4:\n-    resolution: {integrity: sha512-ioO9dUL4nw6AfNMmZ60k52O3B0UoQSNzoD4pHnoROn7Zr1Cl7b7k//TgbhC/Sazq8eSjIku2+dme67AQn/sB3w==}\n+  /million@3.0.5:\n+    resolution: {integrity: sha512-4Ti0exibWnQGAyaxeuPEfW5gltQ23gK8rdRColorUMIS6sKXdsTKEaTg1R3X00fmJwonRWmTJQg3PeWAm/lvDw==}\n     hasBin: true\n     dependencies:\n       '@babel/core': 7.24.0",
    "output": "fix(deps): update dependency million to v3.0.5"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/components/data-table/data-table.tsx b/src/components/data-table/data-table.tsx\nindex eb5e01c..519fa0e 100644\n--- a/src/components/data-table/data-table.tsx\n+++ b/src/components/data-table/data-table.tsx\n@@ -62,7 +62,7 @@ interface DataTableProps<TData, TValue> {\n \n   /**\n    * The content to render in the floating bar on row selection, at the bottom of the table. When null, the floating bar is not rendered.\n-   * The datTable instance is passed as a prop to the floating bar content.\n+   * The dataTable instance is passed as a prop to the floating bar content.\n    * @default null\n    * @type React.ReactNode | null\n    * @example floatingBarContent={TasksTableFloatingBarContent(dataTable)}",
    "output": "fix(data-table): typo"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/app/_lib/actions.ts b/src/app/_lib/actions.ts\nindex 6c639c2..5ea41f3 100644\n--- a/src/app/_lib/actions.ts\n+++ b/src/app/_lib/actions.ts\n@@ -5,6 +5,7 @@ import { db } from \"@/db\"\n import { tasks, type Task } from \"@/db/schema\"\n import { faker } from \"@faker-js/faker\"\n import { eq } from \"drizzle-orm\"\n+import { customAlphabet } from \"nanoid\"\n import type { z } from \"zod\"\n \n import { createId } from \"@/lib/utils\"\n@@ -27,7 +28,7 @@ export async function seedTasks({\n   for (let i = 0; i < count; i++) {\n     allTasks.push({\n       id: createId(),\n-      code: `TASK-${faker.number.int({ min: 1000, max: 9999 })}`,\n+      code: `TASK-${customAlphabet(\"0123456789\", 4)()}`,\n       title: faker.hacker\n         .phrase()\n         .replace(/^./, (letter) => letter.toUpperCase()),",
    "output": "chore: unique code"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/tsconfig.json b/tsconfig.json\nindex 3ecf4d4..7dea41b 100644\n--- a/tsconfig.json\n+++ b/tsconfig.json\n@@ -1,11 +1,7 @@\n {\n   \"compilerOptions\": {\n     \"target\": \"es2017\",\n-    \"lib\": [\n-      \"dom\",\n-      \"dom.iterable\",\n-      \"esnext\"\n-    ],\n+    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n     \"allowJs\": true,\n     \"checkJs\": true,\n     \"skipLibCheck\": true,\n@@ -22,9 +18,7 @@\n     \"noUncheckedIndexedAccess\": true,\n     \"baseUrl\": \".\",\n     \"paths\": {\n-      \"@/*\": [\n-        \"./src/*\"\n-      ]\n+      \"@/*\": [\"./src/*\"]\n     },\n     \"plugins\": [\n       {\n@@ -39,10 +33,7 @@\n     \"**/*.tsx\",\n     \"**/*.cjs\",\n     \"**/*.mjs\",\n-    \".next/types/**/*.ts\",\n-    \"D:\\\\Code\\\\web\\\\shadcn-table\\\\.next/types/**/*.ts\"\n+    \".next/types/**/*.ts\"\n   ],\n-  \"exclude\": [\n-    \"node_modules\"\n-  ]\n+  \"exclude\": [\"node_modules\"]\n }",
    "output": "chore: sync"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/hooks/use-data-table.tsx b/src/hooks/use-data-table.tsx\nindex aa4879c..63991dd 100644\n--- a/src/hooks/use-data-table.tsx\n+++ b/src/hooks/use-data-table.tsx\n@@ -80,11 +80,9 @@ export function useDataTable<TData, TValue>({\n   const searchParams = useSearchParams()\n \n   // Search params\n-  const {\n-    page,\n-    per_page: perPage,\n-    sort,\n-  } = schema.parse(Object.fromEntries(searchParams))\n+  const { page, per_page, sort } = schema.parse(\n+    Object.fromEntries(searchParams)\n+  )\n   const [column, order] = sort?.split(\".\") ?? []\n \n   // Create query string\n@@ -144,7 +142,7 @@ export function useDataTable<TData, TValue>({\n   const [{ pageIndex, pageSize }, setPagination] =\n     React.useState<PaginationState>({\n       pageIndex: page - 1,\n-      pageSize: perPage,\n+      pageSize: per_page,\n     })\n \n   const pagination = React.useMemo(\n@@ -155,18 +153,11 @@ export function useDataTable<TData, TValue>({\n     [pageIndex, pageSize]\n   )\n \n-  React.useEffect(() => {\n-    setPagination({\n-      pageIndex: page - 1,\n-      pageSize: perPage,\n-    })\n-  }, [page, perPage])\n-\n   React.useEffect(() => {\n     router.push(\n       `${pathname}?${createQueryString({\n         page: pageIndex + 1,\n-        per_page: pageSize,\n+        per_page: per_page,\n       })}`,\n       {\n         scroll: false,",
    "output": "chore: remove extra useEffect in the useDataTable hook"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex db3ea73..4d5a69d 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -111,7 +111,7 @@ devDependencies:\n     version: 7.1.0(eslint@8.57.0)(typescript@5.3.3)\n   autoprefixer:\n     specifier: ^10.4.17\n-    version: 10.4.17(postcss@8.4.35)\n+    version: 10.4.18(postcss@8.4.35)\n   dotenv-cli:\n     specifier: ^7.3.0\n     version: 7.3.0\n@@ -2397,15 +2397,15 @@ packages:\n       has-symbols: 1.0.3\n     dev: true\n \n-  /autoprefixer@10.4.17(postcss@8.4.35):\n-    resolution: {integrity: sha512-/cpVNRLSfhOtcGflT13P2794gVSgmPgTR+erw5ifnMLZb0UnSlkK4tquLmkd3BhA+nLo5tX8Cu0upUsGKvKbmg==}\n+  /autoprefixer@10.4.18(postcss@8.4.35):\n+    resolution: {integrity: sha512-1DKbDfsr6KUElM6wg+0zRNkB/Q7WcKYAaK+pzXn+Xqmszm/5Xa9coeNdtP88Vi+dPzZnMjhge8GIV49ZQkDa+g==}\n     engines: {node: ^10 || ^12 || >=14}\n     hasBin: true\n     peerDependencies:\n       postcss: ^8.1.0\n     dependencies:\n       browserslist: 4.23.0\n-      caniuse-lite: 1.0.30001588\n+      caniuse-lite: 1.0.30001591\n       fraction.js: 4.3.7\n       normalize-range: 0.1.2\n       picocolors: 1.0.0\n@@ -2459,8 +2459,8 @@ packages:\n     engines: {node: ^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7}\n     hasBin: true\n     dependencies:\n-      caniuse-lite: 1.0.30001588\n-      electron-to-chromium: 1.4.673\n+      caniuse-lite: 1.0.30001591\n+      electron-to-chromium: 1.4.689\n       node-releases: 2.0.14\n       update-browserslist-db: 1.0.13(browserslist@4.23.0)\n \n@@ -2502,6 +2502,10 @@ packages:\n \n   /caniuse-lite@1.0.30001588:\n     resolution: {integrity: sha512-+hVY9jE44uKLkH0SrUTqxjxqNTOWHsbnQDIKjwkZ3lNTzUUVdBLBGXtj/q5Mp5u98r3droaZAewQuEDzjQdZlQ==}\n+    dev: false\n+\n+  /caniuse-lite@1.0.30001591:\n+    resolution: {integrity: sha512-PCzRMei/vXjJyL5mJtzNiUCKP59dm8Apqc3PH8gJkMnMXZGox93RbE76jHsmLwmIo6/3nsYIpJtx0O7u5PqFuQ==}\n \n   /chalk@2.4.2:\n     resolution: {integrity: sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==}\n@@ -2868,8 +2872,8 @@ packages:\n   /eastasianwidth@0.2.0:\n     resolution: {integrity: sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==}\n \n-  /electron-to-chromium@1.4.673:\n-    resolution: {integrity: sha512-zjqzx4N7xGdl5468G+vcgzDhaHkaYgVcf9MqgexcTqsl2UHSCmOj/Bi3HAprg4BZCpC7HyD8a6nZl6QAZf72gw==}\n+  /electron-to-chromium@1.4.689:\n+    resolution: {integrity: sha512-GatzRKnGPS1go29ep25reM94xxd1Wj8ritU0yRhCJ/tr1Bg8gKnm6R9O/yPOhGQBoLMZ9ezfrpghNaTw97C/PQ==}\n \n   /emoji-regex@8.0.0:\n     resolution: {integrity: sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==}",
    "output": "chore(deps): update dependency autoprefixer to v10.4.18"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex ff2a55d..db3ea73 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -73,7 +73,7 @@ dependencies:\n     version: 18.2.0(react@18.2.0)\n   sonner:\n     specifier: ^1.4.0\n-    version: 1.4.2(react-dom@18.2.0)(react@18.2.0)\n+    version: 1.4.3(react-dom@18.2.0)(react@18.2.0)\n   tailwind-merge:\n     specifier: ^2.2.1\n     version: 2.2.1\n@@ -4919,8 +4919,8 @@ packages:\n     engines: {node: '>=8'}\n     dev: true\n \n-  /sonner@1.4.2(react-dom@18.2.0)(react@18.2.0):\n-    resolution: {integrity: sha512-x3Kfzfhb56V/ErvUnH5dZcsu6QkZpyIlRAogO4vAbN+AkBsA/8CFqOV+5djqbE5pQCpejtO4JBWL1zRj2sO/Vg==}\n+  /sonner@1.4.3(react-dom@18.2.0)(react@18.2.0):\n+    resolution: {integrity: sha512-SArYlHbkjqRuLiR0iGY2ZSr09oOrxw081ZZkQPfXrs8aZQLIBOLOdzTYxGJB5yIZ7qL56UEPmrX1YqbODwG0Lw==}\n     peerDependencies:\n       react: ^18.0.0\n       react-dom: ^18.0.0",
    "output": "fix(deps): update dependency sonner to v1.4.3"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 3459dce..4616d5c 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -96,7 +96,7 @@ devDependencies:\n     version: 8.56.5\n   '@types/node':\n     specifier: ^20.11.19\n-    version: 20.11.22\n+    version: 20.11.23\n   '@types/react':\n     specifier: ^18.2.56\n     version: 18.2.60\n@@ -1993,8 +1993,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.11.22:\n-    resolution: {integrity: sha512-/G+IxWxma6V3E+pqK1tSl2Fo1kl41pK1yeCyDsgkF9WlVAme4j5ISYM2zR11bgLFJGLN5sVK40T4RJNuiZbEjA==}\n+  /@types/node@20.11.23:\n+    resolution: {integrity: sha512-ZUarKKfQuRILSNYt32FuPL20HS7XwNT7/uRwSV8tiHWfyyVwDLYZNF6DZKc2bove++pgfsXn9sUwII/OsQ82cQ==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.11.23"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 2d4a6a7..e7c2462 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -93,7 +93,7 @@ devDependencies:\n     version: 4.1.1(prettier@3.2.5)\n   '@types/eslint':\n     specifier: ^8.56.2\n-    version: 8.56.4\n+    version: 8.56.5\n   '@types/node':\n     specifier: ^20.11.19\n     version: 20.11.22\n@@ -1975,8 +1975,8 @@ packages:\n     engines: {node: '>=12'}\n     dev: false\n \n-  /@types/eslint@8.56.4:\n-    resolution: {integrity: sha512-lG1GLUnL5vuRBGb3MgWUWLdGMH2Hps+pERuyQXCfWozuGKdnhf9Pbg4pkcrVUHjKrU7Rl+GCZ/299ObBXZFAxg==}\n+  /@types/eslint@8.56.5:\n+    resolution: {integrity: sha512-u5/YPJHo1tvkSF2CE0USEkxon82Z5DBy2xR+qfyYNszpX9qcs4sT6uq2kBbj4BXY1+DBGDPnrhMZV3pKWGNukw==}\n     dependencies:\n       '@types/estree': 1.0.5\n       '@types/json-schema': 7.0.15",
    "output": "chore(deps): update dependency @types/eslint to v8.56.5"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 23a0690..2d4a6a7 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -37,7 +37,7 @@ dependencies:\n     version: 0.9.2(typescript@5.3.3)(zod@3.22.4)\n   '@tanstack/react-table':\n     specifier: ^8.12.0\n-    version: 8.13.0(react-dom@18.2.0)(react@18.2.0)\n+    version: 8.13.2(react-dom@18.2.0)(react@18.2.0)\n   class-variance-authority:\n     specifier: ^0.7.0\n     version: 0.7.0\n@@ -1958,20 +1958,20 @@ packages:\n       zod: 3.22.4\n     dev: false\n \n-  /@tanstack/react-table@8.13.0(react-dom@18.2.0)(react@18.2.0):\n-    resolution: {integrity: sha512-wUB6SGQS70SzSczInfiIuCRjGBDcqqMtgIp75fscHWkH8hSKLkuWLCDC5V5or57UrLew1WD1YyY+XheistAZNQ==}\n+  /@tanstack/react-table@8.13.2(react-dom@18.2.0)(react@18.2.0):\n+    resolution: {integrity: sha512-b6mR3mYkjRtJ443QZh9sc7CvGTce81J35F/XMr0OoWbx0KIM7TTTdyNP2XKObvkLpYnLpCrYDwI3CZnLezWvpg==}\n     engines: {node: '>=12'}\n     peerDependencies:\n       react: '>=16'\n       react-dom: '>=16'\n     dependencies:\n-      '@tanstack/table-core': 8.13.0\n+      '@tanstack/table-core': 8.13.2\n       react: 18.2.0\n       react-dom: 18.2.0(react@18.2.0)\n     dev: false\n \n-  /@tanstack/table-core@8.13.0:\n-    resolution: {integrity: sha512-/OU4oWkrhSDeOTtt8CNq8XZQ3eS86rCJvCZD3ev7XIdXtKo0LOGp9hLqoYeaPgDNW7D/WXP2IHAA1hRVFICF5A==}\n+  /@tanstack/table-core@8.13.2:\n+    resolution: {integrity: sha512-/2saD1lWBUV6/uNAwrsg2tw58uvMJ07bO2F1IWMxjFRkJiXKQRuc3Oq2aufeobD3873+4oIM/DRySIw7+QsPPw==}\n     engines: {node: '>=12'}\n     dev: false\n ",
    "output": "fix(deps): update dependency @tanstack/react-table to v8.13.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 56683d7..23a0690 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -96,7 +96,7 @@ devDependencies:\n     version: 8.56.4\n   '@types/node':\n     specifier: ^20.11.19\n-    version: 20.11.21\n+    version: 20.11.22\n   '@types/react':\n     specifier: ^18.2.56\n     version: 18.2.60\n@@ -1993,8 +1993,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.11.21:\n-    resolution: {integrity: sha512-/ySDLGscFPNasfqStUuWWPfL78jompfIoVzLJPVVAHBh6rpG68+pI2Gk+fNLeI8/f1yPYL4s46EleVIc20F1Ow==}\n+  /@types/node@20.11.22:\n+    resolution: {integrity: sha512-/G+IxWxma6V3E+pqK1tSl2Fo1kl41pK1yeCyDsgkF9WlVAme4j5ISYM2zR11bgLFJGLN5sVK40T4RJNuiZbEjA==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.11.22"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 0e5ef54..09b3c4e 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -37,7 +37,7 @@ dependencies:\n     version: 0.9.2(typescript@5.3.3)(zod@3.22.4)\n   '@tanstack/react-table':\n     specifier: ^8.12.0\n-    version: 8.12.0(react-dom@18.2.0)(react@18.2.0)\n+    version: 8.13.0(react-dom@18.2.0)(react@18.2.0)\n   class-variance-authority:\n     specifier: ^0.7.0\n     version: 0.7.0\n@@ -1958,20 +1958,20 @@ packages:\n       zod: 3.22.4\n     dev: false\n \n-  /@tanstack/react-table@8.12.0(react-dom@18.2.0)(react@18.2.0):\n-    resolution: {integrity: sha512-LlEQ1Gpz4bfpiET+qmle4BhKDgKN3Y/sssc+O/wLqX8HRtjV+nhusYbllZlutZfMR8oeef83whKTj/VhaV8EeA==}\n+  /@tanstack/react-table@8.13.0(react-dom@18.2.0)(react@18.2.0):\n+    resolution: {integrity: sha512-wUB6SGQS70SzSczInfiIuCRjGBDcqqMtgIp75fscHWkH8hSKLkuWLCDC5V5or57UrLew1WD1YyY+XheistAZNQ==}\n     engines: {node: '>=12'}\n     peerDependencies:\n       react: '>=16'\n       react-dom: '>=16'\n     dependencies:\n-      '@tanstack/table-core': 8.12.0\n+      '@tanstack/table-core': 8.13.0\n       react: 18.2.0\n       react-dom: 18.2.0(react@18.2.0)\n     dev: false\n \n-  /@tanstack/table-core@8.12.0:\n-    resolution: {integrity: sha512-cq/ylWVrOwixmwNXQjgZaQw1Izf7+nPxjczum7paAnMtwPg1S2qRAJU+Jb8rEBUWm69voC/zcChmePlk2hc6ug==}\n+  /@tanstack/table-core@8.13.0:\n+    resolution: {integrity: sha512-/OU4oWkrhSDeOTtt8CNq8XZQ3eS86rCJvCZD3ev7XIdXtKo0LOGp9hLqoYeaPgDNW7D/WXP2IHAA1hRVFICF5A==}\n     engines: {node: '>=12'}\n     dev: false\n ",
    "output": "fix(deps): update dependency @tanstack/react-table to v8.13.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex bfd9b78..5db0b08 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -96,7 +96,7 @@ devDependencies:\n     version: 8.56.4\n   '@types/node':\n     specifier: ^20.11.19\n-    version: 20.11.20\n+    version: 20.11.21\n   '@types/react':\n     specifier: ^18.2.56\n     version: 18.2.60\n@@ -1993,8 +1993,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.11.20:\n-    resolution: {integrity: sha512-7/rR21OS+fq8IyHTgtLkDK949uzsa6n8BkziAKtPVpugIkO6D+/ooXMvzXxDnZrmtXVfjb1bKQafYpb8s89LOg==}\n+  /@types/node@20.11.21:\n+    resolution: {integrity: sha512-/ySDLGscFPNasfqStUuWWPfL78jompfIoVzLJPVVAHBh6rpG68+pI2Gk+fNLeI8/f1yPYL4s46EleVIc20F1Ow==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.11.21"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex cd59d92..bfd9b78 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -93,7 +93,7 @@ devDependencies:\n     version: 4.1.1(prettier@3.2.5)\n   '@types/eslint':\n     specifier: ^8.56.2\n-    version: 8.56.3\n+    version: 8.56.4\n   '@types/node':\n     specifier: ^20.11.19\n     version: 20.11.20\n@@ -1975,8 +1975,8 @@ packages:\n     engines: {node: '>=12'}\n     dev: false\n \n-  /@types/eslint@8.56.3:\n-    resolution: {integrity: sha512-PvSf1wfv2wJpVIFUMSb+i4PvqNYkB9Rkp9ZDO3oaWzq4SKhsQk4mrMBr3ZH06I0hKrVGLBacmgl8JM4WVjb9dg==}\n+  /@types/eslint@8.56.4:\n+    resolution: {integrity: sha512-lG1GLUnL5vuRBGb3MgWUWLdGMH2Hps+pERuyQXCfWozuGKdnhf9Pbg4pkcrVUHjKrU7Rl+GCZ/299ObBXZFAxg==}\n     dependencies:\n       '@types/estree': 1.0.5\n       '@types/json-schema': 7.0.15",
    "output": "chore(deps): update dependency @types/eslint to v8.56.4"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 0b49590..f643ab9 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -73,7 +73,7 @@ dependencies:\n     version: 18.2.0(react@18.2.0)\n   sonner:\n     specifier: ^1.4.0\n-    version: 1.4.1(react-dom@18.2.0)(react@18.2.0)\n+    version: 1.4.2(react-dom@18.2.0)(react@18.2.0)\n   tailwind-merge:\n     specifier: ^2.2.1\n     version: 2.2.1\n@@ -4919,8 +4919,8 @@ packages:\n     engines: {node: '>=8'}\n     dev: true\n \n-  /sonner@1.4.1(react-dom@18.2.0)(react@18.2.0):\n-    resolution: {integrity: sha512-KJcFbMF+z2OMSJ9H+N6mrk/ffnEzuyLFlHoza/HQvNyiACoY958VtFdC7xD9D74ttzA+kcS1YIJOsNwbKWDsHw==}\n+  /sonner@1.4.2(react-dom@18.2.0)(react@18.2.0):\n+    resolution: {integrity: sha512-x3Kfzfhb56V/ErvUnH5dZcsu6QkZpyIlRAogO4vAbN+AkBsA/8CFqOV+5djqbE5pQCpejtO4JBWL1zRj2sO/Vg==}\n     peerDependencies:\n       react: ^18.0.0\n       react-dom: ^18.0.0",
    "output": "fix(deps): update dependency sonner to v1.4.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 91cca08..0d6ccb2 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -49,7 +49,7 @@ dependencies:\n     version: 0.2.1(@types/react@18.2.58)(react-dom@18.2.0)(react@18.2.0)\n   drizzle-orm:\n     specifier: ^0.29.3\n-    version: 0.29.4(@planetscale/database@1.16.0)(@types/react@18.2.58)(mysql2@3.9.1)(react@18.2.0)\n+    version: 0.29.4(@planetscale/database@1.16.0)(@types/react@18.2.58)(mysql2@3.9.2)(react@18.2.0)\n   geist:\n     specifier: ^1.2.2\n     version: 1.2.2(next@14.1.1-canary.72)\n@@ -132,7 +132,7 @@ devDependencies:\n     version: 3.14.3(tailwindcss@3.4.1)\n   mysql2:\n     specifier: ^3.9.1\n-    version: 3.9.1\n+    version: 3.9.2\n   postcss:\n     specifier: ^8.4.35\n     version: 8.4.35\n@@ -2788,7 +2788,7 @@ packages:\n       - supports-color\n     dev: true\n \n-  /drizzle-orm@0.29.4(@planetscale/database@1.16.0)(@types/react@18.2.58)(mysql2@3.9.1)(react@18.2.0):\n+  /drizzle-orm@0.29.4(@planetscale/database@1.16.0)(@types/react@18.2.58)(mysql2@3.9.2)(react@18.2.0):\n     resolution: {integrity: sha512-ZnSM8TAxFhzH7p1s3+w3pRE/eKaOeNkH9SKitm717pubDVVcV2I0BCDBPGKV+pe02+wMfw37ntlTcCyo2rA3IA==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n@@ -2861,7 +2861,7 @@ packages:\n     dependencies:\n       '@planetscale/database': 1.16.0\n       '@types/react': 18.2.58\n-      mysql2: 3.9.1\n+      mysql2: 3.9.2\n       react: 18.2.0\n     dev: false\n \n@@ -4237,8 +4237,8 @@ packages:\n     resolution: {integrity: sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==}\n     dev: true\n \n-  /mysql2@3.9.1:\n-    resolution: {integrity: sha512-3njoWAAhGBYy0tWBabqUQcLtczZUxrmmtc2vszQUekg3kTJyZ5/IeLC3Fo04u6y6Iy5Sba7pIIa2P/gs8D3ZeQ==}\n+  /mysql2@3.9.2:\n+    resolution: {integrity: sha512-3Cwg/UuRkAv/wm6RhtPE5L7JlPB877vwSF6gfLAS68H+zhH+u5oa3AieqEd0D0/kC3W7qIhYbH419f7O9i/5nw==}\n     engines: {node: '>= 8.0'}\n     dependencies:\n       denque: 2.1.0",
    "output": "chore(deps): update dependency mysql2 to v3.9.2"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 5d924bb..048bd2d 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -73,7 +73,7 @@ dependencies:\n     version: 18.2.0(react@18.2.0)\n   sonner:\n     specifier: ^1.4.0\n-    version: 1.4.0(react-dom@18.2.0)(react@18.2.0)\n+    version: 1.4.1(react-dom@18.2.0)(react@18.2.0)\n   tailwind-merge:\n     specifier: ^2.2.1\n     version: 2.2.1\n@@ -4919,8 +4919,8 @@ packages:\n     engines: {node: '>=8'}\n     dev: true\n \n-  /sonner@1.4.0(react-dom@18.2.0)(react@18.2.0):\n-    resolution: {integrity: sha512-nvkTsIuOmi9e5Wz5If8ldasJjZNVfwiXYijBi2dbijvTQnQppvMcXTFNxL/NUFWlI2yJ1JX7TREDsg+gYm9WyA==}\n+  /sonner@1.4.1(react-dom@18.2.0)(react@18.2.0):\n+    resolution: {integrity: sha512-KJcFbMF+z2OMSJ9H+N6mrk/ffnEzuyLFlHoza/HQvNyiACoY958VtFdC7xD9D74ttzA+kcS1YIJOsNwbKWDsHw==}\n     peerDependencies:\n       react: ^18.0.0\n       react-dom: ^18.0.0",
    "output": "fix(deps): update dependency sonner to v1.4.1"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 4f7edfd..5d924bb 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -58,7 +58,7 @@ dependencies:\n     version: 3.0.3\n   nanoid:\n     specifier: ^5.0.5\n-    version: 5.0.5\n+    version: 5.0.6\n   next:\n     specifier: 14.1.1-canary.72\n     version: 14.1.1-canary.72(@babel/core@7.23.9)(react-dom@18.2.0)(react@18.2.0)\n@@ -4268,8 +4268,8 @@ packages:\n     engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1}\n     hasBin: true\n \n-  /nanoid@5.0.5:\n-    resolution: {integrity: sha512-/Veqm+QKsyMY3kqi4faWplnY1u+VuKO3dD2binyPIybP31DRO29bPF+1mszgLnrR2KqSLceFLBNw0zmvDzN1QQ==}\n+  /nanoid@5.0.6:\n+    resolution: {integrity: sha512-rRq0eMHoGZxlvaFOUdK1Ev83Bd1IgzzR+WJ3IbDJ7QOSdAxYjlurSPqFs9s4lJg29RT6nPwizFtJhQS6V5xgiA==}\n     engines: {node: ^18 || >=20}\n     hasBin: true\n     dev: false",
    "output": "fix(deps): update dependency nanoid to v5.0.6"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex d4f6695..4f7edfd 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -49,7 +49,7 @@ dependencies:\n     version: 0.2.1(@types/react@18.2.58)(react-dom@18.2.0)(react@18.2.0)\n   drizzle-orm:\n     specifier: ^0.29.3\n-    version: 0.29.3(@planetscale/database@1.16.0)(@types/react@18.2.58)(mysql2@3.9.1)(react@18.2.0)\n+    version: 0.29.4(@planetscale/database@1.16.0)(@types/react@18.2.58)(mysql2@3.9.1)(react@18.2.0)\n   geist:\n     specifier: ^1.2.2\n     version: 1.2.2(next@14.1.1-canary.72)\n@@ -2788,8 +2788,8 @@ packages:\n       - supports-color\n     dev: true\n \n-  /drizzle-orm@0.29.3(@planetscale/database@1.16.0)(@types/react@18.2.58)(mysql2@3.9.1)(react@18.2.0):\n-    resolution: {integrity: sha512-uSE027csliGSGYD0pqtM+SAQATMREb3eSM/U8s6r+Y0RFwTKwftnwwSkqx3oS65UBgqDOM0gMTl5UGNpt6lW0A==}\n+  /drizzle-orm@0.29.4(@planetscale/database@1.16.0)(@types/react@18.2.58)(mysql2@3.9.1)(react@18.2.0):\n+    resolution: {integrity: sha512-ZnSM8TAxFhzH7p1s3+w3pRE/eKaOeNkH9SKitm717pubDVVcV2I0BCDBPGKV+pe02+wMfw37ntlTcCyo2rA3IA==}\n     peerDependencies:\n       '@aws-sdk/client-rds-data': '>=3'\n       '@cloudflare/workers-types': '>=3'",
    "output": "fix(deps): update dependency drizzle-orm to v0.29.4"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex 8bc8e16..6aaa2cc 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -129,7 +129,7 @@ devDependencies:\n     version: 9.1.0(eslint@8.56.0)\n   eslint-plugin-tailwindcss:\n     specifier: ^3.14.2\n-    version: 3.14.2(tailwindcss@3.4.1)\n+    version: 3.14.3(tailwindcss@3.4.1)\n   mysql2:\n     specifier: ^3.9.1\n     version: 3.9.1\n@@ -3337,8 +3337,8 @@ packages:\n       string.prototype.matchall: 4.0.10\n     dev: true\n \n-  /eslint-plugin-tailwindcss@3.14.2(tailwindcss@3.4.1):\n-    resolution: {integrity: sha512-fNzdf4poZP2yQC0xC2prQxMuArMSb5mnellLQvwb9HC3NcLzxs+0IVKWIg1BqUqyui0c+bbjMmhWcKUWK67SLQ==}\n+  /eslint-plugin-tailwindcss@3.14.3(tailwindcss@3.4.1):\n+    resolution: {integrity: sha512-1MKT8CrVuqVJleHxb7ICHsF2QwO0G+VJ28athTtlcOkccp0qmwK7nCUa1C9paCZ+VVgQU4fonsjLz/wUxoMHJQ==}\n     engines: {node: '>=12.13.0'}\n     peerDependencies:\n       tailwindcss: ^3.4.0",
    "output": "chore(deps): update dependency eslint-plugin-tailwindcss to v3.14.3"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml\nindex a4663e2..3cbfdc1 100644\n--- a/pnpm-lock.yaml\n+++ b/pnpm-lock.yaml\n@@ -96,7 +96,7 @@ devDependencies:\n     version: 8.56.2\n   '@types/node':\n     specifier: ^20.11.19\n-    version: 20.11.19\n+    version: 20.11.20\n   '@types/react':\n     specifier: ^18.2.56\n     version: 18.2.56\n@@ -1993,8 +1993,8 @@ packages:\n     resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n     dev: true\n \n-  /@types/node@20.11.19:\n-    resolution: {integrity: sha512-7xMnVEcZFu0DikYjWOlRq7NTPETrm7teqUT2WkQjrTIkEgUyyGdWsj/Zg8bEJt5TNklzbPD1X3fqfsHw3SpapQ==}\n+  /@types/node@20.11.20:\n+    resolution: {integrity: sha512-7/rR21OS+fq8IyHTgtLkDK949uzsa6n8BkziAKtPVpugIkO6D+/ooXMvzXxDnZrmtXVfjb1bKQafYpb8s89LOg==}\n     dependencies:\n       undici-types: 5.26.5\n     dev: true",
    "output": "chore(deps): update dependency @types/node to v20.11.20"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/src/hooks/use-data-table.tsx b/src/hooks/use-data-table.tsx\nindex 8110c0d..aa4879c 100644\n--- a/src/hooks/use-data-table.tsx\n+++ b/src/hooks/use-data-table.tsx\n@@ -213,7 +213,15 @@ export function useDataTable<TData, TValue>({\n     return filterableColumns.find((column) => column.id === filter.id)\n   })\n \n+  const [mounted, setMounted] = React.useState(false)\n+\n   React.useEffect(() => {\n+    // Prevent resetting the page on initial render\n+    if (!mounted) {\n+      setMounted(true)\n+      return\n+    }\n+\n     // Initialize new params\n     const newParamsObject = {\n       page: 1,\ndiff --git a/tailwind.config.ts b/tailwind.config.ts\nindex c5630a7..032e25d 100644\n--- a/tailwind.config.ts\n+++ b/tailwind.config.ts\n@@ -2,7 +2,8 @@ import { type Config } from \"tailwindcss\"\n import { fontFamily } from \"tailwindcss/defaultTheme\"\n \n export default {\n-  content: [\"./src/**/*.tsx\"],\n+  darkMode: [\"class\"],\n+  content: [\"./src/**/*.{js,ts,jsx,tsx,mdx}\"],\n   theme: {\n     container: {\n       center: true,",
    "output": "fix: prevent resetting the page on initial render"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 1bb3766..99bc4f9 100644\n--- a/package.json\n+++ b/package.json\n@@ -77,5 +77,5 @@\n   \"ct3aMetadata\": {\n     \"initVersion\": \"7.23.1\"\n   },\n-  \"packageManager\": \"pnpm@8.15.3\"\n+  \"packageManager\": \"pnpm@8.15.4\"\n }",
    "output": "chore(deps): update pnpm to v8.15.4"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/.github/workflows/code-check.yml b/.github/workflows/code-check.yml\nindex 8fd1509..38a6d7c 100644\n--- a/.github/workflows/code-check.yml\n+++ b/.github/workflows/code-check.yml\n@@ -20,7 +20,7 @@ jobs:\n         with:\n           node-version: 20\n \n-      - uses: pnpm/action-setup@v2.4.0\n+      - uses: pnpm/action-setup@v3.0.0\n         name: Install pnpm\n         id: pnpm-install\n         with:\n@@ -58,7 +58,7 @@ jobs:\n         with:\n           node-version: 20\n \n-      - uses: pnpm/action-setup@v2.4.0\n+      - uses: pnpm/action-setup@v3.0.0\n         name: Install pnpm\n         id: pnpm-install\n         with:\n@@ -98,7 +98,7 @@ jobs:\n         with:\n           node-version: 20\n \n-      - uses: pnpm/action-setup@v2.4.0\n+      - uses: pnpm/action-setup@v3.0.0\n         name: Install pnpm\n         id: pnpm-install\n         with:",
    "output": "chore(deps): update pnpm/action-setup action to v3"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/.github/workflows/code-check.yml b/.github/workflows/code-check.yml\nindex c919bde..8fd1509 100644\n--- a/.github/workflows/code-check.yml\n+++ b/.github/workflows/code-check.yml\n@@ -16,7 +16,7 @@ jobs:\n           fetch-depth: 0\n \n       - name: Install Node.js\n-        uses: actions/setup-node@v3\n+        uses: actions/setup-node@v4\n         with:\n           node-version: 20\n \n@@ -54,7 +54,7 @@ jobs:\n           fetch-depth: 0\n \n       - name: Install Node.js\n-        uses: actions/setup-node@v3\n+        uses: actions/setup-node@v4\n         with:\n           node-version: 20\n \n@@ -94,7 +94,7 @@ jobs:\n           fetch-depth: 0\n \n       - name: Install Node.js\n-        uses: actions/setup-node@v3\n+        uses: actions/setup-node@v4\n         with:\n           node-version: 20\n ",
    "output": "chore(deps): update actions/setup-node action to v4"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/.github/workflows/code-check.yml b/.github/workflows/code-check.yml\nindex 602be7d..c919bde 100644\n--- a/.github/workflows/code-check.yml\n+++ b/.github/workflows/code-check.yml\n@@ -11,7 +11,7 @@ jobs:\n     runs-on: ubuntu-latest\n     name: Lint\n     steps:\n-      - uses: actions/checkout@v3\n+      - uses: actions/checkout@v4\n         with:\n           fetch-depth: 0\n \n@@ -49,7 +49,7 @@ jobs:\n     runs-on: ubuntu-latest\n     name: Format\n     steps:\n-      - uses: actions/checkout@v3\n+      - uses: actions/checkout@v4\n         with:\n           fetch-depth: 0\n \n@@ -89,7 +89,7 @@ jobs:\n     runs-on: ubuntu-latest\n     name: Typecheck\n     steps:\n-      - uses: actions/checkout@v3\n+      - uses: actions/checkout@v4\n         with:\n           fetch-depth: 0\n ",
    "output": "chore(deps): update actions/checkout action to v4"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/.github/workflows/code-check.yml b/.github/workflows/code-check.yml\nindex b854647..602be7d 100644\n--- a/.github/workflows/code-check.yml\n+++ b/.github/workflows/code-check.yml\n@@ -31,7 +31,7 @@ jobs:\n         id: pnpm-cache\n         run: |\n           echo \"pnpm_cache_dir=$(pnpm store path)\" >> $GITHUB_OUTPUT\n-      - uses: actions/cache@v3\n+      - uses: actions/cache@v4\n         name: Setup pnpm cache\n         with:\n           path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}\n@@ -70,7 +70,7 @@ jobs:\n         run: |\n           echo \"pnpm_cache_dir=$(pnpm store path)\" >> $GITHUB_OUTPUT\n \n-      - uses: actions/cache@v3\n+      - uses: actions/cache@v4\n         name: Setup pnpm cache\n         with:\n           path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}\n@@ -109,7 +109,7 @@ jobs:\n         id: pnpm-cache\n         run: |\n           echo \"pnpm_cache_dir=$(pnpm store path)\" >> $GITHUB_OUTPUT\n-      - uses: actions/cache@v3\n+      - uses: actions/cache@v4\n         name: Setup pnpm cache\n         with:\n           path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}",
    "output": "chore(deps): update actions/cache action to v4"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/renovate.json b/renovate.json\nindex 5db72dd..c5c1d0d 100644\n--- a/renovate.json\n+++ b/renovate.json\n@@ -1,6 +1,5 @@\n {\n   \"$schema\": \"https://docs.renovatebot.com/renovate-schema.json\",\n-  \"extends\": [\n-    \"config:recommended\"\n-  ]\n+  \"extends\": [\"config:base\"],\n+  \"automerge\": true\n }",
    "output": "chore: update renovate.json"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/renovate.json b/renovate.json\ndeleted file mode 100644\nindex c5c1d0d..0000000\n--- a/renovate.json\n+++ /dev/null\n@@ -1,5 +0,0 @@\n-{\n-  \"$schema\": \"https://docs.renovatebot.com/renovate-schema.json\",\n-  \"extends\": [\"config:base\"],\n-  \"automerge\": true\n-}",
    "output": "chore: remove renovate"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/.github/workflows/code-check.yml b/.github/workflows/code-check.yml\nindex e117e5d..b854647 100644\n--- a/.github/workflows/code-check.yml\n+++ b/.github/workflows/code-check.yml\n@@ -20,7 +20,7 @@ jobs:\n         with:\n           node-version: 20\n \n-      - uses: pnpm/action-setup@v2.2.4\n+      - uses: pnpm/action-setup@v2.4.0\n         name: Install pnpm\n         id: pnpm-install\n         with:\n@@ -58,7 +58,7 @@ jobs:\n         with:\n           node-version: 20\n \n-      - uses: pnpm/action-setup@v2.2.4\n+      - uses: pnpm/action-setup@v2.4.0\n         name: Install pnpm\n         id: pnpm-install\n         with:\n@@ -98,7 +98,7 @@ jobs:\n         with:\n           node-version: 20\n \n-      - uses: pnpm/action-setup@v2.2.4\n+      - uses: pnpm/action-setup@v2.4.0\n         name: Install pnpm\n         id: pnpm-install\n         with:",
    "output": "chore(deps): update pnpm/action-setup action to v2.4.0"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/package.json b/package.json\nindex 6ce1f54..394ef48 100644\n--- a/package.json\n+++ b/package.json\n@@ -77,5 +77,5 @@\n   \"ct3aMetadata\": {\n     \"initVersion\": \"7.23.1\"\n   },\n-  \"packageManager\": \"pnpm@8.6.12\"\n+  \"packageManager\": \"pnpm@8.15.3\"\n }",
    "output": "chore(deps): update pnpm to v8.15.3"
  },
  {
    "instruction": "You are an expert at analyzing Git diffs and classifying their changes in short, 10-15 word summaries. Make sure to read the diffs line-by-line for the provided diff by reading what has been added, and removed on the currently unstaged files in the repository. Then proceed to classify it with one of the tags, that are the following: feat: A new feature, fix: A bug fix, docs: Documentation only changes, style: Changes that do not affect the meaning of the code, refactor: A code change that neither fixes a bug nor adds a feature, perf: A code change that improves performance, test: Adding missing tests or correcting existing tests, build: Changes that affect the build system or external dependencies, ci: Changes to CI configuration files and scripts, chore: Other changes that don't modify src or test files. You can also use these tags with scopes in parentheses to provide more context, for example: fix(deps): Update dependency versions, feat(auth): Add new authentication method. Your response should be a short 10-15 word summary starting with the tag. For example: 'feat: implemented user authentication with JWT tokens' or 'fix(deps): updated npm dependencies to fix security vulnerabilities'. By any means, do not exceed the 15 word limit, and do not produce anything more than this one sentence.",
    "input": "diff --git a/renovate.json b/renovate.json\nnew file mode 100644\nindex 0000000..c5c1d0d\n--- /dev/null\n+++ b/renovate.json\n@@ -0,0 +1,5 @@\n+{\n+  \"$schema\": \"https://docs.renovatebot.com/renovate-schema.json\",\n+  \"extends\": [\"config:base\"],\n+  \"automerge\": true\n+}",
    "output": "chore: add renovate"
  }
]